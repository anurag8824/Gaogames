{"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"// server.js - Merged Code\n\n// Load environment variables first\nrequire('dotenv/config'); // Loads variables into process.env\nrequire('dotenv').config({\n  path: '../.env'\n}); // Optional: Load from specific .env file if needed\n\nconst express = require('express');\nconst http = require('http'); // Require http explicitly\nconst path = require('path'); // Require path for resolving paths\nconst {\n  Server\n} = require('socket.io'); // Import Server class for options\nconst jwt = require('jsonwebtoken'); // Require jsonwebtoken for auth\nconst cookieParser = require('cookie-parser');\n\n// --- Configuration & Route Imports ---\nconst configViewEngine = require('./config/configEngine'); // Your view engine setup function\nconst routes = require('./routes/web'); // Your main web routes object { initWebRouter: ... }\nconst socketHandler = require('../src/public/DragonTiger/assets/socket.io/socket'); // Your Dragon Tiger game socket logic handler\nconst cronJobContronler = require('./controllers/cronJobContronler'); // Your cron job logic\nconst socketIoController = require('./controllers/socketIoController'); // Your other socket logic (admin messages?)\nconst aviatorController = require('./controllers/aviatorController');\n// const Dragon = require('./controllers/dragonController');\n\n// Your Aviator game logic\n\n// --- Constants ---\nconst YOUR_JWT_SECRET = process.env.JWT_SECRET || 'your_strong_secret_key'; // Use the same secret as in login controller\nconst port = process.env.PORT || 3000; // Use environment variable or default\n\n// --- App & Server Initialization ---\nconst app = express();\nconst server = http.createServer(app); // Use http.createServer\nconst io = new Server(server, {\n  // Initialize Socket.IO with options\n  cors: {\n    origin: '*' // Configure CORS properly for production\n    // methods: [\"GET\", \"POST\"] // Optional: specify allowed methods\n  }\n});\n\n// --- Express Middleware ---\napp.use(cookieParser()); // For parsing cookies if needed by auth/routes\napp.use(express.json()); // For parsing JSON request bodies\napp.use(express.urlencoded({\n  extended: true\n})); // For parsing URL-encoded request bodies\n\n// --- Static File Serving ---\n// Configure static paths relative to THIS server.js file's location\n// Assuming 'public' (for css, js, images) is in the project root (GoaGamesStandard)\nconst publicPath = path.resolve(__dirname, '../public'); // Adjust '../' based on server.js location relative to root\nconsole.log(\"Setting static files directory to:\", publicPath);\napp.use(express.static(publicPath));\n\n// Assuming 'uploads' is in the project root\nconst uploadsPath = path.resolve(__dirname, '../uploads'); // Adjust '../' based on server.js location relative to root\nconsole.log(\"Setting uploads directory to:\", uploadsPath);\napp.use('/uploads', express.static(uploadsPath)); // Serve uploads folder at /uploads route\n\n// --- View Engine Setup ---\n// Make sure configViewEngine sets the correct ABSOLUTE path to your views directory\n// (e.g., using path.resolve(__dirname, '../src/views') inside configEngine.js)\nconfigViewEngine(app);\n\n// --- Initialize Web Routes ---\n// Ensure ./routes/web exports { initWebRouter } and contains all necessary routes\nroutes.initWebRouter(app);\n\n// --- Socket.IO Authentication Middleware (From index.js) ---\nio.use((socket, next) => {\n  console.log(`Socket attempting connection (${socket.id}). Checking token...`);\n  // const token = socket.handshake.auth.token; // Get token from client connection attempt\n\n  // if (!token) {\n  //     console.error(`Socket connection rejected (${socket.id}): No token provided.`);\n  //     // Disconnect immediately if no token\n  //     // socket.disconnect(true); // Optional: Force disconnect\n  //     return next(new Error('Authentication error: No token provided')); // Reject connection middleware\n  // }\n\n  // jwt.verify(token, YOUR_JWT_SECRET, (err, decoded) => {\n  //     if (err) {\n  //         console.error(`Socket connection rejected (${socket.id}): Invalid token. ${err.message}`);\n  //         // Disconnect immediately on invalid token\n  //         // socket.disconnect(true); // Optional: Force disconnect\n  //         return next(new Error('Authentication error: Invalid token')); // Reject connection middleware\n  //     }\n  // Token is valid: Attach user info to the socket object\n  // socket.user = decoded; // Contains { userId: ..., phone: ... } etc. from JWT payload\n  console.log(`Socket authenticated (${socket.id})`);\n  next(); // Allow the connection\n});\n\n// --- Initialize Socket Event Handlers ---\n// 1. Generic Dragon Tiger Handler (from index.js/socket.js)\n// This will handle 'place_final_bets' etc. for authenticated users\nsocketHandler(io);\n\n// 2. Other Specific Socket Controllers (from original server.js)\n// These likely handle different events or namespaces\nsocketIoController.sendMessageAdmin(io); // Handles admin messages?\naviatorController.Aviator(io); // Handles Aviator game logic?\n// Dragon.Dragon(io);\n// Dragon.userDekh(io);\n\n// --- Cron Jobs ---\n// Cron jobs operate independently but might use 'io' to emit updates\ncronJobContronler.cronJobGame1p(io);\n\n// --- 404 Handler ---\n// Catch-all for requests that don't match any route\napp.all('*', (req, res) => {\n  // return res.render(\"404.ejs\"); // Render a 404 page if you have one\n  return res.status(404).send(\"404 Not Found\"); // Or send a simple text response\n});\n\n// --- Start Server ---\nserver.listen(port, () => {\n  console.log(`Server running on http://localhost:${port}`);\n  console.log(\"JWT Secret Loaded:\", YOUR_JWT_SECRET ? \"Yes (First few chars: \" + YOUR_JWT_SECRET.substring(0, 5) + \"...)\" : \"NO - Using default!\");\n});\n\n// require('dotenv/config')\n\n// const express = require('express');\n// const configViewEngine = require('./config/configEngine');\n// const routes  = require('./routes/web');\n// const cronJobContronler = require('./controllers/cronJobContronler');\n// const socketIoController = require('./controllers/socketIoController');\n// const aviatorController = require('./controllers/aviatorController');\n// const socketHandler = require('./socket');\n\n// let cookieParser = require('cookie-parser');\n// require('dotenv').config({path:'../.env'});\n\n// const app = express();\n// const server = require('http').createServer(app);\n// const io = require('socket.io')(server);\n\n// const port = 7777;\n\n// app.use(cookieParser());\n// // app.use(express.static('public'));\n// app.use(express.urlencoded({ extended: true }));\n// app.use(express.json());\n\n// // setup viewEngine\n// configViewEngine(app);\n// // init Web Routes\n// routes.initWebRouter(app);\n\n// // Cron game 1 Phut \n// cronJobContronler.cronJobGame1p(io);\n\n// // Check xem ai connect vÃ o sever \n// socketIoController.sendMessageAdmin(io);\n\n// aviatorController.Aviator(io);\n\n// // app.all('*', (req, res) => {\n// //     return res.render(\"404.ejs\"); \n// // });\n\n// server.listen(port, () => {\n//     console.log(\"Connected success port: \" + port);\n// });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["require","config","path","express","http","Server","jwt","cookieParser","configViewEngine","routes","socketHandler","cronJobContronler","socketIoController","aviatorController","YOUR_JWT_SECRET","process","env","JWT_SECRET","port","PORT","app","server","createServer","io","cors","origin","use","json","urlencoded","extended","publicPath","resolve","__dirname","console","log","static","uploadsPath","initWebRouter","socket","next","id","sendMessageAdmin","Aviator","cronJobGame1p","all","req","res","status","send","listen","substring"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/","sources":["server.js"],"sourcesContent":["// server.js - Merged Code\r\n\r\n// Load environment variables first\r\nrequire('dotenv/config'); // Loads variables into process.env\r\nrequire('dotenv').config({ path: '../.env' }); // Optional: Load from specific .env file if needed\r\n\r\nconst express = require('express');\r\nconst http = require('http');       // Require http explicitly\r\nconst path = require('path');       // Require path for resolving paths\r\nconst { Server } = require('socket.io'); // Import Server class for options\r\nconst jwt = require('jsonwebtoken'); // Require jsonwebtoken for auth\r\nconst cookieParser = require('cookie-parser');\r\n\r\n// --- Configuration & Route Imports ---\r\nconst configViewEngine = require('./config/configEngine'); // Your view engine setup function\r\nconst routes = require('./routes/web');                   // Your main web routes object { initWebRouter: ... }\r\nconst socketHandler = require('../src/public/DragonTiger/assets/socket.io/socket');                // Your Dragon Tiger game socket logic handler\r\nconst cronJobContronler = require('./controllers/cronJobContronler'); // Your cron job logic\r\nconst socketIoController = require('./controllers/socketIoController');  // Your other socket logic (admin messages?)\r\nconst aviatorController = require('./controllers/aviatorController'); \r\n// const Dragon = require('./controllers/dragonController');\r\n\r\n // Your Aviator game logic\r\n\r\n// --- Constants ---\r\nconst YOUR_JWT_SECRET = process.env.JWT_SECRET || 'your_strong_secret_key'; // Use the same secret as in login controller\r\nconst port = process.env.PORT || 3000; // Use environment variable or default\r\n\r\n// --- App & Server Initialization ---\r\nconst app = express();\r\nconst server = http.createServer(app); // Use http.createServer\r\nconst io = new Server(server, {      // Initialize Socket.IO with options\r\n    cors: {\r\n        origin: '*', // Configure CORS properly for production\r\n        // methods: [\"GET\", \"POST\"] // Optional: specify allowed methods\r\n    }\r\n});\r\n\r\n// --- Express Middleware ---\r\napp.use(cookieParser()); // For parsing cookies if needed by auth/routes\r\napp.use(express.json()); // For parsing JSON request bodies\r\napp.use(express.urlencoded({ extended: true })); // For parsing URL-encoded request bodies\r\n\r\n// --- Static File Serving ---\r\n// Configure static paths relative to THIS server.js file's location\r\n// Assuming 'public' (for css, js, images) is in the project root (GoaGamesStandard)\r\nconst publicPath = path.resolve(__dirname, '../public'); // Adjust '../' based on server.js location relative to root\r\nconsole.log(\"Setting static files directory to:\", publicPath);\r\napp.use(express.static(publicPath));\r\n\r\n// Assuming 'uploads' is in the project root\r\nconst uploadsPath = path.resolve(__dirname, '../uploads'); // Adjust '../' based on server.js location relative to root\r\nconsole.log(\"Setting uploads directory to:\", uploadsPath);\r\napp.use('/uploads', express.static(uploadsPath)); // Serve uploads folder at /uploads route\r\n\r\n// --- View Engine Setup ---\r\n// Make sure configViewEngine sets the correct ABSOLUTE path to your views directory\r\n// (e.g., using path.resolve(__dirname, '../src/views') inside configEngine.js)\r\nconfigViewEngine(app);\r\n\r\n// --- Initialize Web Routes ---\r\n// Ensure ./routes/web exports { initWebRouter } and contains all necessary routes\r\nroutes.initWebRouter(app);\r\n\r\n\r\n// --- Socket.IO Authentication Middleware (From index.js) ---\r\nio.use((socket, next) => {\r\n    console.log(`Socket attempting connection (${socket.id}). Checking token...`);\r\n    // const token = socket.handshake.auth.token; // Get token from client connection attempt\r\n\r\n    // if (!token) {\r\n    //     console.error(`Socket connection rejected (${socket.id}): No token provided.`);\r\n    //     // Disconnect immediately if no token\r\n    //     // socket.disconnect(true); // Optional: Force disconnect\r\n    //     return next(new Error('Authentication error: No token provided')); // Reject connection middleware\r\n    // }\r\n\r\n    // jwt.verify(token, YOUR_JWT_SECRET, (err, decoded) => {\r\n    //     if (err) {\r\n    //         console.error(`Socket connection rejected (${socket.id}): Invalid token. ${err.message}`);\r\n    //         // Disconnect immediately on invalid token\r\n    //         // socket.disconnect(true); // Optional: Force disconnect\r\n    //         return next(new Error('Authentication error: Invalid token')); // Reject connection middleware\r\n    //     }\r\n        // Token is valid: Attach user info to the socket object\r\n        // socket.user = decoded; // Contains { userId: ..., phone: ... } etc. from JWT payload\r\n        console.log(`Socket authenticated (${socket.id})`);\r\n        next(); // Allow the connection\r\n    });\r\n\r\n\r\n// --- Initialize Socket Event Handlers ---\r\n// 1. Generic Dragon Tiger Handler (from index.js/socket.js)\r\n// This will handle 'place_final_bets' etc. for authenticated users\r\nsocketHandler(io);\r\n\r\n// 2. Other Specific Socket Controllers (from original server.js)\r\n// These likely handle different events or namespaces\r\nsocketIoController.sendMessageAdmin(io); // Handles admin messages?\r\naviatorController.Aviator(io);         // Handles Aviator game logic?\r\n// Dragon.Dragon(io);\r\n// Dragon.userDekh(io);\r\n\r\n// --- Cron Jobs ---\r\n// Cron jobs operate independently but might use 'io' to emit updates\r\ncronJobContronler.cronJobGame1p(io);\r\n\r\n// --- 404 Handler ---\r\n// Catch-all for requests that don't match any route\r\napp.all('*', (req, res) => {\r\n    // return res.render(\"404.ejs\"); // Render a 404 page if you have one\r\n    return res.status(404).send(\"404 Not Found\"); // Or send a simple text response\r\n});\r\n\r\n// --- Start Server ---\r\nserver.listen(port, () => {\r\n    console.log(`Server running on http://localhost:${port}`);\r\n    console.log(\"JWT Secret Loaded:\", YOUR_JWT_SECRET ? \"Yes (First few chars: \" + YOUR_JWT_SECRET.substring(0, 5) + \"...)\" : \"NO - Using default!\");\r\n});\r\n\r\n// require('dotenv/config')\r\n\r\n// const express = require('express');\r\n// const configViewEngine = require('./config/configEngine');\r\n// const routes  = require('./routes/web');\r\n// const cronJobContronler = require('./controllers/cronJobContronler');\r\n// const socketIoController = require('./controllers/socketIoController');\r\n// const aviatorController = require('./controllers/aviatorController');\r\n// const socketHandler = require('./socket');\r\n\r\n\r\n\r\n// let cookieParser = require('cookie-parser');\r\n// require('dotenv').config({path:'../.env'});\r\n\r\n// const app = express();\r\n// const server = require('http').createServer(app);\r\n// const io = require('socket.io')(server);\r\n\r\n// const port = 7777;\r\n\r\n// app.use(cookieParser());\r\n// // app.use(express.static('public'));\r\n// app.use(express.urlencoded({ extended: true }));\r\n// app.use(express.json());\r\n\r\n// // setup viewEngine\r\n// configViewEngine(app);\r\n// // init Web Routes\r\n// routes.initWebRouter(app);\r\n\r\n// // Cron game 1 Phut \r\n// cronJobContronler.cronJobGame1p(io);\r\n\r\n// // Check xem ai connect vÃ o sever \r\n// socketIoController.sendMessageAdmin(io);\r\n\r\n// aviatorController.Aviator(io);\r\n\r\n\r\n\r\n// // app.all('*', (req, res) => {\r\n// //     return res.render(\"404.ejs\"); \r\n// // });\r\n\r\n\r\n\r\n\r\n\r\n// server.listen(port, () => {\r\n//     console.log(\"Connected success port: \" + port);\r\n// });\r\n\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1745557697000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/config/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/config/configEngine.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const express = require('express');\nconst path = require('path');\nconst configViewEngine = app => {\n  app.use(express.static(path.join(__dirname, '../public')));\n  app.use(express.static(path.join(__dirname, '../../uploads')));\n  app.set('view engine', \"ejs\");\n  app.set('views', path.join(__dirname, '../views'));\n};\nmodule.exports = configViewEngine;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInBhdGgiLCJjb25maWdWaWV3RW5naW5lIiwiYXBwIiwidXNlIiwic3RhdGljIiwiam9pbiIsIl9fZGlybmFtZSIsInNldCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9pbmZheW91ZGlnaXRhbC9EZXNrdG9wL2F2YXRpb3IvR2FvZ2FtZXMvc3JjL2NvbmZpZy8iLCJzb3VyY2VzIjpbImNvbmZpZ0VuZ2luZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xyXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5cclxuY29uc3QgY29uZmlnVmlld0VuZ2luZSA9IChhcHApID0+IHtcclxuICAgIGFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwnLi4vcHVibGljJykpKTtcclxuICAgIGFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwnLi4vLi4vdXBsb2FkcycpKSk7XHJcbiAgICBhcHAuc2V0KCd2aWV3IGVuZ2luZScsIFwiZWpzXCIpO1xyXG4gICAgYXBwLnNldCgndmlld3MnLCBwYXRoLmpvaW4oX19kaXJuYW1lLCcuLi92aWV3cycpKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBjb25maWdWaWV3RW5naW5lO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUNsQyxNQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFFNUIsTUFBTUUsZ0JBQWdCLEdBQUlDLEdBQUcsSUFBSztFQUM5QkEsR0FBRyxDQUFDQyxHQUFHLENBQUNMLE9BQU8sQ0FBQ00sTUFBTSxDQUFDSixJQUFJLENBQUNLLElBQUksQ0FBQ0MsU0FBUyxFQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7RUFDekRKLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDTCxPQUFPLENBQUNNLE1BQU0sQ0FBQ0osSUFBSSxDQUFDSyxJQUFJLENBQUNDLFNBQVMsRUFBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0VBQzdESixHQUFHLENBQUNLLEdBQUcsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDO0VBQzdCTCxHQUFHLENBQUNLLEdBQUcsQ0FBQyxPQUFPLEVBQUVQLElBQUksQ0FBQ0ssSUFBSSxDQUFDQyxTQUFTLEVBQUMsVUFBVSxDQUFDLENBQUM7QUFDckQsQ0FBQztBQUVERSxNQUFNLENBQUNDLE9BQU8sR0FBR1IsZ0JBQWdCIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["express","require","path","configViewEngine","app","use","static","join","__dirname","set","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/config/","sources":["configEngine.js"],"sourcesContent":["const express = require('express');\r\nconst path = require('path');\r\n\r\nconst configViewEngine = (app) => {\r\n    app.use(express.static(path.join(__dirname,'../public')));\r\n    app.use(express.static(path.join(__dirname,'../../uploads')));\r\n    app.set('view engine', \"ejs\");\r\n    app.set('views', path.join(__dirname,'../views'));\r\n}\r\n\r\nmodule.exports = configViewEngine;\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAME,gBAAgB,GAAIC,GAAG,IAAK;EAC9BA,GAAG,CAACC,GAAG,CAACL,OAAO,CAACM,MAAM,CAACJ,IAAI,CAACK,IAAI,CAACC,SAAS,EAAC,WAAW,CAAC,CAAC,CAAC;EACzDJ,GAAG,CAACC,GAAG,CAACL,OAAO,CAACM,MAAM,CAACJ,IAAI,CAACK,IAAI,CAACC,SAAS,EAAC,eAAe,CAAC,CAAC,CAAC;EAC7DJ,GAAG,CAACK,GAAG,CAAC,aAAa,EAAE,KAAK,CAAC;EAC7BL,GAAG,CAACK,GAAG,CAAC,OAAO,EAAEP,IAAI,CAACK,IAAI,CAACC,SAAS,EAAC,UAAU,CAAC,CAAC;AACrD,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAGR,gBAAgB","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/routes/web.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const express = require('express');\nconst accountController = require('../controllers/accountController');\nconst homeController = require('../controllers/homeController');\nconst winGoController = require('../controllers/winGoController');\nconst userController = require('../controllers/userController');\nconst middlewareController = require('../controllers/middlewareController');\nconst adminController = require('../controllers/adminController');\nconst dailyController = require('../controllers/dailyController');\nconst k5Controller = require('../controllers/k5Controller');\nconst k3Controller = require('../controllers/k3Controller');\nconst paymentController = require(\"../controllers/paymentController\");\nconst dragonController = require('../controllers/dragonController');\nconst multer = require('multer');\nconst path = require('path');\nconst fs = require('fs');\nlet router = express.Router();\nfunction ensureUploadsDirectory() {\n  const uploadPath = path.join('uploads/');\n  if (!fs.existsSync(uploadPath)) {\n    fs.mkdirSync(uploadPath, {\n      recursive: true\n    }); // Creates the directory if it doesn't exist\n  }\n}\nconst qrStorage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    ensureUploadsDirectory();\n    cb(null, 'uploads/');\n  },\n  filename: function (req, file, cb) {\n    const filename = 'qrImg.png';\n    const filepath = path.join('uploads/', filename);\n    if (fs.existsSync(filepath)) {\n      fs.unlinkSync(filepath);\n    }\n    cb(null, filename);\n  }\n});\nconst usdt_qrstorage = multer.diskStorage({\n  destination: function (req, file, cb) {\n    ensureUploadsDirectory();\n    cb(null, 'uploads/');\n  },\n  filename: function (req, file, cb) {\n    const filename = 'usdtImg.png';\n    const filepath = path.join('uploads/', filename);\n    if (fs.existsSync(filepath)) {\n      fs.unlinkSync(filepath);\n    }\n    cb(null, filename);\n  }\n});\nconst uploadQr = multer({\n  storage: qrStorage\n});\nconst usdtUploadQr = multer({\n  storage: usdt_qrstorage\n});\nconst initWebRouter = app => {\n  //QR\n  router.post('/admin/manager/settings/QR', uploadQr.single('QR'), (req, res) => {\n    if (!req.file) {\n      return res.json({\n        status: false,\n        message: 'No file uploaded'\n      });\n    }\n\n    // File upload was successful\n    res.json({\n      status: true,\n      message: 'File uploaded successfully'\n    });\n  });\n  router.post('/admin/manager/settings/USDTQR', usdtUploadQr.single('USDTQR'), (req, res) => {\n    if (!req.file) {\n      return res.json({\n        status: false,\n        message: 'No file uploaded'\n      });\n    }\n\n    // File upload was successful\n    res.json({\n      status: true,\n      message: 'File uploaded successfully'\n    });\n  });\n  router.post('/admin/manager/settings/increaseWallet', adminController.middlewareAdminController, adminController.increaseWallet);\n\n  // page account\n  router.get(\"/keFuMenu\", accountController.keFuMenu);\n  //  router.get(\"/login\", accountController.loginPage)\n  //  router.get(\"/register\", accountController.registerPage)\n  //  router.get(\"/forgot\", accountController.forgotPage)\n  router.post(\"/api/sent/otp/verify\", accountController.verifyCode);\n  router.post(\"/api/sent/otp/verify/reset\", accountController.verifyCodePass);\n  router.post(\"/api/resetPasword\", accountController.forGotPassword);\n\n  // page home\n  router.get(\"/\", (req, res) => {\n    return res.redirect(\"/home\");\n  });\n  router.get(\"/home\", homeController.homePage);\n  router.get(\"/ad.php\", homeController.ad);\n  router.get(\"/ad\", homeController.tele);\n  router.get(\"/promotion\", homeController.promotionPage);\n  router.get(\"/checkIn/reward\", middlewareController, homeController.attendance);\n  router.get(\"/checkIn\", middlewareController, homeController.checkInPage);\n  router.get(\"/checkDes\", middlewareController, homeController.checkDes);\n  router.get(\"/checkRecord\", middlewareController, homeController.checkRecord);\n  router.get(\"/wallet/transfer\", middlewareController, homeController.transfer);\n  router.get(\"/promotion\", middlewareController, homeController.promotionPage);\n  router.get(\"/promotion/myTeam\", middlewareController, homeController.promotionmyTeamPage);\n  router.get(\"/promotion/promotionDes\", middlewareController, homeController.promotionDesPage);\n  router.get(\"/promotion/tutorial\", middlewareController, homeController.tutorialPage);\n  router.get(\"/promotion/bonusrecord\", middlewareController, homeController.bonusRecordPage);\n  router.get(\"/promotion/partnerReward\", middlewareController, homeController.partnerRewardPage);\n  router.get(\"/promotion/commissionDetails\", middlewareController, homeController.comissionDetailsPage);\n  router.get(\"/promotion/invitationRules\", middlewareController, homeController.invitationRules);\n  router.get(\"/promotion/commissionDetails\", middlewareController, homeController.commisionDetailsPage);\n  router.get(\"/promotion/rebateRatio\", middlewareController, homeController.rebateRatio);\n  router.get(\"/promotion/commissionRecord\", middlewareController, userController.comissionRecord);\n  router.get(\"/promotion/partnerRecord\", middlewareController, homeController.partnerRecord);\n  router.get(\"/promotion/partnerData\", middlewareController, userController.partnerData);\n  router.get(\"/wallet\", middlewareController, homeController.walletPage);\n  router.get(\"/wallet/recharge\", middlewareController, homeController.rechargePage);\n  router.get(\"/wallet/withdrawal\", middlewareController, homeController.withdrawalPage);\n  router.get(\"/wallet/rechargerecord\", middlewareController, homeController.rechargerecordPage);\n  router.get(\"/wallet/withdrawalrecord\", middlewareController, homeController.withdrawalrecordPage);\n  router.get(\"/wallet/addBank\", middlewareController, homeController.addBank);\n  router.get(\"/wallet/paynow/manual_upi\", middlewareController, paymentController.initiateManualUPIPayment);\n  router.get(\"/wallet/paynow/manual_usdt\", middlewareController, paymentController.initiateManualUSDTPayment);\n  router.post(\"/wallet/paynow/manual_upi_request\", middlewareController, paymentController.addManualUPIPaymentRequest);\n  router.post(\"/wallet/paynow/manual_usdt_request\", middlewareController, paymentController.addManualUSDTPaymentRequest);\n  router.post(\"/wallet/paynow/wowpay\", middlewareController, paymentController.initiateWowPayPayment);\n  router.post(\"/wallet/verify/wowpay\", middlewareController, paymentController.verifyWowPayPayment);\n  router.get(\"/wallet/verify/wowpay\", middlewareController, paymentController.verifyWowPayPayment);\n  router.post(\"/wallet/paynow/upi\", middlewareController, paymentController.initiateUPIPayment);\n  router.get(\"/wallet/verify/upi\", middlewareController, paymentController.verifyUPIPayment);\n  router.get(\"/mian\", middlewareController, homeController.mianPage);\n  router.get(\"/ekyc\", middlewareController, homeController.ekyc);\n  router.get(\"/recordsalary\", middlewareController, homeController.recordsalary);\n  router.get(\"/getrecord\", middlewareController, homeController.getSalaryRecord);\n  router.get(\"/about\", middlewareController, homeController.aboutPage);\n  router.get(\"/redenvelopes\", middlewareController, homeController.redenvelopes);\n  router.get(\"/mian/forgot\", middlewareController, homeController.forgot);\n  router.get(\"/newtutorial\", homeController.newtutorial);\n  router.get(\"/about/Confidentiality\", middlewareController, homeController.Confidentiality);\n  router.get(\"/about/riskAgreement\", middlewareController, homeController.riskAgreement);\n  router.get(\"/tutorial\", middlewareController, homeController.tutorialPage);\n  router.get(\"/notification\", middlewareController, homeController.notificationPage);\n  router.get(\"/myProfile\", middlewareController, homeController.myProfilePage);\n\n  // BET wingo\n  router.get(\"/win\", middlewareController, winGoController.winGoPage);\n  router.get(\"/win/3\", middlewareController, winGoController.winGoPage3);\n  router.get(\"/win/5\", middlewareController, winGoController.winGoPage5);\n  router.get(\"/win/10\", middlewareController, winGoController.winGoPage10);\n\n  // BET K5D\n  router.get(\"/5d\", middlewareController, k5Controller.K5DPage);\n  router.post(\"/api/webapi/action/5d/join\", middlewareController, k5Controller.betK5D); // register\n  router.post(\"/api/webapi/5d/GetNoaverageEmerdList\", middlewareController, k5Controller.listOrderOld); // register\n  router.post(\"/api/webapi/5d/GetMyEmerdList\", middlewareController, k5Controller.GetMyEmerdList); // register\n\n  // BET K3\n  router.get(\"/k3\", middlewareController, k3Controller.K3Page);\n  router.post(\"/api/webapi/action/k3/join\", middlewareController, k3Controller.betK3); // register\n  router.post(\"/api/webapi/k3/GetNoaverageEmerdList\", middlewareController, k3Controller.listOrderOld); // register\n  router.post(\"/api/webapi/k3/GetMyEmerdList\", middlewareController, k3Controller.GetMyEmerdList); // register\n\n  // login | register\n  router.post(\"/api/webapi/login\", accountController.login); // login\n  router.post(\"/api/webapi/register\", accountController.register); // register\n  //  router.get(\"/aviator\", middlewareController, userController.aviator)\n  router.get(\"/api/webapi/GetUserInfo\", middlewareController, userController.userInfo); // get info account\n  router.put(\"/api/webapi/change/userInfo\", middlewareController, userController.changeUser); // get info account\n  router.put(\"/api/webapi/change/pass\", middlewareController, userController.changePassword); // get info account\n\n  // bet wingo\n  router.post(\"/api/webapi/action/join\", middlewareController, winGoController.betWinGo); // register\n  router.post(\"/api/webapi/GetNoaverageEmerdList\", middlewareController, winGoController.listOrderOld); // register\n  router.post(\"/api/webapi/GetMyEmerdList\", middlewareController, winGoController.GetMyEmerdList); // register\n\n  // promotion\n  router.post(\"/api/webapi/promotion\", middlewareController, userController.promotion); // register\n  router.post(\"/api/webapi/checkIn\", middlewareController, userController.checkInHandling);\n  router.get(\"/api/webapi/checkIn\", middlewareController, userController.checkInData);\n  router.get(\"/api/webapi/checkIn/record\", middlewareController, userController.checkInRecord);\n  router.post(\"/api/webapi/check/Info\", middlewareController, userController.infoUserBank); // register\n  router.post(\"/api/webapi/addBank\", middlewareController, userController.addBank); // register\n  router.post(\"/api/webapi/otp\", middlewareController, userController.verifyCode); // register\n  router.post(\"/api/webapi/use/redenvelope\", middlewareController, userController.useRedenvelope); // register\n  router.post(\"/api/webapi/addUpi\", middlewareController, userController.addUpi);\n\n  // wallet\n  router.post(\"/api/webapi/recharge\", middlewareController, userController.recharge);\n  router.post(\"/api/webapi/cancel_recharge\", middlewareController, userController.cancelRecharge); // register\n  router.post(\"/wowpay/create\", middlewareController, userController.wowpay);\n  router.post(\"/api/webapi/confirm_recharge\", middlewareController, userController.confirmRecharge);\n  router.get(\"/api/webapi/myTeam\", middlewareController, userController.listMyTeam); // register\n  router.get(\"/api/webapi/recharge/list\", middlewareController, userController.listRecharge); // register\n  router.get(\"/api/webapi/withdraw/list\", middlewareController, userController.listWithdraw); // register\n  router.post(\"/api/webapi/recharge/check\", middlewareController, userController.recharge2); // register\n  router.post(\"/api/webapi/withdrawal\", middlewareController, userController.withdrawal3); // register\n  router.post(\"/api/webapi/callback_bank\", middlewareController, userController.callback_bank); // register\n  router.post(\"/api/webapi/recharge/update\", middlewareController, userController.updateRecharge); // update recharge\n  router.post(\"/api/webapi/transfer\", middlewareController, userController.transfer); // register\n  router.get(\"/api/webapi/transfer_history\", middlewareController, userController.transferHistory); //\n  router.get(\"/api/webapi/confirm_recharge_usdt\", middlewareController, userController.confirmUSDTRecharge); //\n  router.post(\"/api/webapi/confirm_recharge_usdt\", middlewareController, userController.confirmUSDTRecharge); //\n\n  router.post(\"/api/webapi/search\", middlewareController, userController.search); // register\n\n  // daily\n  router.get(\"/manager/index\", dailyController.middlewareDailyController, dailyController.dailyPage);\n  router.get(\"/manager/listRecharge\", dailyController.middlewareDailyController, dailyController.listRecharge);\n  router.get(\"/manager/listWithdraw\", dailyController.middlewareDailyController, dailyController.listWithdraw);\n  router.get(\"/manager/members\", dailyController.middlewareDailyController, dailyController.listMeber);\n  router.get(\"/manager/profileMember\", dailyController.middlewareDailyController, dailyController.profileMember);\n  router.get(\"/manager/settings\", dailyController.middlewareDailyController, dailyController.settingPage);\n  router.get(\"/manager/gifts\", dailyController.middlewareDailyController, dailyController.giftPage);\n  router.get(\"/manager/support\", dailyController.middlewareDailyController, dailyController.support);\n  router.get(\"/manager/member/info/:phone\", dailyController.middlewareDailyController, dailyController.pageInfo);\n  router.post(\"/manager/member/info/:phone\", dailyController.middlewareDailyController, dailyController.userInfo);\n  router.post(\"/manager/member/listRecharge/:phone\", dailyController.middlewareDailyController, dailyController.listRechargeMem);\n  router.post(\"/manager/member/listWithdraw/:phone\", dailyController.middlewareDailyController, dailyController.listWithdrawMem);\n  router.post(\"/manager/member/redenvelope/:phone\", dailyController.middlewareDailyController, dailyController.listRedenvelope);\n  router.post(\"/manager/member/bet/:phone\", dailyController.middlewareDailyController, dailyController.listBet);\n  router.post(\"/manager/settings/list\", dailyController.middlewareDailyController, dailyController.settings);\n  router.post(\"/manager/createBonus\", dailyController.middlewareDailyController, dailyController.createBonus);\n  router.post(\"/manager/listRedenvelops\", dailyController.middlewareDailyController, dailyController.listRedenvelops);\n  router.post(\"/manager/listRecharge\", dailyController.middlewareDailyController, dailyController.listRechargeP);\n  router.post(\"/manager/listWithdraw\", dailyController.middlewareDailyController, dailyController.listWithdrawP);\n  router.post(\"/api/webapi/statistical\", dailyController.middlewareDailyController, dailyController.statistical);\n  router.post(\"/manager/infoCtv\", dailyController.middlewareDailyController, dailyController.infoCtv); // get info account\n  router.post(\"/manager/infoCtv/select\", dailyController.middlewareDailyController, dailyController.infoCtv2); // get info account\n  router.post(\"/api/webapi/manager/listMember\", dailyController.middlewareDailyController, dailyController.listMember); // get info account\n\n  router.post(\"/api/webapi/manager/buff\", dailyController.middlewareDailyController, dailyController.buffMoney); // get info account\n\n  // admin\n  router.get(\"/admin/manager/index\", adminController.middlewareAdminController, adminController.adminPage); // get info account\n  router.get(\"/admin/manager/index/3\", adminController.middlewareAdminController, adminController.adminPage3); // get info account\n  router.get(\"/admin/manager/index/5\", adminController.middlewareAdminController, adminController.adminPage5); // get info account\n  router.get(\"/admin/manager/index/10\", adminController.middlewareAdminController, adminController.adminPage10); // get info account\n\n  router.get(\"/admin/manager/5d\", adminController.middlewareAdminController, adminController.adminPage5d); // get info account\n  router.get(\"/admin/manager/k3\", adminController.middlewareAdminController, adminController.adminPageK3); // get info account\n  router.get(\"/admin/manager/aviator\", adminController.middlewareAdminController, adminController.adminPageAviator);\n  router.get(\"/admin/manager/members\", adminController.middlewareAdminController, adminController.membersPage); // get info account\n  router.get(\"/admin/manager/createBonus\", adminController.middlewareAdminController, adminController.giftPage); // get info account\n  router.get(\"/admin/manager/ctv\", adminController.middlewareAdminController, adminController.ctvPage); // get info account\n  router.get(\"/admin/manager/ctv/profile/:phone\", adminController.middlewareAdminController, adminController.ctvProfilePage); // get info account\n\n  router.get(\"/admin/manager/settings\", adminController.middlewareAdminController, adminController.settings); // get info account\n  router.post(\"/admin/manager/settings/notification\", adminController.middlewareAdminController, adminController.addNotification);\n  router.get(\"/admin/manager/listRedenvelops\", adminController.middlewareAdminController, adminController.listRedenvelops); // get info account\n  router.post(\"/admin/manager/infoCtv\", adminController.middlewareAdminController, adminController.infoCtv); // get info account\n  router.post(\"/admin/manager/infoCtv/select\", adminController.middlewareAdminController, adminController.infoCtv2); // get info account\n  router.post(\"/admin/manager/settings/bank\", adminController.middlewareAdminController, adminController.settingBank); // get info account\n  router.post(\"/admin/manager/settings/cskh\", adminController.middlewareAdminController, adminController.settingCskh); // get info account\n  router.post(\"/admin/manager/settings/buff\", adminController.middlewareAdminController, adminController.settingbuff); // get info account\n  router.post(\"/admin/manager/create/ctv\", adminController.middlewareAdminController, adminController.register); // get info account\n  router.post(\"/admin/manager/create/partner\", adminController.middlewareAdminController, adminController.registerPartner);\n  router.post(\"/admin/manager/settings/get\", adminController.middlewareAdminController, adminController.settingGet); // get info account\n  router.post(\"/admin/manager/createBonus\", adminController.middlewareAdminController, adminController.createBonus); // get info account\n\n  router.post(\"/admin/member/listRecharge/:phone\", adminController.middlewareAdminController, adminController.listRechargeMem);\n  router.post(\"/admin/member/listWithdraw/:phone\", adminController.middlewareAdminController, adminController.listWithdrawMem);\n  router.post(\"/admin/member/redenvelope/:phone\", adminController.middlewareAdminController, adminController.listRedenvelope);\n  router.post(\"/admin/member/bet/:phone\", adminController.middlewareAdminController, adminController.listBet);\n  router.post(\"/admin/member/aviatorBet/:phone\", adminController.middlewareAdminController, adminController.listBetAviator);\n  router.get(\"/admin/manager/recharge\", adminController.middlewareAdminController, adminController.rechargePage); // get info account\n  router.get(\"/admin/manager/withdraw\", adminController.middlewareAdminController, adminController.withdraw); // get info account\n  // router.get('/admin/manager/level', adminController.middlewareAdminController, adminController.level); // get info account\n  router.get(\"/admin/manager/levelSetting\", adminController.middlewareAdminController, adminController.levelSetting);\n  router.get(\"/admin/manager/CreatedSalaryRecord\", adminController.middlewareAdminController, adminController.CreatedSalaryRecord);\n  router.get(\"/admin/manager/rechargeRecord\", adminController.middlewareAdminController, adminController.rechargeRecord); // get info account\n  router.get(\"/admin/manager/withdrawRecord\", adminController.middlewareAdminController, adminController.withdrawRecord); // get info account\n  router.get(\"/admin/manager/statistical\", adminController.middlewareAdminController, adminController.statistical); // get info account\n  router.get(\"/admin/member/info/:id\", adminController.middlewareAdminController, adminController.infoMember);\n  router.get(\"/api/webapi/admin/getLevelInfo\", adminController.middlewareAdminController, adminController.getLevelInfo);\n  router.get(\"/api/webapi/admin/getSalary\", adminController.middlewareAdminController, adminController.getSalary);\n  router.get('/admin/manager/settings/getpool', adminController.middlewareAdminController, adminController.getPool);\n  router.post('/admin/manager/settings/updatePool', adminController.middlewareAdminController, adminController.updatePool);\n  router.post('/admin/aviatorResult', adminController.middlewareAdminController, adminController.aviatorResult);\n  router.get('/admin/bulkSMS', adminController.middlewareAdminController, adminController.bulkSmsPage);\n  router.post('/admin/filterData', adminController.middlewareAdminController, adminController.filteredUser);\n  router.post(\"/api/webapi/admin/updateLevel\", adminController.middlewareAdminController, adminController.updateLevel); // get info account\n  router.post(\"/api/webapi/admin/CreatedSalary\", adminController.middlewareAdminController, adminController.CreatedSalary); // get info account\n  router.post(\"/api/webapi/admin/listMember\", adminController.middlewareAdminController, adminController.listMember); // get info account\n  router.post(\"/api/webapi/admin/listctv\", adminController.middlewareAdminController, adminController.listCTV); // get info account\n  router.post(\"/api/webapi/admin/withdraw\", adminController.middlewareAdminController, adminController.handlWithdraw); // get info account\n  router.post(\"/api/webapi/admin/recharge\", adminController.middlewareAdminController, adminController.recharge); // get info account\n  router.post(\"/api/webapi/admin/rechargeDuyet\", adminController.middlewareAdminController, adminController.rechargeDuyet); // get info account\n  router.post(\"/api/webapi/admin/member/info\", adminController.middlewareAdminController, adminController.userInfo); // get info account\n  router.post(\"/api/webapi/admin/statistical\", adminController.middlewareAdminController, adminController.statistical2); // get info account\n\n  router.post(\"/api/webapi/admin/banned\", adminController.middlewareAdminController, adminController.banned); // get info account\n\n  router.post(\"/api/webapi/admin/totalJoin\", adminController.middlewareAdminController, adminController.totalJoin); // get info account\n  router.post(\"/api/webapi/admin/change\", adminController.middlewareAdminController, adminController.changeAdmin); // get info account\n  router.post(\"/api/webapi/admin/profileUser\", adminController.middlewareAdminController, adminController.profileUser); // get info account\n  router.get(\"/api/webapi/userme\", middlewareController, userController.userme);\n\n  // admin 5d\n  router.post(\"/api/webapi/admin/5d/listOrders\", adminController.middlewareAdminController, adminController.listOrderOld); // get info account\n  router.post(\"/api/webapi/admin/k3/listOrders\", adminController.middlewareAdminController, adminController.listOrderOldK3); // get info account\n  router.post(\"/api/webapi/admin/5d/editResult\", adminController.middlewareAdminController, adminController.editResult); // get info account\n  router.post(\"/api/webapi/admin/k3/editResult\", adminController.middlewareAdminController, adminController.editResult2); // get info account\n\n  // game stats\n  router.get(\"/api/webapi/admin/wingo/money_stats\", adminController.middlewareAdminController, adminController.getWingoBatingAmountOfOptions); // get info account\n  router.get(\"/api/webapi/admin/k3/money_stats\", adminController.middlewareAdminController, adminController.getK3BatingAmountOfOptions); // get info account\n  router.get(\"/api/webapi/admin/5d/money_stats\", adminController.middlewareAdminController, adminController.get5dBatingAmountOfOptions); // get info account\n\n  //activity\n\n  router.get(\"/activity/home\", middlewareController, homeController.getActivityPage);\n  router.get(\"/activity/records\", middlewareController, userController.activityRecords);\n  router.get(\"/activity/recordPage\", middlewareController, homeController.activityRecords);\n  router.post(\"/activity/claim\", middlewareController, userController.weeklyClaim);\n  router.get(\"/activity/invitationBonus\", middlewareController, homeController.invitationRewardPage);\n  router.post('/invitationReward/claim', middlewareController, homeController.invitationRewardClaim);\n  router.get(\"/activity/invitationBonusRules\", middlewareController, homeController.invitationRewardRules);\n  router.use('/aviator', middlewareController, homeController.gamePage);\n  //  router.use('/dragon',middlewareController,dragonController.userDekh);\n\n  return app.use(\"/\", router);\n};\nmodule.exports = {\n  initWebRouter\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["express","require","accountController","homeController","winGoController","userController","middlewareController","adminController","dailyController","k5Controller","k3Controller","paymentController","dragonController","multer","path","fs","router","Router","ensureUploadsDirectory","uploadPath","join","existsSync","mkdirSync","recursive","qrStorage","diskStorage","destination","req","file","cb","filename","filepath","unlinkSync","usdt_qrstorage","uploadQr","storage","usdtUploadQr","initWebRouter","app","post","single","res","json","status","message","middlewareAdminController","increaseWallet","get","keFuMenu","verifyCode","verifyCodePass","forGotPassword","redirect","homePage","ad","tele","promotionPage","attendance","checkInPage","checkDes","checkRecord","transfer","promotionmyTeamPage","promotionDesPage","tutorialPage","bonusRecordPage","partnerRewardPage","comissionDetailsPage","invitationRules","commisionDetailsPage","rebateRatio","comissionRecord","partnerRecord","partnerData","walletPage","rechargePage","withdrawalPage","rechargerecordPage","withdrawalrecordPage","addBank","initiateManualUPIPayment","initiateManualUSDTPayment","addManualUPIPaymentRequest","addManualUSDTPaymentRequest","initiateWowPayPayment","verifyWowPayPayment","initiateUPIPayment","verifyUPIPayment","mianPage","ekyc","recordsalary","getSalaryRecord","aboutPage","redenvelopes","forgot","newtutorial","Confidentiality","riskAgreement","notificationPage","myProfilePage","winGoPage","winGoPage3","winGoPage5","winGoPage10","K5DPage","betK5D","listOrderOld","GetMyEmerdList","K3Page","betK3","login","register","userInfo","put","changeUser","changePassword","betWinGo","promotion","checkInHandling","checkInData","checkInRecord","infoUserBank","useRedenvelope","addUpi","recharge","cancelRecharge","wowpay","confirmRecharge","listMyTeam","listRecharge","listWithdraw","recharge2","withdrawal3","callback_bank","updateRecharge","transferHistory","confirmUSDTRecharge","search","middlewareDailyController","dailyPage","listMeber","profileMember","settingPage","giftPage","support","pageInfo","listRechargeMem","listWithdrawMem","listRedenvelope","listBet","settings","createBonus","listRedenvelops","listRechargeP","listWithdrawP","statistical","infoCtv","infoCtv2","listMember","buffMoney","adminPage","adminPage3","adminPage5","adminPage10","adminPage5d","adminPageK3","adminPageAviator","membersPage","ctvPage","ctvProfilePage","addNotification","settingBank","settingCskh","settingbuff","registerPartner","settingGet","listBetAviator","withdraw","levelSetting","CreatedSalaryRecord","rechargeRecord","withdrawRecord","infoMember","getLevelInfo","getSalary","getPool","updatePool","aviatorResult","bulkSmsPage","filteredUser","updateLevel","CreatedSalary","listCTV","handlWithdraw","rechargeDuyet","statistical2","banned","totalJoin","changeAdmin","profileUser","userme","listOrderOldK3","editResult","editResult2","getWingoBatingAmountOfOptions","getK3BatingAmountOfOptions","get5dBatingAmountOfOptions","getActivityPage","activityRecords","weeklyClaim","invitationRewardPage","invitationRewardClaim","invitationRewardRules","use","gamePage","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/routes/","sources":["web.js"],"sourcesContent":["\r\nconst express = require('express');\r\nconst accountController = require('../controllers/accountController');\r\nconst homeController = require('../controllers/homeController');\r\nconst winGoController= require('../controllers/winGoController');\r\nconst userController = require('../controllers/userController');\r\nconst middlewareController = require('../controllers/middlewareController');\r\nconst adminController = require('../controllers/adminController');\r\nconst dailyController = require('../controllers/dailyController');\r\nconst k5Controller = require('../controllers/k5Controller');\r\nconst k3Controller = require('../controllers/k3Controller');\r\nconst paymentController = require(\"../controllers/paymentController\")\r\nconst dragonController = require('../controllers/dragonController');\r\nconst multer = require('multer');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nlet router = express.Router();\r\n\r\nfunction ensureUploadsDirectory() {\r\n  const uploadPath = path.join('uploads/');\r\n  if (!fs.existsSync(uploadPath)) {\r\n    fs.mkdirSync(uploadPath, { recursive: true }); // Creates the directory if it doesn't exist\r\n  }\r\n}\r\n\r\n\r\nconst qrStorage = multer.diskStorage({\r\n   destination: function (req, file, cb) {\r\n    ensureUploadsDirectory();\r\n     cb(null, 'uploads/'); \r\n   },\r\n   filename: function (req, file, cb) {\r\n     const filename = 'qrImg.png'; \r\n     const filepath = path.join('uploads/', filename);\r\n \r\n     if (fs.existsSync(filepath)) {\r\n       fs.unlinkSync(filepath); \r\n     }\r\n \r\n     cb(null, filename);\r\n   }\r\n });\r\n\r\n const usdt_qrstorage = multer.diskStorage({\r\n   destination: function (req, file, cb) {\r\n    ensureUploadsDirectory();\r\n     cb(null, 'uploads/'); \r\n   },\r\n   filename: function (req, file, cb) {\r\n     const filename = 'usdtImg.png'; \r\n     const filepath = path.join('uploads/', filename);\r\n \r\n     if (fs.existsSync(filepath)) {\r\n       fs.unlinkSync(filepath); \r\n     }\r\n \r\n     cb(null, filename);\r\n   }\r\n });\r\n \r\n\r\nconst uploadQr = multer({ storage: qrStorage });\r\nconst usdtUploadQr = multer({ storage: usdt_qrstorage });\r\n\r\nconst initWebRouter = app => {\r\n\r\n   //QR\r\n   router.post('/admin/manager/settings/QR', uploadQr.single('QR'), (req, res) => {\r\n      if (!req.file) {\r\n          return res.json({ status: false, message: 'No file uploaded' });\r\n      }\r\n  \r\n      // File upload was successful\r\n      res.json({ status: true, message: 'File uploaded successfully' });\r\n  });\r\n\r\n  router.post('/admin/manager/settings/USDTQR', usdtUploadQr.single('USDTQR'), (req, res) => {\r\n   if (!req.file) {\r\n       return res.json({ status: false, message: 'No file uploaded' });\r\n   }\r\n\r\n   // File upload was successful\r\n   res.json({ status: true, message: 'File uploaded successfully' });\r\n});\r\n  \r\nrouter.post('/admin/manager/settings/increaseWallet',adminController.middlewareAdminController,adminController.increaseWallet);\r\n\r\n   // page account\r\n   router.get(\"/keFuMenu\", accountController.keFuMenu)\r\n  //  router.get(\"/login\", accountController.loginPage)\r\n  //  router.get(\"/register\", accountController.registerPage)\r\n  //  router.get(\"/forgot\", accountController.forgotPage)\r\n   router.post(\"/api/sent/otp/verify\", accountController.verifyCode)\r\n   router.post(\"/api/sent/otp/verify/reset\", accountController.verifyCodePass)\r\n   router.post(\"/api/resetPasword\", accountController.forGotPassword)\r\n\r\n   // page home\r\n   router.get(\"/\", (req, res) => {\r\n      return res.redirect(\"/home\")\r\n   })\r\n   router.get(\"/home\", homeController.homePage)\r\n   router.get(\"/ad.php\",homeController.ad)\r\n   router.get(\"/ad\",homeController.tele)\r\n   router.get(\"/promotion\",homeController.promotionPage)\r\n   router.get(\"/checkIn/reward\",middlewareController,homeController.attendance);\r\n\r\n   router.get(\"/checkIn\", middlewareController, homeController.checkInPage)\r\n\r\n   router.get(\"/checkDes\", middlewareController, homeController.checkDes)\r\n   router.get(\"/checkRecord\", middlewareController, homeController.checkRecord)\r\n   router.get(\"/wallet/transfer\", middlewareController, homeController.transfer)\r\n\r\n   router.get(\"/promotion\", middlewareController, homeController.promotionPage)\r\n   router.get(\"/promotion/myTeam\", middlewareController, homeController.promotionmyTeamPage)\r\n   router.get(\"/promotion/promotionDes\", middlewareController, homeController.promotionDesPage)\r\n   router.get(\"/promotion/tutorial\", middlewareController, homeController.tutorialPage)\r\n   router.get(\"/promotion/bonusrecord\", middlewareController, homeController.bonusRecordPage);\r\n   router.get(\"/promotion/partnerReward\", middlewareController, homeController.partnerRewardPage);\r\n   router.get(\"/promotion/commissionDetails\", middlewareController, homeController.comissionDetailsPage);\r\n   router.get(\"/promotion/invitationRules\",middlewareController,homeController.invitationRules);\r\n   router.get(\"/promotion/commissionDetails\",middlewareController,homeController.commisionDetailsPage);\r\n   router.get(\"/promotion/rebateRatio\",middlewareController,homeController.rebateRatio);\r\n   router.get(\"/promotion/commissionRecord\",middlewareController,userController.comissionRecord);\r\n   router.get(\"/promotion/partnerRecord\",middlewareController,homeController.partnerRecord);\r\n   router.get(\"/promotion/partnerData\",middlewareController,userController.partnerData)\r\n\r\n\r\n   router.get(\"/wallet\", middlewareController, homeController.walletPage)\r\n   router.get(\"/wallet/recharge\", middlewareController, homeController.rechargePage)\r\n   router.get(\"/wallet/withdrawal\", middlewareController, homeController.withdrawalPage)\r\n   router.get(\"/wallet/rechargerecord\", middlewareController, homeController.rechargerecordPage)\r\n   router.get(\"/wallet/withdrawalrecord\", middlewareController, homeController.withdrawalrecordPage)\r\n   router.get(\"/wallet/addBank\", middlewareController, homeController.addBank)\r\n\r\n   router.get(\"/wallet/paynow/manual_upi\", middlewareController, paymentController.initiateManualUPIPayment)\r\n   router.get(\"/wallet/paynow/manual_usdt\", middlewareController, paymentController.initiateManualUSDTPayment)\r\n   router.post(\"/wallet/paynow/manual_upi_request\", middlewareController, paymentController.addManualUPIPaymentRequest)\r\n   router.post(\"/wallet/paynow/manual_usdt_request\", middlewareController, paymentController.addManualUSDTPaymentRequest)\r\n   router.post(\"/wallet/paynow/wowpay\", middlewareController, paymentController.initiateWowPayPayment)\r\n   router.post(\"/wallet/verify/wowpay\", middlewareController, paymentController.verifyWowPayPayment)\r\n   router.get(\"/wallet/verify/wowpay\", middlewareController, paymentController.verifyWowPayPayment)\r\n   router.post(\"/wallet/paynow/upi\", middlewareController, paymentController.initiateUPIPayment)\r\n   router.get(\"/wallet/verify/upi\", middlewareController, paymentController.verifyUPIPayment)\r\n\r\n   router.get(\"/mian\", middlewareController, homeController.mianPage)\r\n   router.get(\"/ekyc\",middlewareController,homeController.ekyc)\r\n\r\n   router.get(\"/recordsalary\", middlewareController, homeController.recordsalary)\r\n   router.get(\"/getrecord\", middlewareController, homeController.getSalaryRecord)\r\n   router.get(\"/about\", middlewareController, homeController.aboutPage)\r\n   router.get(\"/redenvelopes\", middlewareController, homeController.redenvelopes)\r\n   router.get(\"/mian/forgot\", middlewareController, homeController.forgot)\r\n   router.get(\"/newtutorial\", homeController.newtutorial)\r\n   router.get(\"/about/Confidentiality\", middlewareController, homeController.Confidentiality)\r\n   router.get(\"/about/riskAgreement\", middlewareController, homeController.riskAgreement)\r\n   router.get(\"/tutorial\",middlewareController,homeController.tutorialPage)\r\n   router.get(\"/notification\",middlewareController,homeController.notificationPage)\r\n   router.get(\"/myProfile\", middlewareController, homeController.myProfilePage)\r\n\r\n   // BET wingo\r\n   router.get(\"/win\", middlewareController, winGoController.winGoPage)\r\n   router.get(\"/win/3\", middlewareController, winGoController.winGoPage3)\r\n   router.get(\"/win/5\", middlewareController, winGoController.winGoPage5)\r\n   router.get(\"/win/10\", middlewareController, winGoController.winGoPage10)\r\n\r\n   // BET K5D\r\n   router.get(\"/5d\", middlewareController, k5Controller.K5DPage)\r\n   router.post(\"/api/webapi/action/5d/join\", middlewareController, k5Controller.betK5D) // register\r\n   router.post(\"/api/webapi/5d/GetNoaverageEmerdList\", middlewareController, k5Controller.listOrderOld) // register\r\n   router.post(\"/api/webapi/5d/GetMyEmerdList\", middlewareController, k5Controller.GetMyEmerdList) // register\r\n\r\n   // BET K3\r\n   router.get(\"/k3\", middlewareController, k3Controller.K3Page)\r\n\r\n   router.post(\"/api/webapi/action/k3/join\", middlewareController, k3Controller.betK3) // register\r\n   router.post(\"/api/webapi/k3/GetNoaverageEmerdList\", middlewareController, k3Controller.listOrderOld) // register\r\n   router.post(\"/api/webapi/k3/GetMyEmerdList\", middlewareController, k3Controller.GetMyEmerdList) // register\r\n\r\n   // login | register\r\n   router.post(\"/api/webapi/login\", accountController.login) // login\r\n   router.post(\"/api/webapi/register\", accountController.register) // register\r\n  //  router.get(\"/aviator\", middlewareController, userController.aviator)\r\n   router.get(\"/api/webapi/GetUserInfo\", middlewareController, userController.userInfo) // get info account\r\n   router.put(\"/api/webapi/change/userInfo\", middlewareController, userController.changeUser) // get info account\r\n   router.put(\"/api/webapi/change/pass\", middlewareController, userController.changePassword) // get info account\r\n\r\n   // bet wingo\r\n   router.post(\"/api/webapi/action/join\", middlewareController, winGoController.betWinGo) // register\r\n   router.post(\"/api/webapi/GetNoaverageEmerdList\", middlewareController, winGoController.listOrderOld) // register\r\n   router.post(\"/api/webapi/GetMyEmerdList\", middlewareController, winGoController.GetMyEmerdList) // register\r\n\r\n   // promotion\r\n   router.post(\"/api/webapi/promotion\", middlewareController, userController.promotion) // register\r\n   router.post(\"/api/webapi/checkIn\", middlewareController, userController.checkInHandling)\r\n   router.get(\"/api/webapi/checkIn\", middlewareController, userController.checkInData)\r\n   router.get(\"/api/webapi/checkIn/record\", middlewareController, userController.checkInRecord)\r\n   \r\n   router.post(\"/api/webapi/check/Info\", middlewareController, userController.infoUserBank) // register\r\n   router.post(\"/api/webapi/addBank\", middlewareController, userController.addBank) // register\r\n   router.post(\"/api/webapi/otp\", middlewareController, userController.verifyCode) // register\r\n   router.post(\"/api/webapi/use/redenvelope\", middlewareController, userController.useRedenvelope) // register\r\n   router.post(\"/api/webapi/addUpi\", middlewareController, userController.addUpi)\r\n\r\n   // wallet\r\n   router.post(\"/api/webapi/recharge\", middlewareController, userController.recharge)\r\n   router.post(\"/api/webapi/cancel_recharge\", middlewareController, userController.cancelRecharge) // register\r\n   router.post(\"/wowpay/create\", middlewareController, userController.wowpay)\r\n   router.post(\"/api/webapi/confirm_recharge\", middlewareController, userController.confirmRecharge)\r\n   router.get(\"/api/webapi/myTeam\", middlewareController, userController.listMyTeam) // register\r\n   router.get(\"/api/webapi/recharge/list\", middlewareController, userController.listRecharge) // register\r\n   router.get(\"/api/webapi/withdraw/list\", middlewareController, userController.listWithdraw) // register\r\n   router.post(\"/api/webapi/recharge/check\", middlewareController, userController.recharge2) // register\r\n   router.post(\"/api/webapi/withdrawal\", middlewareController, userController.withdrawal3) // register\r\n   router.post(\"/api/webapi/callback_bank\", middlewareController, userController.callback_bank) // register\r\n   router.post(\"/api/webapi/recharge/update\", middlewareController, userController.updateRecharge) // update recharge\r\n   router.post(\"/api/webapi/transfer\", middlewareController, userController.transfer) // register\r\n   router.get(\"/api/webapi/transfer_history\", middlewareController, userController.transferHistory) //\r\n   router.get(\"/api/webapi/confirm_recharge_usdt\", middlewareController, userController.confirmUSDTRecharge) //\r\n   router.post(\"/api/webapi/confirm_recharge_usdt\", middlewareController, userController.confirmUSDTRecharge) //\r\n\r\n   router.post(\"/api/webapi/search\", middlewareController, userController.search) // register\r\n\r\n   // daily\r\n   router.get(\"/manager/index\", dailyController.middlewareDailyController, dailyController.dailyPage)\r\n   router.get(\"/manager/listRecharge\", dailyController.middlewareDailyController, dailyController.listRecharge)\r\n   router.get(\"/manager/listWithdraw\", dailyController.middlewareDailyController, dailyController.listWithdraw)\r\n   router.get(\"/manager/members\", dailyController.middlewareDailyController, dailyController.listMeber)\r\n   router.get(\"/manager/profileMember\", dailyController.middlewareDailyController, dailyController.profileMember)\r\n   router.get(\"/manager/settings\", dailyController.middlewareDailyController, dailyController.settingPage)\r\n   router.get(\"/manager/gifts\", dailyController.middlewareDailyController, dailyController.giftPage)\r\n   router.get(\"/manager/support\", dailyController.middlewareDailyController, dailyController.support)\r\n   router.get(\"/manager/member/info/:phone\", dailyController.middlewareDailyController, dailyController.pageInfo)\r\n\r\n   router.post(\"/manager/member/info/:phone\", dailyController.middlewareDailyController, dailyController.userInfo)\r\n   router.post(\"/manager/member/listRecharge/:phone\", dailyController.middlewareDailyController, dailyController.listRechargeMem)\r\n   router.post(\"/manager/member/listWithdraw/:phone\", dailyController.middlewareDailyController, dailyController.listWithdrawMem)\r\n   router.post(\"/manager/member/redenvelope/:phone\", dailyController.middlewareDailyController, dailyController.listRedenvelope)\r\n   router.post(\"/manager/member/bet/:phone\", dailyController.middlewareDailyController, dailyController.listBet)\r\n\r\n   router.post(\"/manager/settings/list\", dailyController.middlewareDailyController, dailyController.settings)\r\n   router.post(\"/manager/createBonus\", dailyController.middlewareDailyController, dailyController.createBonus)\r\n   router.post(\"/manager/listRedenvelops\", dailyController.middlewareDailyController, dailyController.listRedenvelops)\r\n\r\n   router.post(\"/manager/listRecharge\", dailyController.middlewareDailyController, dailyController.listRechargeP)\r\n   router.post(\"/manager/listWithdraw\", dailyController.middlewareDailyController, dailyController.listWithdrawP)\r\n\r\n   router.post(\"/api/webapi/statistical\", dailyController.middlewareDailyController, dailyController.statistical)\r\n   router.post(\"/manager/infoCtv\", dailyController.middlewareDailyController, dailyController.infoCtv) // get info account\r\n   router.post(\"/manager/infoCtv/select\", dailyController.middlewareDailyController, dailyController.infoCtv2) // get info account\r\n   router.post(\"/api/webapi/manager/listMember\", dailyController.middlewareDailyController, dailyController.listMember) // get info account\r\n\r\n   router.post(\"/api/webapi/manager/buff\", dailyController.middlewareDailyController, dailyController.buffMoney) // get info account\r\n\r\n   // admin\r\n   router.get(\"/admin/manager/index\", adminController.middlewareAdminController, adminController.adminPage) // get info account\r\n   router.get(\"/admin/manager/index/3\", adminController.middlewareAdminController, adminController.adminPage3) // get info account\r\n   router.get(\"/admin/manager/index/5\", adminController.middlewareAdminController, adminController.adminPage5) // get info account\r\n   router.get(\"/admin/manager/index/10\", adminController.middlewareAdminController, adminController.adminPage10) // get info account\r\n\r\n   router.get(\"/admin/manager/5d\", adminController.middlewareAdminController, adminController.adminPage5d) // get info account\r\n   router.get(\"/admin/manager/k3\", adminController.middlewareAdminController, adminController.adminPageK3) // get info account\r\n   router.get(\"/admin/manager/aviator\", adminController.middlewareAdminController, adminController.adminPageAviator)\r\n\r\n   router.get(\"/admin/manager/members\", adminController.middlewareAdminController, adminController.membersPage) // get info account\r\n   router.get(\"/admin/manager/createBonus\", adminController.middlewareAdminController, adminController.giftPage) // get info account\r\n   router.get(\"/admin/manager/ctv\", adminController.middlewareAdminController, adminController.ctvPage) // get info account\r\n   router.get(\"/admin/manager/ctv/profile/:phone\", adminController.middlewareAdminController, adminController.ctvProfilePage) // get info account\r\n\r\n   router.get(\"/admin/manager/settings\", adminController.middlewareAdminController, adminController.settings) // get info account\r\n   router.post(\"/admin/manager/settings/notification\",adminController.middlewareAdminController,adminController.addNotification)\r\n   router.get(\"/admin/manager/listRedenvelops\", adminController.middlewareAdminController, adminController.listRedenvelops) // get info account\r\n   router.post(\"/admin/manager/infoCtv\", adminController.middlewareAdminController, adminController.infoCtv) // get info account\r\n   router.post(\"/admin/manager/infoCtv/select\", adminController.middlewareAdminController, adminController.infoCtv2) // get info account\r\n   router.post(\"/admin/manager/settings/bank\", adminController.middlewareAdminController, adminController.settingBank) // get info account\r\n   router.post(\"/admin/manager/settings/cskh\", adminController.middlewareAdminController, adminController.settingCskh) // get info account\r\n   router.post(\"/admin/manager/settings/buff\", adminController.middlewareAdminController, adminController.settingbuff) // get info account\r\n   router.post(\"/admin/manager/create/ctv\", adminController.middlewareAdminController, adminController.register) // get info account\r\n   router.post(\"/admin/manager/create/partner\", adminController.middlewareAdminController, adminController.registerPartner) \r\n   router.post(\"/admin/manager/settings/get\", adminController.middlewareAdminController, adminController.settingGet) // get info account\r\n   router.post(\"/admin/manager/createBonus\", adminController.middlewareAdminController, adminController.createBonus) // get info account\r\n\r\n   router.post(\"/admin/member/listRecharge/:phone\", adminController.middlewareAdminController, adminController.listRechargeMem)\r\n   router.post(\"/admin/member/listWithdraw/:phone\", adminController.middlewareAdminController, adminController.listWithdrawMem)\r\n   router.post(\"/admin/member/redenvelope/:phone\", adminController.middlewareAdminController, adminController.listRedenvelope)\r\n   router.post(\"/admin/member/bet/:phone\", adminController.middlewareAdminController, adminController.listBet)\r\n   router.post(\"/admin/member/aviatorBet/:phone\", adminController.middlewareAdminController, adminController.listBetAviator)\r\n\r\n   router.get(\"/admin/manager/recharge\", adminController.middlewareAdminController, adminController.rechargePage) // get info account\r\n   router.get(\"/admin/manager/withdraw\", adminController.middlewareAdminController, adminController.withdraw) // get info account\r\n   // router.get('/admin/manager/level', adminController.middlewareAdminController, adminController.level); // get info account\r\n   router.get(\"/admin/manager/levelSetting\", adminController.middlewareAdminController, adminController.levelSetting)\r\n   router.get(\"/admin/manager/CreatedSalaryRecord\", adminController.middlewareAdminController, adminController.CreatedSalaryRecord)\r\n   router.get(\"/admin/manager/rechargeRecord\", adminController.middlewareAdminController, adminController.rechargeRecord) // get info account\r\n   router.get(\"/admin/manager/withdrawRecord\", adminController.middlewareAdminController, adminController.withdrawRecord) // get info account\r\n   router.get(\"/admin/manager/statistical\", adminController.middlewareAdminController, adminController.statistical) // get info account\r\n   router.get(\"/admin/member/info/:id\", adminController.middlewareAdminController, adminController.infoMember)\r\n   router.get(\"/api/webapi/admin/getLevelInfo\", adminController.middlewareAdminController, adminController.getLevelInfo)\r\n   router.get(\"/api/webapi/admin/getSalary\", adminController.middlewareAdminController, adminController.getSalary)\r\n\r\n   router.get('/admin/manager/settings/getpool',adminController.middlewareAdminController,adminController.getPool);\r\n\r\n   router.post('/admin/manager/settings/updatePool',adminController.middlewareAdminController,adminController.updatePool)\r\n\r\n   router.post('/admin/aviatorResult',adminController.middlewareAdminController,adminController.aviatorResult);\r\n   router.get('/admin/bulkSMS',adminController.middlewareAdminController,adminController.bulkSmsPage);\r\n   router.post('/admin/filterData',adminController.middlewareAdminController,adminController.filteredUser);\r\n\r\n   router.post(\"/api/webapi/admin/updateLevel\", adminController.middlewareAdminController, adminController.updateLevel) // get info account\r\n   router.post(\"/api/webapi/admin/CreatedSalary\", adminController.middlewareAdminController, adminController.CreatedSalary) // get info account\r\n   router.post(\"/api/webapi/admin/listMember\", adminController.middlewareAdminController, adminController.listMember) // get info account\r\n   router.post(\"/api/webapi/admin/listctv\", adminController.middlewareAdminController, adminController.listCTV) // get info account\r\n   router.post(\"/api/webapi/admin/withdraw\", adminController.middlewareAdminController, adminController.handlWithdraw) // get info account\r\n   router.post(\"/api/webapi/admin/recharge\", adminController.middlewareAdminController, adminController.recharge) // get info account\r\n   router.post(\"/api/webapi/admin/rechargeDuyet\", adminController.middlewareAdminController, adminController.rechargeDuyet) // get info account\r\n   router.post(\"/api/webapi/admin/member/info\", adminController.middlewareAdminController, adminController.userInfo) // get info account\r\n   router.post(\"/api/webapi/admin/statistical\", adminController.middlewareAdminController, adminController.statistical2) // get info account\r\n\r\n   router.post(\"/api/webapi/admin/banned\", adminController.middlewareAdminController, adminController.banned) // get info account\r\n\r\n   router.post(\"/api/webapi/admin/totalJoin\", adminController.middlewareAdminController, adminController.totalJoin) // get info account\r\n   router.post(\"/api/webapi/admin/change\", adminController.middlewareAdminController, adminController.changeAdmin) // get info account\r\n   router.post(\"/api/webapi/admin/profileUser\", adminController.middlewareAdminController, adminController.profileUser) // get info account\r\n   router.get(\"/api/webapi/userme\",middlewareController,userController.userme)\r\n\r\n   // admin 5d\r\n   router.post(\"/api/webapi/admin/5d/listOrders\", adminController.middlewareAdminController, adminController.listOrderOld) // get info account\r\n   router.post(\"/api/webapi/admin/k3/listOrders\", adminController.middlewareAdminController, adminController.listOrderOldK3) // get info account\r\n   router.post(\"/api/webapi/admin/5d/editResult\", adminController.middlewareAdminController, adminController.editResult) // get info account\r\n   router.post(\"/api/webapi/admin/k3/editResult\", adminController.middlewareAdminController, adminController.editResult2) // get info account\r\n\r\n   // game stats\r\n   router.get(\"/api/webapi/admin/wingo/money_stats\", adminController.middlewareAdminController, adminController.getWingoBatingAmountOfOptions) // get info account\r\n   router.get(\"/api/webapi/admin/k3/money_stats\", adminController.middlewareAdminController, adminController.getK3BatingAmountOfOptions) // get info account\r\n   router.get(\"/api/webapi/admin/5d/money_stats\", adminController.middlewareAdminController, adminController.get5dBatingAmountOfOptions) // get info account\r\n\r\n   //activity\r\n\r\n   router.get(\"/activity/home\",middlewareController,homeController.getActivityPage);\r\n   router.get(\"/activity/records\",middlewareController,userController.activityRecords);\r\n   router.get(\"/activity/recordPage\",middlewareController,homeController.activityRecords)\r\n   router.post(\"/activity/claim\",middlewareController,userController.weeklyClaim);\r\n   router.get(\"/activity/invitationBonus\",middlewareController,homeController.invitationRewardPage)\r\n   router.post('/invitationReward/claim',middlewareController,homeController.invitationRewardClaim);\r\n   router.get(\"/activity/invitationBonusRules\",middlewareController,homeController.invitationRewardRules)\r\n\r\n\r\n   router.use('/aviator',middlewareController,homeController.gamePage);\r\n  //  router.use('/dragon',middlewareController,dragonController.userDekh);\r\n\r\n\r\n\r\n\r\n\r\n   return app.use(\"/\", router)\r\n}\r\n\r\nmodule.exports = {initWebRouter}\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1745726740429},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/accountController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const connection = require(\"../config/connectDB\");\nconst jwt = require(\"jsonwebtoken\");\nconst md5 = require(\"md5\");\nconst request = require(\"request\");\nconst e = require(\"express\");\nrequire(\"dotenv\").config();\nlet timeNow = Date.now();\nconst randomString = length => {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nconst randomNumber = (min, max) => {\n  return String(Math.floor(Math.random() * (max - min + 1)) + min);\n};\nconst isNumber = params => {\n  let pattern = /^[0-9]*\\d$/;\n  return pattern.test(params);\n};\nconst ipAddress = req => {\n  let ip = \"\";\n  if (req.headers[\"x-forwarded-for\"]) {\n    ip = req.headers[\"x-forwarded-for\"].split(\",\")[0];\n  } else if (req.connection && req.connection.remoteAddress) {\n    ip = req.connection.remoteAddress;\n  } else {\n    ip = req.ip;\n  }\n  return ip;\n};\nconst timeCreate = () => {\n  const d = new Date();\n  const time = d.getTime();\n  return time;\n};\nconst loginPage = async (req, res) => {\n  return res.render(\"account/login.ejs\");\n};\nconst registerPage = async (req, res) => {\n  return res.render(\"account/register.ejs\");\n};\nconst forgotPage = async (req, res) => {\n  return res.render(\"account/forgot.ejs\");\n};\nconst login = async (req, res) => {\n  let {\n    username,\n    pwd\n  } = req.body;\n  if (!username || !pwd || !username) {\n    //!isNumber(username)\n    return res.status(200).json({\n      message: \"ERROR!!!\"\n    });\n  }\n  try {\n    const [rows] = await connection.query(\"SELECT * FROM users WHERE phone = ? AND password = ? \", [username, md5(pwd)]);\n    if (rows.length == 1) {\n      if (rows[0].status == 1) {\n        const {\n          password,\n          money,\n          ip,\n          veri,\n          ip_address,\n          status,\n          time,\n          ...others\n        } = rows[0];\n        const accessToken = jwt.sign({\n          user: {\n            ...others\n          },\n          timeNow: timeNow\n        }, process.env.JWT_ACCESS_TOKEN, {\n          expiresIn: \"1d\"\n        });\n        await connection.execute(\"UPDATE `users` SET `token` = ? WHERE `phone` = ? \", [md5(accessToken), username]);\n        return res.status(200).json({\n          message: \"Login Successfully!\",\n          status: true,\n          token: accessToken,\n          value: md5(accessToken)\n        });\n      } else {\n        return res.status(200).json({\n          message: \"Account has been locked\",\n          status: false\n        });\n      }\n    } else {\n      return res.status(200).json({\n        message: \"Incorrect Username or Password\",\n        status: false\n      });\n    }\n  } catch (error) {\n    if (error) console.log(error);\n  }\n};\nconst register = async (req, res) => {\n  let now = new Date().getTime();\n  let {\n    username,\n    pwd,\n    invitecode,\n    otp\n  } = req.body;\n  let id_user = randomNumber(10000, 99999);\n  // let otp2 = randomNumber(100000, 999999)\n  let name_user = \"Member\" + randomNumber(10000, 99999);\n  let code = randomString(5) + randomNumber(10000, 99999);\n  let ip = ipAddress(req);\n  let time = timeCreate();\n  console.log(\"hi\");\n  if (!invitecode) {\n    invitecode = \"vpIgg59711\";\n  }\n  if (!username || !pwd) {\n    console.log(username, pwd);\n    return res.status(200).json({\n      message: \"ERROR!!!\",\n      status: false\n    });\n  }\n  if (username.length < 9 || username.length > 10 || !isNumber(username)) {\n    return res.status(200).json({\n      message: \"phone error\",\n      status: false\n    });\n  }\n  try {\n    const [check_u] = await connection.query(\"SELECT * FROM users WHERE phone = ?\", [username]);\n    const [check_i] = await connection.query(\"SELECT * FROM users WHERE code = ? \", [invitecode]);\n    //   const [check_ip] = await connection.query(\"SELECT * FROM users WHERE ip_address = ? \", [ip])\n    console.log(check_u, check_i, 'CHECK U DATA FROM BACKEND');\n    if (check_u.length == 1 && check_u[0].veri == 1) {\n      return res.status(200).json({\n        message: \"Registered phone number\",\n        status: false\n      });\n    } else {\n      // if(check_u[0].otp !== otp || check_u[0].time_otp - now <= 0){\n      //    return res.status(200).json({\n      //       message: \"Invalid OTP\",\n      //       status: false,\n      //    })\n      // }\n      let otp = \"0000\";\n      if (check_i.length == 1) {\n        // if (check_ip.length <= 3) {\n        let ctv = \"\";\n        if (check_i[0].level == 2 || check_i[0] == 1) {\n          ctv = check_i[0].phone;\n        } else {\n          ctv = check_i[0].ctv;\n        }\n        const sql = \"UPDATE users SET id_user = ?,phone = ?,name_user = ?,password = ?, plain_password = ?, money = ?,code = ?,invite = ?,ctv = ?,veri = ?,otp = ?,ip_address = ?,status = ?,time = ? where phone = ?\";\n        await connection.execute(sql, [id_user, username, name_user, md5(pwd), pwd, 10, code, invitecode, ctv, 1, otp, ip, 1, time, username]);\n        await connection.execute(\"INSERT INTO point_list SET phone = ?\", [username]);\n        let [check_code] = await connection.query(\"SELECT * FROM users WHERE invite = ? \", [invitecode]);\n        if (check_i.name_user !== \"Admin\") {\n          let levels = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44];\n          for (let i = 0; i < levels.length; i++) {\n            if (check_code.length >= levels[i]) {\n              await connection.execute(\"UPDATE users SET user_level = ? WHERE code = ?\", [i + 1, invitecode]);\n            } else {\n              break;\n            }\n          }\n        }\n        return res.status(200).json({\n          message: \"Registered successfully\",\n          status: true\n        });\n        // } else {\n        //    return res.status(200).json({\n        //       message: \"Registered IP address\",\n        //       status: false,\n        //    })\n        // }\n      } else {\n        // const sql = \"UPDATE users SET id_user = ?,phone = ?,name_user = ?,password = ?, plain_password = ?, money = ?,code = ?,veri = ?,otp = ?,ip_address = ?,status = ?,time = ? WHERE phone = ?\"\n        // await connection.execute(sql, [id_user, username, name_user, md5(pwd), pwd, 0, code, 1, otp, ip, 1, time,username])\n        // await connection.execute(\"INSERT INTO point_list SET phone = ?\", [username])\n        const sql = `\n  INSERT INTO users (\n    id_user, phone, name_user, password, plain_password, money,\n    code, veri, otp, ip_address, status, time, win_wallet\n  ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n`;\n        await connection.execute(sql, [id_user, username, name_user, md5(pwd), pwd, 0,\n        // money = 0\n        code, 1, otp, ip, 1, time, 0 // win_wallet = 0\n        ]);\n        await connection.execute(\"INSERT INTO point_list (phone) VALUES (?)\", [username]);\n        return res.status(200).json({\n          message: \"Registered successfully\",\n          status: true\n        });\n      }\n    }\n  } catch (error) {\n    if (error) console.log(error);\n  }\n};\nconst verifyCode = async (req, res) => {\n  // Extract phone number from request body\n  let phone = req.body.phone;\n\n  // Get current timestamp\n  let now = new Date().getTime();\n\n  // Calculate the expiry time for the OTP (2 minutes from now)\n  let timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500;\n\n  // Generate a random OTP (6-digit number)\n  let otp = randomNumber(100000, 999999);\n\n  // Check if the phone number is valid\n  if (phone.length < 9 || phone.length > 10 || !isNumber(phone)) {\n    return res.status(200).json({\n      message: \"phone error\",\n      status: false\n    });\n  }\n\n  // Check if the phone number exists in the database\n  const [rows] = await connection.query(\"SELECT * FROM users WHERE `phone` = ?\", [phone]);\n\n  // If the phone number doesn't exist\n  if (rows.length == 0) {\n    // Send OTP via SMS\n    await request(`https://sms.bulksmslab.com/SMSApi/send?userid=gamezone&password=Royal@12&sendMethod=quick&mobile=${phone}&msg=Your+OTP+is${otp}for+Phone+Verification.OTPSTE&senderid=OTPSTE&msgType=text&duplicatecheck=true&output=json`, async (error, response, body) => {\n      let data = JSON.parse(body);\n      if (data.status == \"success\") {\n        // If OTP sent successfully, insert OTP into database\n        await connection.execute(\"INSERT INTO users SET phone = ?, otp = ?, veri = 0, time_otp = ? \", [phone, otp, timeEnd]);\n        return res.status(200).json({\n          message: \"SMS sent sucessfully\",\n          status: true,\n          timeStamp: timeNow,\n          timeEnd: timeEnd\n        });\n      }\n    });\n  } else {\n    let user = rows[0];\n    // Check if the OTP has expired\n    if (user.time_otp - now <= 0) {\n      // Send OTP via SMS\n      request(`https://sms.bulksmslab.com/SMSApi/send?userid=gamezone&password=Royal@12&sendMethod=quick&mobile=${phone}&msg=Your+OTP+is${otp}for+Phone+Verification.OTPSTE&senderid=OTPSTE&msgType=text&duplicatecheck=true&output=json`, async (error, response, body) => {\n        let data = JSON.parse(body);\n        if (data.status == \"success\") {\n          // If OTP sent successfully, update OTP in database\n          await connection.execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, phone]);\n          return res.status(200).json({\n            message: \"Submitted successfully\",\n            status: true,\n            timeStamp: timeNow,\n            timeEnd: timeEnd\n          });\n        }\n      });\n    } else {\n      // If OTP is still valid, but hasn't expired yet\n      return res.status(200).json({\n        message: \"Send SMS regularly\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n  }\n};\nconst verifyCodePass = async (req, res) => {\n  let phone = req.body.phone;\n  let now = new Date().getTime();\n  let timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500;\n  let otp = randomNumber(100000, 999999);\n  if (phone.length < 9 || phone.length > 10 || !isNumber(phone)) {\n    return res.status(200).json({\n      message: \"phone error\",\n      status: false\n    });\n  }\n  const [rows] = await connection.query(\"SELECT * FROM users WHERE `phone` = ? AND veri = 1\", [phone]);\n  if (rows.length == 0) {\n    return res.status(200).json({\n      message: \"Account does not exist\",\n      status: false,\n      timeStamp: timeNow\n    });\n  } else {\n    let user = rows[0];\n    if (user.time_otp - now <= 0) {\n      request(`https://sms.bulksmslab.com/SMSApi/send?userid=gamezone&password=Royal@12&sendMethod=quick&mobile=${phone}&msg=Your+OTP+is${otp}for+Phone+Verification.OTPSTE&senderid=OTPSTE&msgType=text&duplicatecheck=true&output=json`, async (error, response, body) => {\n        let data = JSON.parse(body);\n        if (data.status == \"success\") {\n          await connection.execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, phone]);\n          return res.status(200).json({\n            message: \"Submitted successfully\",\n            status: true,\n            timeStamp: timeNow,\n            timeEnd: timeEnd\n          });\n        }\n      });\n    } else {\n      return res.status(200).json({\n        message: \"Send SMS regularly\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n  }\n};\nconst forGotPassword = async (req, res) => {\n  let username = req.body.username;\n  let otp = req.body.otp;\n  let pwd = req.body.pwd;\n  let now = new Date().getTime();\n  let timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500;\n  let otp2 = randomNumber(100000, 999999);\n  if (username.length < 9 || username.length > 10 || !isNumber(username)) {\n    return res.status(200).json({\n      message: \"phone error\",\n      status: false\n    });\n  }\n  const [rows] = await connection.query(\"SELECT * FROM users WHERE `phone` = ? AND veri = 1\", [username]);\n  if (rows.length == 0) {\n    return res.status(200).json({\n      message: \"Account does not exist\",\n      status: false,\n      timeStamp: timeNow\n    });\n  } else {\n    let user = rows[0];\n    if (user.time_otp - now > 0) {\n      if (user.otp == otp) {\n        await connection.execute(\"UPDATE users SET password = ?, otp = ?, time_otp = ?,plain_password = ? WHERE phone = ? \", [md5(pwd), otp2, timeEnd, pwd, username]);\n        return res.status(200).json({\n          message: \"Change password successfully\",\n          status: true,\n          timeStamp: timeNow,\n          timeEnd: timeEnd\n        });\n      } else {\n        return res.status(200).json({\n          message: \"OTP code is incorrect\",\n          status: false,\n          timeStamp: timeNow\n        });\n      }\n    } else {\n      return res.status(200).json({\n        message: \"OTP code has expired\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n  }\n};\nconst keFuMenu = async (req, res) => {\n  let auth = req.cookies.auth;\n  const [users] = await connection.query(\"SELECT `level`, `ctv` FROM users WHERE token = ?\", [auth]);\n  let telegram = \"\";\n  if (users.length == 0) {\n    let [settings] = await connection.query(\"SELECT `telegram`, `cskh` FROM admin\");\n    telegram = settings[0].telegram;\n  } else {\n    if (users[0].level != 0) {\n      var [settings] = await connection.query(\"SELECT * FROM admin\");\n    } else {\n      var [check] = await connection.query(\"SELECT `telegram` FROM point_list WHERE phone = ?\", [users[0].ctv]);\n      if (check.length == 0) {\n        var [settings] = await connection.query(\"SELECT * FROM admin\");\n      } else {\n        var [settings] = await connection.query(\"SELECT `telegram` FROM point_list WHERE phone = ?\", [users[0].ctv]);\n      }\n    }\n    telegram = settings[0].telegram;\n  }\n  return res.render(\"keFuMenu.ejs\", {\n    telegram\n  });\n};\nmodule.exports = {\n  login,\n  register,\n  loginPage,\n  registerPage,\n  forgotPage,\n  verifyCode,\n  verifyCodePass,\n  forGotPassword,\n  keFuMenu\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["connection","require","jwt","md5","request","e","config","timeNow","Date","now","randomString","length","result","characters","charactersLength","i","charAt","Math","floor","random","randomNumber","min","max","String","isNumber","params","pattern","test","ipAddress","req","ip","headers","split","remoteAddress","timeCreate","d","time","getTime","loginPage","res","render","registerPage","forgotPage","login","username","pwd","body","status","json","message","rows","query","password","money","veri","ip_address","others","accessToken","sign","user","process","env","JWT_ACCESS_TOKEN","expiresIn","execute","token","value","error","console","log","register","invitecode","otp","id_user","name_user","code","check_u","check_i","ctv","level","phone","sql","check_code","levels","verifyCode","timeEnd","response","data","JSON","parse","timeStamp","time_otp","verifyCodePass","forGotPassword","otp2","keFuMenu","auth","cookies","users","telegram","settings","check","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["accountController.js"],"sourcesContent":["const connection = require(\"../config/connectDB\")\r\nconst jwt = require(\"jsonwebtoken\")\r\nconst md5 = require(\"md5\")\r\nconst request = require(\"request\")\r\nconst e = require(\"express\")\r\nrequire(\"dotenv\").config()\r\n\r\nlet timeNow = Date.now()\r\n\r\nconst randomString = length => {\r\n   var result = \"\"\r\n   var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\r\n   var charactersLength = characters.length\r\n   for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength))\r\n   }\r\n   return result\r\n}\r\n\r\nconst randomNumber = (min, max) => {\r\n   return String(Math.floor(Math.random() * (max - min + 1)) + min)\r\n}\r\n\r\nconst isNumber = params => {\r\n   let pattern = /^[0-9]*\\d$/\r\n   return pattern.test(params)\r\n}\r\n\r\nconst ipAddress = req => {\r\n   let ip = \"\"\r\n   if (req.headers[\"x-forwarded-for\"]) {\r\n      ip = req.headers[\"x-forwarded-for\"].split(\",\")[0]\r\n   } else if (req.connection && req.connection.remoteAddress) {\r\n      ip = req.connection.remoteAddress\r\n   } else {\r\n      ip = req.ip\r\n   }\r\n   return ip\r\n}\r\n\r\nconst timeCreate = () => {\r\n   const d = new Date()\r\n   const time = d.getTime()\r\n   return time\r\n}\r\n\r\nconst loginPage = async (req, res) => {\r\n   return res.render(\"account/login.ejs\")\r\n}\r\n\r\nconst registerPage = async (req, res) => {\r\n   return res.render(\"account/register.ejs\")\r\n}\r\n\r\nconst forgotPage = async (req, res) => {\r\n   return res.render(\"account/forgot.ejs\")\r\n}\r\n\r\nconst login = async (req, res) => {\r\n   let { username, pwd } = req.body\r\n\r\n   if (!username || !pwd || !username) {\r\n      //!isNumber(username)\r\n      return res.status(200).json({\r\n         message: \"ERROR!!!\",\r\n      })\r\n   }\r\n\r\n   try {\r\n      const [rows] = await connection.query(\"SELECT * FROM users WHERE phone = ? AND password = ? \", [username, md5(pwd)])\r\n      if (rows.length == 1) {\r\n         if (rows[0].status == 1) {\r\n            const { password, money, ip, veri, ip_address, status, time, ...others } = rows[0]\r\n            const accessToken = jwt.sign(\r\n               {\r\n                  user: { ...others },\r\n                  timeNow: timeNow,\r\n               },\r\n               process.env.JWT_ACCESS_TOKEN,\r\n               { expiresIn: \"1d\" },\r\n            )\r\n            await connection.execute(\"UPDATE `users` SET `token` = ? WHERE `phone` = ? \", [md5(accessToken), username])\r\n            return res.status(200).json({\r\n               message: \"Login Successfully!\",\r\n               status: true,\r\n               token: accessToken,\r\n               value: md5(accessToken),\r\n            })\r\n         } else {\r\n            return res.status(200).json({\r\n               message: \"Account has been locked\",\r\n               status: false,\r\n            })\r\n         }\r\n      } else {\r\n         return res.status(200).json({\r\n            message: \"Incorrect Username or Password\",\r\n            status: false,\r\n         })\r\n      }\r\n   } catch (error) {\r\n      if (error) console.log(error)\r\n   }\r\n}\r\n\r\nconst register = async (req, res) => {\r\n   let now = new Date().getTime()\r\n   let { username, pwd, invitecode, otp } = req.body\r\n   let id_user = randomNumber(10000, 99999)\r\n   // let otp2 = randomNumber(100000, 999999)\r\n   let name_user = \"Member\" + randomNumber(10000, 99999)\r\n   let code = randomString(5) + randomNumber(10000, 99999)\r\n   let ip = ipAddress(req)\r\n   let time = timeCreate()\r\n   console.log(\"hi\");\r\n\r\n   if (!invitecode) {\r\n      invitecode = \"vpIgg59711\";\r\n   }\r\n\r\n   if (!username || !pwd) {\r\n      console.log(username, pwd)\r\n      return res.status(200).json({\r\n         message: \"ERROR!!!\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (username.length < 9 || username.length > 10 || !isNumber(username)) {\r\n      return res.status(200).json({\r\n         message: \"phone error\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   try {\r\n      const [check_u] = await connection.query(\"SELECT * FROM users WHERE phone = ?\", [username])\r\n      const [check_i] = await connection.query(\"SELECT * FROM users WHERE code = ? \", [invitecode])\r\n      //   const [check_ip] = await connection.query(\"SELECT * FROM users WHERE ip_address = ? \", [ip])\r\n      console.log(check_u, check_i, 'CHECK U DATA FROM BACKEND')\r\n      if (check_u.length == 1 && check_u[0].veri == 1) {\r\n         return res.status(200).json({\r\n            message: \"Registered phone number\",\r\n            status: false,\r\n         })\r\n      }\r\n      else {\r\n         // if(check_u[0].otp !== otp || check_u[0].time_otp - now <= 0){\r\n         //    return res.status(200).json({\r\n         //       message: \"Invalid OTP\",\r\n         //       status: false,\r\n         //    })\r\n         // }\r\n         let otp = \"0000\"\r\n         if (check_i.length == 1) {\r\n            // if (check_ip.length <= 3) {\r\n            let ctv = \"\"\r\n            if (check_i[0].level == 2 || check_i[0] == 1) {\r\n               ctv = check_i[0].phone\r\n            } else {\r\n               ctv = check_i[0].ctv\r\n            }\r\n            const sql = \"UPDATE users SET id_user = ?,phone = ?,name_user = ?,password = ?, plain_password = ?, money = ?,code = ?,invite = ?,ctv = ?,veri = ?,otp = ?,ip_address = ?,status = ?,time = ? where phone = ?\"\r\n            await connection.execute(sql, [id_user, username, name_user, md5(pwd), pwd, 10, code, invitecode, ctv, 1, otp, ip, 1, time, username])\r\n            await connection.execute(\"INSERT INTO point_list SET phone = ?\", [username])\r\n\r\n            let [check_code] = await connection.query(\"SELECT * FROM users WHERE invite = ? \", [invitecode])\r\n\r\n            if (check_i.name_user !== \"Admin\") {\r\n               let levels = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44]\r\n\r\n               for (let i = 0; i < levels.length; i++) {\r\n                  if (check_code.length >= levels[i]) {\r\n                     await connection.execute(\"UPDATE users SET user_level = ? WHERE code = ?\", [i + 1, invitecode])\r\n                  } else {\r\n                     break\r\n                  }\r\n               }\r\n            }\r\n\r\n            return res.status(200).json({\r\n               message: \"Registered successfully\",\r\n               status: true,\r\n            })\r\n            // } else {\r\n            //    return res.status(200).json({\r\n            //       message: \"Registered IP address\",\r\n            //       status: false,\r\n            //    })\r\n            // }\r\n         } else {\r\n            // const sql = \"UPDATE users SET id_user = ?,phone = ?,name_user = ?,password = ?, plain_password = ?, money = ?,code = ?,veri = ?,otp = ?,ip_address = ?,status = ?,time = ? WHERE phone = ?\"\r\n            // await connection.execute(sql, [id_user, username, name_user, md5(pwd), pwd, 0, code, 1, otp, ip, 1, time,username])\r\n            // await connection.execute(\"INSERT INTO point_list SET phone = ?\", [username])\r\n            const sql = `\r\n  INSERT INTO users (\r\n    id_user, phone, name_user, password, plain_password, money,\r\n    code, veri, otp, ip_address, status, time, win_wallet\r\n  ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\r\n`;\r\n\r\nawait connection.execute(sql, [\r\n  id_user, username, name_user, md5(pwd), pwd, 0,  // money = 0\r\n  code, 1, otp, ip, 1, time, 0                     // win_wallet = 0\r\n]);\r\n\r\n\r\n            await connection.execute(\"INSERT INTO point_list (phone) VALUES (?)\", [username]);\r\n\r\n            return res.status(200).json({\r\n               message: \"Registered successfully\",\r\n               status: true,\r\n            })\r\n         }\r\n      }\r\n   } catch (error) {\r\n      if (error) console.log(error)\r\n   }\r\n}\r\n\r\nconst verifyCode = async (req, res) => {\r\n   // Extract phone number from request body\r\n   let phone = req.body.phone;\r\n\r\n\r\n\r\n   // Get current timestamp\r\n   let now = new Date().getTime();\r\n\r\n   // Calculate the expiry time for the OTP (2 minutes from now)\r\n   let timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500;\r\n\r\n   // Generate a random OTP (6-digit number)\r\n   let otp = randomNumber(100000, 999999);\r\n\r\n   // Check if the phone number is valid\r\n   if (phone.length < 9 || phone.length > 10 || !isNumber(phone)) {\r\n      return res.status(200).json({\r\n         message: \"phone error\",\r\n         status: false\r\n      });\r\n   }\r\n\r\n   // Check if the phone number exists in the database\r\n   const [rows] = await connection.query(\r\n      \"SELECT * FROM users WHERE `phone` = ?\",\r\n      [phone]\r\n   );\r\n\r\n   // If the phone number doesn't exist\r\n   if (rows.length == 0) {\r\n      // Send OTP via SMS\r\n      await request(\r\n         `https://sms.bulksmslab.com/SMSApi/send?userid=gamezone&password=Royal@12&sendMethod=quick&mobile=${phone}&msg=Your+OTP+is${otp}for+Phone+Verification.OTPSTE&senderid=OTPSTE&msgType=text&duplicatecheck=true&output=json`,\r\n         async (error, response, body) => {\r\n            let data = JSON.parse(body);\r\n            if (data.status == \"success\") {\r\n               // If OTP sent successfully, insert OTP into database\r\n               await connection.execute(\r\n                  \"INSERT INTO users SET phone = ?, otp = ?, veri = 0, time_otp = ? \",\r\n                  [phone, otp, timeEnd]\r\n               );\r\n               return res.status(200).json({\r\n                  message: \"SMS sent sucessfully\",\r\n                  status: true,\r\n                  timeStamp: timeNow,\r\n                  timeEnd: timeEnd\r\n               });\r\n            }\r\n         }\r\n      );\r\n   } else {\r\n      let user = rows[0];\r\n      // Check if the OTP has expired\r\n      if (user.time_otp - now <= 0) {\r\n         // Send OTP via SMS\r\n         request(\r\n            `https://sms.bulksmslab.com/SMSApi/send?userid=gamezone&password=Royal@12&sendMethod=quick&mobile=${phone}&msg=Your+OTP+is${otp}for+Phone+Verification.OTPSTE&senderid=OTPSTE&msgType=text&duplicatecheck=true&output=json`,\r\n            async (error, response, body) => {\r\n               let data = JSON.parse(body);\r\n               if (data.status == \"success\") {\r\n                  // If OTP sent successfully, update OTP in database\r\n                  await connection.execute(\r\n                     \"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \",\r\n                     [otp, timeEnd, phone]\r\n                  );\r\n                  return res.status(200).json({\r\n                     message: \"Submitted successfully\",\r\n                     status: true,\r\n                     timeStamp: timeNow,\r\n                     timeEnd: timeEnd\r\n                  });\r\n               }\r\n            }\r\n         );\r\n      } else {\r\n         // If OTP is still valid, but hasn't expired yet\r\n         return res.status(200).json({\r\n            message: \"Send SMS regularly\",\r\n            status: false,\r\n            timeStamp: timeNow\r\n         });\r\n      }\r\n   }\r\n};\r\n\r\nconst verifyCodePass = async (req, res) => {\r\n   let phone = req.body.phone\r\n   let now = new Date().getTime()\r\n   let timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500\r\n   let otp = randomNumber(100000, 999999)\r\n\r\n   if (phone.length < 9 || phone.length > 10 || !isNumber(phone)) {\r\n      return res.status(200).json({\r\n         message: \"phone error\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   const [rows] = await connection.query(\"SELECT * FROM users WHERE `phone` = ? AND veri = 1\", [phone])\r\n   if (rows.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Account does not exist\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   } else {\r\n      let user = rows[0]\r\n      if (user.time_otp - now <= 0) {\r\n         request(`https://sms.bulksmslab.com/SMSApi/send?userid=gamezone&password=Royal@12&sendMethod=quick&mobile=${phone}&msg=Your+OTP+is${otp}for+Phone+Verification.OTPSTE&senderid=OTPSTE&msgType=text&duplicatecheck=true&output=json`, async (error, response, body) => {\r\n            let data = JSON.parse(body)\r\n            if (data.status == \"success\") {\r\n               await connection.execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, phone])\r\n               return res.status(200).json({\r\n                  message: \"Submitted successfully\",\r\n                  status: true,\r\n                  timeStamp: timeNow,\r\n                  timeEnd: timeEnd,\r\n               })\r\n            }\r\n         })\r\n      } else {\r\n         return res.status(200).json({\r\n            message: \"Send SMS regularly\",\r\n            status: false,\r\n            timeStamp: timeNow,\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nconst forGotPassword = async (req, res) => {\r\n   let username = req.body.username\r\n   let otp = req.body.otp\r\n   let pwd = req.body.pwd\r\n   let now = new Date().getTime()\r\n   let timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500\r\n   let otp2 = randomNumber(100000, 999999)\r\n\r\n   if (username.length < 9 || username.length > 10 || !isNumber(username)) {\r\n      return res.status(200).json({\r\n         message: \"phone error\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   const [rows] = await connection.query(\"SELECT * FROM users WHERE `phone` = ? AND veri = 1\", [username])\r\n   if (rows.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Account does not exist\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   } else {\r\n      let user = rows[0]\r\n      if (user.time_otp - now > 0) {\r\n         if (user.otp == otp) {\r\n            await connection.execute(\"UPDATE users SET password = ?, otp = ?, time_otp = ?,plain_password = ? WHERE phone = ? \", [md5(pwd), otp2, timeEnd, pwd, username])\r\n            return res.status(200).json({\r\n               message: \"Change password successfully\",\r\n               status: true,\r\n               timeStamp: timeNow,\r\n               timeEnd: timeEnd,\r\n            })\r\n         } else {\r\n            return res.status(200).json({\r\n               message: \"OTP code is incorrect\",\r\n               status: false,\r\n               timeStamp: timeNow,\r\n            })\r\n         }\r\n      } else {\r\n         return res.status(200).json({\r\n            message: \"OTP code has expired\",\r\n            status: false,\r\n            timeStamp: timeNow,\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nconst keFuMenu = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n\r\n   const [users] = await connection.query(\"SELECT `level`, `ctv` FROM users WHERE token = ?\", [auth])\r\n\r\n   let telegram = \"\"\r\n   if (users.length == 0) {\r\n      let [settings] = await connection.query(\"SELECT `telegram`, `cskh` FROM admin\")\r\n      telegram = settings[0].telegram\r\n   } else {\r\n      if (users[0].level != 0) {\r\n         var [settings] = await connection.query(\"SELECT * FROM admin\")\r\n      } else {\r\n         var [check] = await connection.query(\"SELECT `telegram` FROM point_list WHERE phone = ?\", [users[0].ctv])\r\n         if (check.length == 0) {\r\n            var [settings] = await connection.query(\"SELECT * FROM admin\")\r\n         } else {\r\n            var [settings] = await connection.query(\"SELECT `telegram` FROM point_list WHERE phone = ?\", [users[0].ctv])\r\n         }\r\n      }\r\n      telegram = settings[0].telegram\r\n   }\r\n\r\n   return res.render(\"keFuMenu.ejs\", { telegram })\r\n}\r\n\r\n\r\nmodule.exports = {\r\n   login,\r\n   register,\r\n   loginPage,\r\n   registerPage,\r\n   forgotPage,\r\n   verifyCode,\r\n   verifyCodePass,\r\n   forGotPassword,\r\n   keFuMenu,\r\n}\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/config/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/config/connectDB.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const mysql = require('mysql2/promise');\n\n// const connection = mysql.createPool({\n//     host: 'localhost',\n//     user: 'demoprojects',\n//     // user:'root',\n//     // password:'',\n//     // database:'goa',\n//     password: '#demoProjects#$4@',\n//     database: 'goagamesclub',\n//     port: 8000\n// });\n\n// module.exports = connection;\n\n// const mysql = require('mysql2/promise');\n\nconst connection = mysql.createPool({\n  host: 'localhost',\n  // or '127.0.0.1' since it's on the same EC2 server\n  user: 'gameuser',\n  password: 'Avatior@123',\n  database: 'gameavitor',\n  port: 3306\n});\n\n// const connection = mysql.createPool({\n//     host: 'localhost',\n//     user: 'root',\n//     password: '',  // XAMPP's default root password is blank\n//     database: 'gameavitor',\n//     port: 3306\n// });\n\nmodule.exports = connection;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJteXNxbCIsInJlcXVpcmUiLCJjb25uZWN0aW9uIiwiY3JlYXRlUG9vbCIsImhvc3QiLCJ1c2VyIiwicGFzc3dvcmQiLCJkYXRhYmFzZSIsInBvcnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvaW5mYXlvdWRpZ2l0YWwvRGVza3RvcC9hdmF0aW9yL0dhb2dhbWVzL3NyYy9jb25maWcvIiwic291cmNlcyI6WyJjb25uZWN0REIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbXlzcWwgPSByZXF1aXJlKCdteXNxbDIvcHJvbWlzZScpO1xyXG5cclxuLy8gY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZVBvb2woe1xyXG4vLyAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbi8vICAgICB1c2VyOiAnZGVtb3Byb2plY3RzJyxcclxuLy8gICAgIC8vIHVzZXI6J3Jvb3QnLFxyXG4vLyAgICAgLy8gcGFzc3dvcmQ6JycsXHJcbi8vICAgICAvLyBkYXRhYmFzZTonZ29hJyxcclxuLy8gICAgIHBhc3N3b3JkOiAnI2RlbW9Qcm9qZWN0cyMkNEAnLFxyXG4vLyAgICAgZGF0YWJhc2U6ICdnb2FnYW1lc2NsdWInLFxyXG4vLyAgICAgcG9ydDogODAwMFxyXG4vLyB9KTtcclxuXHJcbi8vIG1vZHVsZS5leHBvcnRzID0gY29ubmVjdGlvbjtcclxuXHJcbi8vIGNvbnN0IG15c3FsID0gcmVxdWlyZSgnbXlzcWwyL3Byb21pc2UnKTtcclxuXHJcbmNvbnN0IGNvbm5lY3Rpb24gPSBteXNxbC5jcmVhdGVQb29sKHtcclxuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLCAvLyBvciAnMTI3LjAuMC4xJyBzaW5jZSBpdCdzIG9uIHRoZSBzYW1lIEVDMiBzZXJ2ZXJcclxuICAgIHVzZXI6ICdnYW1ldXNlcicsXHJcbiAgICBwYXNzd29yZDogJ0F2YXRpb3JAMTIzJyxcclxuICAgIGRhdGFiYXNlOiAnZ2FtZWF2aXRvcicsXHJcbiAgICBwb3J0OiAzMzA2XHJcbn0pO1xyXG5cclxuLy8gY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZVBvb2woe1xyXG4vLyAgICAgaG9zdDogJ2xvY2FsaG9zdCcsXHJcbi8vICAgICB1c2VyOiAncm9vdCcsXHJcbi8vICAgICBwYXNzd29yZDogJycsICAvLyBYQU1QUCdzIGRlZmF1bHQgcm9vdCBwYXNzd29yZCBpcyBibGFua1xyXG4vLyAgICAgZGF0YWJhc2U6ICdnYW1lYXZpdG9yJyxcclxuLy8gICAgIHBvcnQ6IDMzMDZcclxuLy8gfSk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGNvbm5lY3Rpb247Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQzs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUEsTUFBTUMsVUFBVSxHQUFHRixLQUFLLENBQUNHLFVBQVUsQ0FBQztFQUNoQ0MsSUFBSSxFQUFFLFdBQVc7RUFBRTtFQUNuQkMsSUFBSSxFQUFFLFVBQVU7RUFDaEJDLFFBQVEsRUFBRSxhQUFhO0VBQ3ZCQyxRQUFRLEVBQUUsWUFBWTtFQUN0QkMsSUFBSSxFQUFFO0FBQ1YsQ0FBQyxDQUFDOztBQUVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBQyxNQUFNLENBQUNDLE9BQU8sR0FBR1IsVUFBVSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["mysql","require","connection","createPool","host","user","password","database","port","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/config/","sources":["connectDB.js"],"sourcesContent":["const mysql = require('mysql2/promise');\r\n\r\n// const connection = mysql.createPool({\r\n//     host: 'localhost',\r\n//     user: 'demoprojects',\r\n//     // user:'root',\r\n//     // password:'',\r\n//     // database:'goa',\r\n//     password: '#demoProjects#$4@',\r\n//     database: 'goagamesclub',\r\n//     port: 8000\r\n// });\r\n\r\n// module.exports = connection;\r\n\r\n// const mysql = require('mysql2/promise');\r\n\r\nconst connection = mysql.createPool({\r\n    host: 'localhost', // or '127.0.0.1' since it's on the same EC2 server\r\n    user: 'gameuser',\r\n    password: 'Avatior@123',\r\n    database: 'gameavitor',\r\n    port: 3306\r\n});\r\n\r\n// const connection = mysql.createPool({\r\n//     host: 'localhost',\r\n//     user: 'root',\r\n//     password: '',  // XAMPP's default root password is blank\r\n//     database: 'gameavitor',\r\n//     port: 3306\r\n// });\r\n\r\nmodule.exports = connection;"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,gBAAgB,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAMC,UAAU,GAAGF,KAAK,CAACG,UAAU,CAAC;EAChCC,IAAI,EAAE,WAAW;EAAE;EACnBC,IAAI,EAAE,UAAU;EAChBC,QAAQ,EAAE,aAAa;EACvBC,QAAQ,EAAE,YAAY;EACtBC,IAAI,EAAE;AACV,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAGR,UAAU","ignoreList":[]}},"mtime":1745750232797},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/homeController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const {\n  select\n} = require(\"async\");\nconst connection = require(\"../config/connectDB\");\n// import jwt from 'jsonwebtoken'\n// import md5 from \"md5\";\n// import e from \"express\";\n\nconst homePage = async (req, res) => {\n  let [setting] = await connection.query('SELECT `app`,`telegram` FROM admin');\n  let auth = req?.cookies?.auth;\n  const [user] = await connection.query('SELECT `win_wallet`,`money` FROM users WHERE `token` = ? ', [auth]);\n  let app = setting[0].app;\n  let telegram = setting[0].telegram;\n  console.log(auth, user[0], \"guhijoptfyguhij\");\n  if (!auth) {\n    let money = false;\n    return res.render(\"home/index.ejs\", {\n      app,\n      telegram,\n      money\n    });\n  } else {\n    const [user] = await connection.query('SELECT `win_wallet`,`money`, `name_user`,`ekyc` FROM users WHERE `token` = ? ', [auth]);\n    console.log(user[0], \"username hahahahhahahahahhah\");\n    let money = Number(user[0]?.win_wallet || 0);\n    let username = user[0]?.name_user;\n    let ekyc = user[0]?.ekyc;\n    return res.render(\"home/index.ejs\", {\n      app,\n      telegram,\n      money,\n      username,\n      ekyc\n    });\n  }\n};\nconst ad = async (req, res) => {\n  return res.render(\"home/add.ejs\");\n};\nconst tele = async (req, res) => {\n  return res.render(\"home/tele.ejs\");\n};\nconst checkInPage = async (req, res) => {\n  return res.render(\"checkIn/checkIn.ejs\");\n};\nconst checkDes = async (req, res) => {\n  return res.render(\"checkIn/checkDes.ejs\");\n};\nconst checkRecord = async (req, res) => {\n  return res.render(\"checkIn/checkRecord.ejs\");\n};\nconst addBank = async (req, res) => {\n  return res.render(\"wallet/addbank.ejs\");\n};\n\n// promotion\nconst promotionPage = async (req, res) => {\n  return res.render(\"promotion/promotion.ejs\");\n};\nconst promotionmyTeamPage = async (req, res) => {\n  return res.render(\"promotion/myTeam.ejs\");\n};\nconst promotionDesPage = async (req, res) => {\n  return res.render(\"promotion/promotionDes.ejs\");\n};\nconst tutorialPage = async (req, res) => {\n  return res.render(\"member/beginnersGuide.ejs\");\n};\nconst bonusRecordPage = async (req, res) => {\n  return res.render(\"promotion/bonusrecord.ejs\");\n};\nconst partnerRewardPage = async (req, res) => {\n  try {\n    const auth = req.cookies.auth;\n    const [userInfo] = await connection.execute('SELECT code FROM users WHERE token = ?', [auth]);\n    if (userInfo.length === 0) {\n      return res.status(404).send('User not found');\n    }\n    let totalCount = 0;\n    async function fetchUserDataByCode(code, depth = 1) {\n      if (depth > 6) {\n        return;\n      }\n      const [userData] = await connection.query(\"SELECT `id_user`, `name_user`, `phone`, `code`, `invite`, `rank`, `total_money` FROM users WHERE `invite` = ?\", [code]);\n      if (userData.length > 0) {\n        for (const user of userData) {\n          totalCount++;\n          await fetchUserDataByCode(user.code, depth + 1);\n        }\n      }\n    }\n    await fetchUserDataByCode(userInfo[0].code);\n    const [count] = await connection.execute(`\n            SELECT \n              COUNT(DISTINCT member_phone) AS effectiveCount, \n              SUM(amount) AS totalAmount \n            FROM partner_reward\n          `);\n    const active = count[0].effectiveCount;\n    const totalAmount = count[0].totalAmount;\n    return res.render('promotion/partnerReward.ejs', {\n      totalCount,\n      active,\n      totalAmount\n    });\n  } catch (error) {\n    console.error('Error in partnerRewardPage:', error);\n    return res.status(500).send('Internal Server Error');\n  }\n};\nconst comissionDetailsPage = async (req, res) => {\n  return res.render(\"promotion/commissionDetails.ejs\");\n};\n\n// wallet\nconst walletPage = async (req, res) => {\n  return res.render(\"wallet/index.ejs\");\n};\n\n// const rechargePage = async (req, res) => {\n//     return res.render(\"wallet/recharge.ejs\", {\n//         MinimumMoney: process.env.MINIMUM_MONEY\n//     });\n// }\n\nconst rechargePage = async (req, res) => {\n  try {\n    // --- Logic adapted from homePage ---\n    let auth = req?.cookies?.auth; // Get auth token from cookies\n\n    // Define variables with defaults for logged-out state\n    let username = null;\n    let money = null; // Using null as default, template handles display\n    let ekyc = null; // Using null as default\n\n    // Check if the user is potentially logged in (auth cookie exists)\n    if (auth) {\n      // Query the database for user details using the token\n      const [userData] = await connection.query('SELECT `win_wallet`, `money`, `name_user`, `ekyc` FROM users WHERE `token` = ? LIMIT 1', [auth]);\n\n      // Check if user was actually found with that token\n      if (userData && userData.length > 0) {\n        const user = userData[0];\n        // Calculate total money (handle potential nulls/NaN with || 0)\n        let calculatedMoney = (Number(user.win_wallet) || 0) + (Number(user.money) || 0);\n        money = calculatedMoney; // Assign the calculated value\n        username = user.name_user;\n        ekyc = user.ekyc;\n\n        // Optional: Log fetched data for verification\n        // console.log(\"Recharge Page - User Found:\", { username, money, ekyc });\n      } else {\n        // Optional: Log if token exists but user not found (indicates invalid token?)\n        // console.log(\"Recharge Page - Auth cookie found, but no user matched token:\", auth);\n        // Keep defaults (user is effectively logged out)\n      }\n    } else {\n      // Optional: Log if no auth cookie found\n      // console.log(\"Recharge Page - No auth cookie found.\");\n    }\n    // --- End of adapted logic ---\n\n    // Render the recharge template, passing MinimumMoney AND the user data (or defaults)\n    return res.render(\"wallet/recharge.ejs\", {\n      MinimumMoney: process.env.MINIMUM_MONEY,\n      // Keep this\n      username: username,\n      // Pass username (or null)\n      money: money,\n      // Pass calculated money (or null)\n      ekyc: ekyc // Pass ekyc status (or null)\n    });\n  } catch (error) {\n    console.error(\"Error in rechargePage controller:\", error);\n    // Consider rendering an error page or sending a generic error\n    return res.status(500).send(\"Error loading recharge page.\");\n  }\n};\nconst rechargerecordPage = async (req, res) => {\n  return res.render(\"wallet/rechargerecord.ejs\");\n};\n\n// Assuming 'connection' is your database connection object, required nearby\n\nconst withdrawalPage = async (req, res) => {\n  try {\n    // --- Get auth token from cookies ---\n    let auth = req?.cookies?.auth;\n\n    // --- Define variables with defaults for logged-out state ---\n    let username = null;\n    let money = null; // Will hold calculated total balance\n    let ekyc = null;\n    let extra = null; // Keep the specific data for this page, default to null\n    let first = null;\n    // --- Check if the user is potentially logged in (auth cookie exists) ---\n    if (auth) {\n      // --- Query the database for ALL details needed for sidebar AND withdrawal page ---\n      const [userData] = await connection.query('SELECT `win_wallet`, `money`, `name_user`,`first_recharge`, `ekyc`, `extra` FROM users WHERE `token` = ? LIMIT 1', [auth]);\n\n      // Check if user was actually found with that token\n      if (userData && userData.length > 0) {\n        const user = userData[0];\n\n        // Calculate total money (handle potential nulls/NaN with || 0)\n        let calculatedMoney = Number(user.win_wallet) || 0;\n        money = calculatedMoney; // Assign the calculated value\n\n        // Assign other values\n        username = user.name_user;\n        ekyc = user.ekyc;\n        extra = user.extra;\n        first = user.first_recharge;\n        // Assign the value specific to withdrawal\n\n        // Optional: Log fetched data for verification\n        // console.log(\"Withdrawal Page - User Found:\", { username, money, ekyc, extra });\n      } else {\n        // Optional: Log if token exists but user not found\n        // console.log(\"Withdrawal Page - Auth cookie found, but no user matched token:\", auth);\n        // Keep defaults (user is effectively logged out)\n      }\n    } else {\n      // Optional: Log if no auth cookie found\n      // console.log(\"Withdrawal Page - No auth cookie found.\");\n    }\n    // --- End of user data logic ---\n\n    // --- Render the withdrawal template, passing ALL required data ---\n    return res.render(\"wallet/withdrawal.ejs\", {\n      username: username,\n      // Pass username (or null)\n      money: money,\n      // Pass calculated money (or null)\n      ekyc: ekyc,\n      // Pass ekyc status (or null)\n      extra: extra,\n      first: first // Pass the withdrawal-specific data (or null)\n      // Add any other variables specifically needed by withdrawal.ejs\n    });\n  } catch (error) {\n    console.error(\"Error in withdrawalPage controller:\", error);\n    // Consider rendering an error page or sending a generic error\n    return res.status(500).send(\"Error loading withdrawal page.\");\n  }\n};\n\n// Ensure this function is exported correctly from your controller file\n// module.exports = { withdrawalPage, ... };\n\nconst withdrawalrecordPage = async (req, res) => {\n  return res.render(\"wallet/withdrawalrecord.ejs\");\n};\nconst transfer = async (req, res) => {\n  return res.render(\"wallet/transfer.ejs\");\n};\n\n// member page\nconst mianPage = async (req, res) => {\n  let auth = req.cookies.auth;\n  const [user] = await connection.query('SELECT `level` FROM users WHERE `token` = ? ', [auth]);\n  const [settings] = await connection.query('SELECT `cskh` FROM admin');\n  let cskh = settings[0].cskh;\n  let level = user[0].level;\n  return res.render(\"member/index.ejs\", {\n    level,\n    cskh\n  });\n};\nconst aboutPage = async (req, res) => {\n  return res.render(\"member/about/index.ejs\");\n};\nconst ekyc = async (req, res) => {\n  return res.render(\"member/about/ekc.ejs\");\n};\nconst attendance = async (req, res) => {\n  return res.render(\"checkIn/reward.ejs\");\n};\nconst recordsalary = async (req, res) => {\n  return res.render(\"member/about/recordsalary.ejs\");\n};\nconst Confidentiality = async (req, res) => {\n  return res.render(\"member/about/Confidentiality.ejs\");\n};\nconst weeklyDeposit = [{\n  deposit: 10000,\n  bonus: 40\n}, {\n  deposit: 50000,\n  bonus: 250\n}, {\n  deposit: 200000,\n  bonus: 600\n}, {\n  deposit: 800000,\n  bonus: 2000\n}, {\n  deposit: 2000000,\n  bonus: 6000\n}, {\n  deposit: 5000000,\n  bonus: 13000\n}, {\n  deposit: 10000000,\n  bonus: 25000\n}];\nconst getActivityPage = async (req, res) => {\n  const auth = req.cookies.auth;\n  const currentDate = new Date();\n  let [user] = await connection.query('SELECT * FROM users WHERE token = ?', [auth]);\n  const weeklyClaimedArray = user[0].weekly_claimed.split(',').map(Number);\n\n  // Print the array\n  console.log(weeklyClaimedArray, 'array'); // Output: [0, 0, 0, 0, 0, 0, 0]\n\n  const startTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - (user[0].current_day - 1), 0, 1).getTime();\n  const query = `\n    SELECT *\n    FROM recharge\n    WHERE status = 1\n      AND phone = ?\n      AND time > ?\n`;\n  const [recharge] = await connection.execute(query, [user[0].phone, startTime]);\n  const total = recharge.reduce((acc, val) => acc + val.money, 0);\n  return res.render('Activity/Index.ejs', {\n    total,\n    weeklyDeposit,\n    flagArray: weeklyClaimedArray\n  });\n};\nconst newtutorial = async (req, res) => {\n  return res.render(\"member/newtutorial.ejs\");\n};\nconst activityRecords = async (req, res) => {\n  return res.render('Activity/record.ejs');\n};\nconst forgot = async (req, res) => {\n  let auth = req.cookies.auth;\n  const [user] = await connection.query('SELECT `time_otp` FROM users WHERE token = ? ', [auth]);\n  let time = user[0].time_otp;\n  return res.render(\"member/forgot.ejs\", {\n    time\n  });\n};\nconst redenvelopes = async (req, res) => {\n  return res.render(\"member/redenvelopes.ejs\");\n};\nconst riskAgreement = async (req, res) => {\n  return res.render(\"member/about/riskAgreement.ejs\");\n};\nconst myProfilePage = async (req, res) => {\n  return res.render(\"member/myProfile.ejs\");\n};\nconst getSalaryRecord = async (req, res) => {\n  const auth = req.cookies.auth;\n  const [rows] = await connection.query(`SELECT * FROM users WHERE token = ?`, [auth]);\n  let rowstr = rows[0];\n  if (!rows) {\n    return res.status(200).json({\n      message: 'Failed',\n      status: false\n    });\n  }\n  const [getPhone] = await connection.query(`SELECT * FROM salary WHERE phone = ? ORDER BY time DESC`, [rowstr.phone]);\n  console.log(\"asdasdasd : \" + [rows.phone]);\n  return res.status(200).json({\n    message: 'Success',\n    status: true,\n    data: {},\n    rows: getPhone\n  });\n};\nlet invitationMetrix = [{\n  team: 1,\n  deposit: 300,\n  Bonus: 55\n}, {\n  team: 3,\n  deposit: 300,\n  Bonus: 155\n}, {\n  team: 10,\n  deposit: 500,\n  Bonus: 555\n}, {\n  team: 30,\n  deposit: 500,\n  Bonus: 1555\n}, {\n  team: 70,\n  deposit: 500,\n  Bonus: 3555\n}, {\n  team: 100,\n  deposit: 500,\n  Bonus: 5555\n}, {\n  team: 200,\n  deposit: 500,\n  Bonus: 11555\n}, {\n  team: 500,\n  deposit: 300,\n  Bonus: 25555\n}, {\n  team: 1000,\n  deposit: 500,\n  Bonus: 55555\n}, {\n  team: 2000,\n  deposit: 500,\n  Bonus: 111111\n}, {\n  team: 5000,\n  deposit: 500,\n  Bonus: 277777\n}, {\n  team: 10000,\n  deposit: 500,\n  Bonus: 555555\n}, {\n  team: 20000,\n  deposit: 500,\n  Bonus: 1111111\n}];\nconst invitationRewardPage = async (req, res) => {\n  const auth = req.cookies.auth;\n  const [user] = await connection.execute('SELECT * FROM users WHERE token = ?', [auth]);\n  if (!user[0]) {\n    return res.status(200).json({\n      message: 'Failed',\n      status: false\n    });\n  }\n  const claimedArray = user[0].invitation_claimed.split(',').map(Number);\n  console.log(claimedArray, 'claimedArray');\n  const [memebers] = await connection.execute('SELECT * FROM users WHERE invite = ?', [user[0].code]);\n  let activecount = 0;\n  let totalMember = memebers.length;\n  async function checkDeposit(phone, amount) {\n    let total = 0;\n    const [recharge] = await connection.execute('SELECT money FROM recharge WHERE phone = ?', [phone]);\n    recharge.forEach(val => {\n      total = total + val.money;\n      if (total >= amount) {\n        return true;\n      }\n    });\n    return false;\n  }\n  if (memebers.length <= 2) {\n    memebers.forEach(member => {\n      if (checkDeposit(member.phone, 300)) {\n        activecount++;\n      }\n    });\n  } else {\n    memebers.forEach(member => {\n      if (checkDeposit(member.phone, 500)) {\n        activecount++;\n      }\n    });\n  }\n  return res.render(\"Activity/invitationBonus.ejs\", {\n    activecount,\n    totalMember,\n    invitationMetrix,\n    claimedArray\n  });\n};\nconst invitationRewardClaim = async (req, res) => {\n  const auth = req.cookies.auth;\n  const {\n    index,\n    amount\n  } = req.body;\n  if (amount !== invitationMetrix[index].Bonus) {\n    return res.status(200).json({\n      message: 'Failed',\n      status: false\n    });\n  }\n  const [user] = await connection.execute('SELECT * FROM users WHERE token = ?', [auth]);\n  if (!user[0]) {\n    return res.status(200).json({\n      message: 'Failed',\n      status: false\n    });\n  }\n  const claimedArray = user[0].invitation_claimed.split(',').map(Number);\n  if (claimedArray[index] === 1) {\n    return res.status(200).json({\n      message: 'Failed',\n      status: false\n    });\n  }\n  claimedArray[index] = 1;\n  const claimedStr = claimedArray.join(',');\n  await connection.execute('UPDATE users SET win_wallet = win_wallet + ? ,invitation_claimed = ?', [amount, claimedStr]);\n  return res.status(200).json({\n    message: `Successfully received ${amount}`,\n    status: true\n  });\n};\nconst invitationRewardRules = async (req, res) => {\n  return res.render(\"Activity/invitationBonusRules.ejs\");\n};\nconst invitationRules = async (req, res) => {\n  return res.render(\"promotion/invitationRules.ejs\");\n};\nconst commisionDetailsPage = async (req, res) => {\n  return res.render(\"promotion/commissionDetails.ejs\");\n};\nconst rebateRatio = async (req, res) => {\n  return res.render(\"promotion/rebateRatio.ejs\");\n};\nconst partnerRecord = async (req, res) => {\n  const auth = req.cookies.auth;\n  return res.render(\"promotion/partnerRewardRecord.ejs\");\n};\nconst notificationPage = async (req, res) => {\n  const [data] = await connection.execute('SELECT * FROM notification');\n  return res.render(\"member/notification.ejs\", {\n    data\n  });\n};\nconst gamePage = async (req, res) => {\n  const auth = req.cookies.auth;\n  const [user] = await connection.execute('SELECT phone,money,win_wallet,ekyc FROM users WHERE token = ?', [auth]);\n  const query = `\n  SELECT * \n  FROM aviator WHERE status != 0\n  ORDER BY id DESC \n  LIMIT 30;\n`;\n  const [result] = await connection.execute(query);\n  const [betHistory] = await connection.execute(`SELECT ar.*, a.*, \n            DATE_FORMAT(ar.time, '%Y-%m-%d %H:%i:%s') AS formatted_time\n     FROM aviator_result ar\n     JOIN aviator a ON ar.period = a.id\n     WHERE ar.phone = ?\n     ORDER BY ar.period DESC`,\n  // Reverse order by period\n  [user[0].phone]);\n  res.render('aviator.ejs', {\n    csrfToken: 'your_csrf_token',\n    user: {\n      currency: 'â¹',\n      id: 12345\n    },\n    wallet: user[0]?.win_wallet,\n    settings: {\n      minBetAmount: 10,\n      maxBetAmount: 10000\n    },\n    phone: user[0].phone,\n    currentGameData: JSON.stringify({\n      id: 1,\n      name: 'Game Name'\n    }),\n    result: result,\n    betHistory: betHistory,\n    ekyc\n  });\n};\nmodule.exports = {\n  homePage,\n  checkInPage,\n  promotionPage,\n  walletPage,\n  mianPage,\n  myProfilePage,\n  promotionmyTeamPage,\n  promotionDesPage,\n  tutorialPage,\n  bonusRecordPage,\n  rechargePage,\n  rechargerecordPage,\n  withdrawalPage,\n  withdrawalrecordPage,\n  aboutPage,\n  riskAgreement,\n  newtutorial,\n  redenvelopes,\n  forgot,\n  checkDes,\n  checkRecord,\n  addBank,\n  transfer,\n  recordsalary,\n  getSalaryRecord,\n  attendance,\n  getActivityPage,\n  activityRecords,\n  partnerRewardPage,\n  comissionDetailsPage,\n  invitationRewardPage,\n  invitationRewardClaim,\n  invitationRewardRules,\n  invitationRules,\n  commisionDetailsPage,\n  rebateRatio,\n  partnerRecord,\n  Confidentiality,\n  notificationPage,\n  gamePage,\n  ekyc,\n  ad,\n  tele\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["select","require","connection","homePage","req","res","setting","query","auth","cookies","user","app","telegram","console","log","money","render","Number","win_wallet","username","name_user","ekyc","ad","tele","checkInPage","checkDes","checkRecord","addBank","promotionPage","promotionmyTeamPage","promotionDesPage","tutorialPage","bonusRecordPage","partnerRewardPage","userInfo","execute","length","status","send","totalCount","fetchUserDataByCode","code","depth","userData","count","active","effectiveCount","totalAmount","error","comissionDetailsPage","walletPage","rechargePage","calculatedMoney","MinimumMoney","process","env","MINIMUM_MONEY","rechargerecordPage","withdrawalPage","extra","first","first_recharge","withdrawalrecordPage","transfer","mianPage","settings","cskh","level","aboutPage","attendance","recordsalary","Confidentiality","weeklyDeposit","deposit","bonus","getActivityPage","currentDate","Date","weeklyClaimedArray","weekly_claimed","split","map","startTime","getFullYear","getMonth","getDate","current_day","getTime","recharge","phone","total","reduce","acc","val","flagArray","newtutorial","activityRecords","forgot","time","time_otp","redenvelopes","riskAgreement","myProfilePage","getSalaryRecord","rows","rowstr","json","message","getPhone","data","invitationMetrix","team","Bonus","invitationRewardPage","claimedArray","invitation_claimed","memebers","activecount","totalMember","checkDeposit","amount","forEach","member","invitationRewardClaim","index","body","claimedStr","join","invitationRewardRules","invitationRules","commisionDetailsPage","rebateRatio","partnerRecord","notificationPage","gamePage","result","betHistory","csrfToken","currency","id","wallet","minBetAmount","maxBetAmount","currentGameData","JSON","stringify","name","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["homeController.js"],"sourcesContent":["const { select } = require(\"async\");\nconst connection = require(\"../config/connectDB\");\n// import jwt from 'jsonwebtoken'\n// import md5 from \"md5\";\n// import e from \"express\";\n\nconst homePage = async (req, res) => {\n    let [setting] = await connection.query('SELECT `app`,`telegram` FROM admin');\n    let auth = req?.cookies?.auth;\n    const [user] = await connection.query('SELECT `win_wallet`,`money` FROM users WHERE `token` = ? ', [auth]);\n    let app = setting[0].app;\n    let telegram = setting[0].telegram;\n    console.log(auth,user[0],\"guhijoptfyguhij\")\n    if(!auth){\n        let money = false;\n\n        return res.render(\"home/index.ejs\", { app,telegram,money});\n\n    }\n    else{\n        \n        const [user] = await connection.query('SELECT `win_wallet`,`money`, `name_user`,`ekyc` FROM users WHERE `token` = ? ', [auth]); \n        console.log(user[0],\"username hahahahhahahahahhah\")     \n         let money = Number(user[0]?.win_wallet || 0);\n\n        let username = user[0]?.name_user\n        let ekyc = user[0]?.ekyc\n      \n        return res.render(\"home/index.ejs\", { app,telegram,money,username,ekyc});\n\n    }\n}\n\nconst ad = async(req,res)=>{\n    return res.render(\"home/add.ejs\")\n}\nconst tele = async (req,res)=>{\n    return res.render (\"home/tele.ejs\")\n}\n\nconst checkInPage = async (req, res) => {\n    return res.render(\"checkIn/checkIn.ejs\");\n}\n\nconst checkDes = async (req, res) => {\n    return res.render(\"checkIn/checkDes.ejs\");\n}\n\nconst checkRecord = async (req, res) => {\n    return res.render(\"checkIn/checkRecord.ejs\");\n}\n\nconst addBank = async (req, res) => {\n    return res.render(\"wallet/addbank.ejs\");\n}\n\n// promotion\nconst promotionPage = async (req, res) => {\n    return res.render(\"promotion/promotion.ejs\");\n}\n\nconst promotionmyTeamPage = async (req, res) => {\n    return res.render(\"promotion/myTeam.ejs\");\n}\n\nconst promotionDesPage = async (req, res) => {\n    return res.render(\"promotion/promotionDes.ejs\");\n}\n\nconst tutorialPage = async (req, res) => {\n    return res.render(\"member/beginnersGuide.ejs\");\n}\n\nconst bonusRecordPage = async (req, res) => {\n    return res.render(\"promotion/bonusrecord.ejs\");\n}\n\nconst partnerRewardPage = async (req, res) => {\n    try {\n        const auth = req.cookies.auth;\n\n        const [userInfo] = await connection.execute('SELECT code FROM users WHERE token = ?', [auth]);\n        if (userInfo.length === 0) {\n            return res.status(404).send('User not found');\n        }\n\n        let totalCount = 0;\n\n        async function fetchUserDataByCode(code, depth = 1) {\n            if (depth > 6) {\n                return;\n            }\n\n          \n            const [userData] = await connection.query(\n                \"SELECT `id_user`, `name_user`, `phone`, `code`, `invite`, `rank`, `total_money` FROM users WHERE `invite` = ?\",\n                [code]\n            );\n\n            if (userData.length > 0) {\n                for (const user of userData) {\n                    totalCount++;\n                    await fetchUserDataByCode(user.code, depth + 1);\n                }\n            }\n        }\n\n        \n        await fetchUserDataByCode(userInfo[0].code);\n\n        const [count] = await connection.execute(`\n            SELECT \n              COUNT(DISTINCT member_phone) AS effectiveCount, \n              SUM(amount) AS totalAmount \n            FROM partner_reward\n          `);\n        const active = count[0].effectiveCount;\n        const totalAmount = count[0].totalAmount;\n\n        return res.render('promotion/partnerReward.ejs', { totalCount, active,totalAmount});\n\n    } catch (error) {\n        console.error('Error in partnerRewardPage:', error);\n        return res.status(500).send('Internal Server Error');\n    }\n};\n\n\nconst comissionDetailsPage = async(req,res)=>{\n    return res.render(\"promotion/commissionDetails.ejs\");\n}\n\n// wallet\nconst walletPage = async (req, res) => {\n    return res.render(\"wallet/index.ejs\");\n}\n\n// const rechargePage = async (req, res) => {\n//     return res.render(\"wallet/recharge.ejs\", {\n//         MinimumMoney: process.env.MINIMUM_MONEY\n//     });\n// }\n\nconst rechargePage = async (req, res) => {\n    try {\n        // --- Logic adapted from homePage ---\n        let auth = req?.cookies?.auth; // Get auth token from cookies\n\n        // Define variables with defaults for logged-out state\n        let username = null;\n        let money = null; // Using null as default, template handles display\n        let ekyc = null;  // Using null as default\n\n        // Check if the user is potentially logged in (auth cookie exists)\n        if (auth) {\n            // Query the database for user details using the token\n            const [userData] = await connection.query('SELECT `win_wallet`, `money`, `name_user`, `ekyc` FROM users WHERE `token` = ? LIMIT 1', [auth]);\n    \n            // Check if user was actually found with that token\n            if (userData && userData.length > 0) {\n                const user = userData[0];\n                // Calculate total money (handle potential nulls/NaN with || 0)\n                let calculatedMoney = (Number(user.win_wallet) || 0) + (Number(user.money) || 0);\n                money = calculatedMoney; // Assign the calculated value\n                username = user.name_user;\n                ekyc = user.ekyc;\n\n                // Optional: Log fetched data for verification\n                // console.log(\"Recharge Page - User Found:\", { username, money, ekyc });\n            } else {\n                // Optional: Log if token exists but user not found (indicates invalid token?)\n                // console.log(\"Recharge Page - Auth cookie found, but no user matched token:\", auth);\n                // Keep defaults (user is effectively logged out)\n            }\n        } else {\n            // Optional: Log if no auth cookie found\n            // console.log(\"Recharge Page - No auth cookie found.\");\n        }\n        // --- End of adapted logic ---\n\n        // Render the recharge template, passing MinimumMoney AND the user data (or defaults)\n        return res.render(\"wallet/recharge.ejs\", {\n            MinimumMoney: process.env.MINIMUM_MONEY, // Keep this\n            username: username,                     // Pass username (or null)\n            money: money,                           // Pass calculated money (or null)\n            ekyc: ekyc                              // Pass ekyc status (or null)\n        });\n\n    } catch (error) {\n        console.error(\"Error in rechargePage controller:\", error);\n        // Consider rendering an error page or sending a generic error\n        return res.status(500).send(\"Error loading recharge page.\");\n    }\n};\n\n\nconst rechargerecordPage = async (req, res) => {\n    return res.render(\"wallet/rechargerecord.ejs\");\n}\n\n// Assuming 'connection' is your database connection object, required nearby\n\nconst withdrawalPage = async (req, res) => {\n    try {\n        // --- Get auth token from cookies ---\n        let auth = req?.cookies?.auth;\n\n        // --- Define variables with defaults for logged-out state ---\n        let username = null;\n        let money = null; // Will hold calculated total balance\n        let ekyc = null;\n        let extra = null; // Keep the specific data for this page, default to null\n         let first = null;\n        // --- Check if the user is potentially logged in (auth cookie exists) ---\n        if (auth) {\n            // --- Query the database for ALL details needed for sidebar AND withdrawal page ---\n            const [userData] = await connection.query(\n                'SELECT `win_wallet`, `money`, `name_user`,`first_recharge`, `ekyc`, `extra` FROM users WHERE `token` = ? LIMIT 1',\n                [auth]\n            );\n\n            // Check if user was actually found with that token\n            if (userData && userData.length > 0) {\n                const user = userData[0];\n\n                // Calculate total money (handle potential nulls/NaN with || 0)\n                let calculatedMoney = Number(user.win_wallet) || 0 ;\n                money = calculatedMoney; // Assign the calculated value\n\n                // Assign other values\n                username = user.name_user;\n                ekyc = user.ekyc;\n                extra = user.extra; \n                first =user.first_recharge\n                // Assign the value specific to withdrawal\n\n                // Optional: Log fetched data for verification\n                // console.log(\"Withdrawal Page - User Found:\", { username, money, ekyc, extra });\n\n            } else {\n                // Optional: Log if token exists but user not found\n                // console.log(\"Withdrawal Page - Auth cookie found, but no user matched token:\", auth);\n                // Keep defaults (user is effectively logged out)\n            }\n        } else {\n            // Optional: Log if no auth cookie found\n            // console.log(\"Withdrawal Page - No auth cookie found.\");\n        }\n        // --- End of user data logic ---\n\n        // --- Render the withdrawal template, passing ALL required data ---\n        return res.render(\"wallet/withdrawal.ejs\", {\n            username: username, // Pass username (or null)\n            money: money,       // Pass calculated money (or null)\n            ekyc: ekyc,         // Pass ekyc status (or null)\n            extra: extra,\n            first: first,     // Pass the withdrawal-specific data (or null)\n            // Add any other variables specifically needed by withdrawal.ejs\n        });\n\n    } catch (error) {\n        console.error(\"Error in withdrawalPage controller:\", error);\n        // Consider rendering an error page or sending a generic error\n        return res.status(500).send(\"Error loading withdrawal page.\");\n    }\n};\n\n// Ensure this function is exported correctly from your controller file\n// module.exports = { withdrawalPage, ... };\n\nconst withdrawalrecordPage = async (req, res) => {\n    return res.render(\"wallet/withdrawalrecord.ejs\");\n}\nconst transfer = async (req, res) => {\n    return res.render(\"wallet/transfer.ejs\");\n}\n\n// member page\nconst mianPage = async (req, res) => {\n    let auth = req.cookies.auth;\n    const [user] = await connection.query('SELECT `level` FROM users WHERE `token` = ? ', [auth]);\n    const [settings] = await connection.query('SELECT `cskh` FROM admin');\n    let cskh = settings[0].cskh;\n    let level = user[0].level;\n    return res.render(\"member/index.ejs\", { level, cskh });\n}\nconst aboutPage = async (req, res) => {\n    return res.render(\"member/about/index.ejs\");\n}\n\nconst ekyc = async (req,res)=>{\n    return res.render(\"member/about/ekc.ejs\")\n}\n\nconst attendance = async (req,res) => {\n    return res.render(\"checkIn/reward.ejs\")\n}\n\nconst recordsalary = async (req, res) => {\n    return res.render(\"member/about/recordsalary.ejs\");\n}\n\nconst Confidentiality = async (req, res) => {\n    return res.render(\"member/about/Confidentiality.ejs\");\n}\n\nconst weeklyDeposit = [\n    {\n        deposit:10000,\n        bonus:40,\n    },\n    {\n        deposit:50000,\n        bonus:250,\n    },\n    {\n        deposit:200000,\n        bonus:600,\n    },\n    {\n        deposit:800000,\n        bonus:2000,\n    },\n    {\n        deposit:2000000,\n        bonus:6000,\n    },\n    {\n        deposit:5000000,\n        bonus:13000,\n    },\n    {\n        deposit:10000000,\n        bonus:25000,\n    },\n]\n  \n\n\nconst getActivityPage = async (req,res) => {\n    const auth = req.cookies.auth;\n    const currentDate = new Date();\n\n    let [user] = await connection.query('SELECT * FROM users WHERE token = ?',[auth]);\n\n    const weeklyClaimedArray = user[0].weekly_claimed.split(',').map(Number);\n    \n\n    // Print the array\n    console.log(weeklyClaimedArray,'array'); // Output: [0, 0, 0, 0, 0, 0, 0]\n\n    const startTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - (user[0].current_day - 1), 0, 1).getTime();\n\n    const query = `\n    SELECT *\n    FROM recharge\n    WHERE status = 1\n      AND phone = ?\n      AND time > ?\n`;\n\n   const [recharge] = await connection.execute(query, [user[0].phone, startTime])\n\nconst total = recharge.reduce((acc,val)=>acc+val.money,0) ;\n\n\n    return res.render('Activity/Index.ejs',{total,weeklyDeposit,flagArray:weeklyClaimedArray});\n}\n\nconst newtutorial = async (req, res) => {\n    return res.render(\"member/newtutorial.ejs\");\n}\n\nconst activityRecords = async (req,res)=>{\n    return res.render('Activity/record.ejs')\n}\n\nconst forgot = async (req, res) => {\n    let auth = req.cookies.auth;\n    const [user] = await connection.query('SELECT `time_otp` FROM users WHERE token = ? ', [auth]);\n    let time = user[0].time_otp;\n    return res.render(\"member/forgot.ejs\", { time });\n}\n\nconst redenvelopes = async (req, res) => {\n    return res.render(\"member/redenvelopes.ejs\");\n}\n\nconst riskAgreement = async (req, res) => {\n    return res.render(\"member/about/riskAgreement.ejs\");\n}\n\nconst myProfilePage = async (req, res) => {\n    return res.render(\"member/myProfile.ejs\");\n}\n\nconst getSalaryRecord = async (req, res) => {\n    const auth = req.cookies.auth;\n\n    const [rows] = await connection.query(`SELECT * FROM users WHERE token = ?`, [auth]);\n    let rowstr = rows[0];\n    if (!rows) {\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n\n        });\n    }\n    const [getPhone] = await connection.query(\n        `SELECT * FROM salary WHERE phone = ? ORDER BY time DESC`,\n        [rowstr.phone]\n    );\n\n\n    console.log(\"asdasdasd : \" + [rows.phone])\n    return res.status(200).json({\n        message: 'Success',\n        status: true,\n        data: {\n\n        },\n        rows: getPhone,\n    })\n}\n\nlet invitationMetrix = [\n    {\n        team:1,\n        deposit:300,\n        Bonus:55\n    },\n    {\n        team:3,\n        deposit:300,\n        Bonus:155\n    },\n    {\n        team:10,\n        deposit:500,\n        Bonus:555\n    },\n    {\n        team:30,\n        deposit:500,\n        Bonus:1555\n    },\n    {\n        team:70,\n        deposit:500,\n        Bonus:3555\n    },\n    {\n        team:100,\n        deposit:500,\n        Bonus:5555\n    },\n    {\n        team:200,\n        deposit:500,\n        Bonus:11555\n    },\n    {\n        team:500,\n        deposit:300,\n        Bonus:25555\n    },\n    {\n        team:1000,\n        deposit:500,\n        Bonus:55555\n    },\n    {\n        team:2000,\n        deposit:500,\n        Bonus:111111\n    },\n    {\n        team:5000,\n        deposit:500,\n        Bonus:277777\n    },\n    {\n        team:10000,\n        deposit:500,\n        Bonus:555555\n    },\n    {\n        team:20000,\n        deposit:500,\n        Bonus:1111111\n    }\n]\n\nconst invitationRewardPage = async (req,res)=>{\nconst auth = req.cookies.auth;\nconst [user] = await connection.execute('SELECT * FROM users WHERE token = ?',[auth]);\n\nif(!user[0]){\n    return res.status(200).json({\n        message: 'Failed',\n        status: false,\n\n    });\n}\n\nconst claimedArray = user[0].invitation_claimed.split(',').map(Number);\nconsole.log(claimedArray,'claimedArray')\nconst [memebers] = await connection.execute('SELECT * FROM users WHERE invite = ?',[user[0].code]);\nlet activecount = 0;\nlet totalMember = memebers.length;\n\nasync function checkDeposit(phone,amount){\n    let total = 0;\n   const [recharge] = await connection.execute('SELECT money FROM recharge WHERE phone = ?',[phone]);\n\n   recharge.forEach(val=>{\n    total  = total + val.money;\n    if(total>=amount){\n        return true;\n    }\n   })\n\n   return false;\n \n}\n\nif(memebers.length<=2){\n    memebers.forEach(member=>{\n     if(checkDeposit(member.phone,300)){\n        activecount++;\n     }\n    })\n}\nelse{\n    memebers.forEach(member=>{\n        if(checkDeposit(member.phone,500)){\n           activecount++;\n        }\n       })\n}\nreturn res.render(\"Activity/invitationBonus.ejs\",{activecount,totalMember,invitationMetrix,claimedArray});\n}\n\nconst invitationRewardClaim = async (req,res)=>{\n    const auth = req.cookies.auth;\n    const {index,amount} = req.body;\n\n    if(amount!==invitationMetrix[index].Bonus){\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n    \n        });\n    }\n    const [user] = await connection.execute('SELECT * FROM users WHERE token = ?',[auth]);\n    if(!user[0]){\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n    \n        });\n\n    }\n\n    const claimedArray = user[0].invitation_claimed.split(',').map(Number);\n\n    if(claimedArray[index] === 1){\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n    \n        }); \n    }\n\n    claimedArray[index] = 1 ;\n\n    const claimedStr = claimedArray.join(',');\n\n    await connection.execute('UPDATE users SET win_wallet = win_wallet + ? ,invitation_claimed = ?',[amount,claimedStr]);\n\n    \n    return res.status(200).json({\n        message: `Successfully received ${amount}`,\n        status: true,\n    });\n}\n\nconst invitationRewardRules = async (req,res)=>{\n    return res.render(\"Activity/invitationBonusRules.ejs\");\n}\n\nconst invitationRules = async (req,res)=>{\n    return res.render(\"promotion/invitationRules.ejs\");\n}\n\nconst commisionDetailsPage = async (req,res)=>{\n    return res.render(\"promotion/commissionDetails.ejs\");\n}\n\nconst rebateRatio = async (req,res)=>{\n    return res.render(\"promotion/rebateRatio.ejs\");\n}\n\nconst partnerRecord = async (req,res)=>{\n    const auth = req.cookies.auth;\n    return res.render(\"promotion/partnerRewardRecord.ejs\");\n }\n\n const notificationPage = async (req,res)=>{\n    const [data] = await connection.execute('SELECT * FROM notification');\n    return res.render(\"member/notification.ejs\",{data});\n }\n\n\n const gamePage = async (req,res) =>{\n    const auth = req.cookies.auth;\n    const [user] = await connection.execute('SELECT phone,money,win_wallet,ekyc FROM users WHERE token = ?',[auth]);\n    const query = `\n  SELECT * \n  FROM aviator WHERE status != 0\n  ORDER BY id DESC \n  LIMIT 30;\n`;\n\nconst [result] = await connection.execute(query);\nconst [betHistory] = await connection.execute(\n    `SELECT ar.*, a.*, \n            DATE_FORMAT(ar.time, '%Y-%m-%d %H:%i:%s') AS formatted_time\n     FROM aviator_result ar\n     JOIN aviator a ON ar.period = a.id\n     WHERE ar.phone = ?\n     ORDER BY ar.period DESC`,  // Reverse order by period\n    [user[0].phone]\n  );\n  \n  \n  \n    res.render('aviator.ejs', {\n        csrfToken: 'your_csrf_token',\n        user: {\n            currency: 'â¹',\n            id: 12345,\n        },\n        wallet: user[0]?.win_wallet,\n        settings: {\n            minBetAmount: 10,\n            maxBetAmount: 10000,\n        },\n        phone:user[0].phone,\n        currentGameData: JSON.stringify({ id: 1, name: 'Game Name' }),\n        result:result,\n        betHistory:betHistory,\n        ekyc\n    });\n}\n\n\nmodule.exports = {\n    homePage,\n    checkInPage,\n    promotionPage,\n    walletPage,\n    mianPage,\n    myProfilePage,\n    promotionmyTeamPage,\n    promotionDesPage,\n    tutorialPage,\n    bonusRecordPage,\n    rechargePage,\n    rechargerecordPage,\n    withdrawalPage,\n    withdrawalrecordPage,\n    aboutPage,\n    riskAgreement,\n    newtutorial,\n    redenvelopes,\n    forgot,\n    checkDes,\n    checkRecord,\n    addBank,\n    transfer,\n    recordsalary,\n    getSalaryRecord,\n    attendance,\n    getActivityPage,\n    activityRecords,\n    partnerRewardPage,\n    comissionDetailsPage,\n    invitationRewardPage,\n    invitationRewardClaim,\n    invitationRewardRules,\n    invitationRules,\n    commisionDetailsPage,\n    rebateRatio,\n    partnerRecord,\n    Confidentiality,\n    notificationPage,\n    gamePage,\n    ekyc,\n    ad,\n    tele\n}"],"mappings":"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","ignoreList":[]}},"mtime":1745750145879},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/winGoController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const connection = require(\"../config/connectDB\");\n// import jwt from \"jsonwebtoken\";\n// import md5 from \"md5\";\n// import e from \"express\";\nrequire(\"dotenv\").config();\nconst winGoPage = async (req, res) => {\n  const periodId = '123';\n  return res.render(\"bet/wingo/win.ejs\", {\n    periodId\n  });\n};\nconst winGoPage3 = async (req, res) => {\n  return res.render(\"bet/wingo/win3.ejs\");\n};\nconst winGoPage5 = async (req, res) => {\n  return res.render(\"bet/wingo/win5.ejs\");\n};\nconst winGoPage10 = async (req, res) => {\n  return res.render(\"bet/wingo/win10.ejs\");\n};\nconst isNumber = params => {\n  let pattern = /^[0-9]*\\d$/;\n  return pattern.test(params);\n};\nfunction formateT(params) {\n  let result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin(params = \"\") {\n  let date = \"\";\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  let years = formateT(date.getFullYear());\n  let months = formateT(date.getMonth() + 1);\n  let days = formateT(date.getDate());\n  let hours = formateT(date.getHours());\n  let minutes = formateT(date.getMinutes());\n  let seconds = formateT(date.getSeconds());\n  return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds;\n}\nconst rosesPlus = async (auth, money) => {\n  const [level] = await connection.query(\"SELECT * FROM level \");\n  let level0 = level[0];\n  const [user] = await connection.query(\"SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 \", [auth]);\n  let userInfo = user[0];\n  const [f1] = await connection.query(\"SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 \", [userInfo.invite]);\n  if (money >= 10000) {\n    if (f1.length > 0) {\n      let infoF1 = f1[0];\n      let rosesF1 = money / 100 * level0.f1;\n      await connection.query(\"UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? \", [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n      const [f2] = await connection.query(\"SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 \", [infoF1.invite]);\n      if (f2.length > 0) {\n        let infoF2 = f2[0];\n        let rosesF2 = money / 100 * level0.f2;\n        await connection.query(\"UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? \", [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n        const [f3] = await connection.query(\"SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 \", [infoF2.invite]);\n        if (f3.length > 0) {\n          let infoF3 = f3[0];\n          let rosesF3 = money / 100 * level0.f3;\n          await connection.query(\"UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? \", [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n          const [f4] = await connection.query(\"SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 \", [infoF3.invite]);\n          if (f4.length > 0) {\n            let infoF4 = f4[0];\n            let rosesF4 = money / 100 * level0.f4;\n            await connection.query(\"UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? \", [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n          }\n        }\n      }\n    }\n  }\n};\nlet vipRate = [{\n  level: 0,\n  exp: 0,\n  bonus: 0,\n  rebate: 0\n}, {\n  level: 1,\n  exp: 3000,\n  bonus: 30,\n  rebate: 0\n}, {\n  level: 2,\n  exp: 30000,\n  bonus: 150,\n  rebate: 0.3\n}, {\n  level: 3,\n  exp: 300000,\n  bonus: 690,\n  rebate: 0.35\n}, {\n  level: 4,\n  exp: 2000000,\n  bonus: 1290,\n  rebate: 0.4\n}, {\n  level: 5,\n  exp: 20000000,\n  bonus: 5900,\n  rebate: 0.45\n}, {\n  level: 6,\n  exp: 60000000,\n  bonus: 16900,\n  rebate: 0.5\n}, {\n  level: 7,\n  exp: 100000000,\n  bonus: 69000,\n  rebate: 0.55\n}, {\n  level: 8,\n  exp: 1000000000,\n  bonus: 169000,\n  rebate: 0.6\n}, {\n  level: 9,\n  exp: 5000000000,\n  bonus: 690000,\n  rebate: 0.7\n}, {\n  level: 10,\n  exp: 10000000000,\n  bonus: 1690000,\n  rebate: 0.8\n}];\nconst betWinGo = async (req, res) => {\n  let {\n    typeid,\n    join,\n    x,\n    money\n  } = req.body;\n  let auth = req.cookies.auth;\n  if (typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n  let gameJoin = \"\";\n  if (typeid == 1) gameJoin = \"wingo\";\n  if (typeid == 3) gameJoin = \"wingo3\";\n  if (typeid == 5) gameJoin = \"wingo5\";\n  if (typeid == 10) gameJoin = \"wingo10\";\n  const [winGoNow] = await connection.query(`SELECT period FROM wingo WHERE status = 0 AND game = '${gameJoin}' ORDER BY id DESC LIMIT 1`);\n  const [user] = await connection.query(\"SELECT `phone`, `code`, `invite`, `level`, `money`, `win_wallet` FROM users WHERE token = ? AND veri = 1  LIMIT 1 \", [auth]);\n  if (!winGoNow[0] || !user[0] || !isNumber(x) || !isNumber(money)) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n  let userInfo = user[0];\n  let period = winGoNow[0].period;\n  let fee = x * money * 0.02;\n  let totalBetAmount = x * money;\n  let timeNow = Date.now();\n  let remainingMoney = userInfo.money - totalBetAmount;\n  let remainingWallet = userInfo.win_wallet;\n  if (remainingMoney < 0) {\n    remainingWallet += remainingMoney; // Deduct the negative amount from win_wallet\n    remainingMoney = 0;\n  }\n  let date = new Date();\n  let years = formateT(date.getFullYear());\n  let months = formateT(date.getMonth() + 1);\n  let days = formateT(date.getDate());\n  let id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n  let formatTime = timerJoin();\n  let color = \"\";\n  if (join == \"l\") {\n    color = \"big\";\n  } else if (join == \"n\") {\n    color = \"small\";\n  } else if (join == \"t\") {\n    color = \"violet\";\n  } else if (join == \"d\") {\n    color = \"red\";\n  } else if (join == \"x\") {\n    color = \"green\";\n  } else if (join == \"0\") {\n    color = \"red-violet\";\n  } else if (join == \"5\") {\n    color = \"green-violet\";\n  } else if (join % 2 == 0) {\n    color = \"red\";\n  } else if (join % 2 != 0) {\n    color = \"green\";\n  }\n  let checkJoin = \"\";\n  if (!isNumber(join) && join == \"l\" || join == \"n\") {\n    checkJoin = `\n        <div data-v-a9660e98=\"\" class=\"van-image\" style=\"width: 30px; height: 30px;\">\n            <img src=\"/images/${join == \"n\" ? \"small\" : \"big\"}.png\" class=\"van-image__img\">\n        </div>\n        `;\n  } else {\n    checkJoin = `\n        <span data-v-a9660e98=\"\">${isNumber(join) ? join : \"\"}</span>\n        `;\n  }\n  let result = `\n    <div data-v-a9660e98=\"\" issuenumber=\"${period}\" addtime=\"${formatTime}\" rowid=\"1\" class=\"hb\">\n        <div data-v-a9660e98=\"\" class=\"item c-row\">\n            <div data-v-a9660e98=\"\" class=\"result\">\n                <div data-v-a9660e98=\"\" class=\"select select-${color}\">\n                    ${checkJoin}\n                </div>\n            </div>\n            <div data-v-a9660e98=\"\" class=\"c-row c-row-between info\">\n                <div data-v-a9660e98=\"\">\n                    <div data-v-a9660e98=\"\" class=\"issueName\">\n                        ${period}\n                    </div>\n                    <div data-v-a9660e98=\"\" class=\"tiem\">${formatTime}</div>\n                </div>\n            </div>\n        </div>\n        <!---->\n    </div>\n    `;\n  function timerJoin(params = \"\") {\n    let date = \"\";\n    if (params) {\n      date = new Date(Number(params));\n    } else {\n      date = new Date();\n    }\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    return years + \"-\" + months + \"-\" + days;\n  }\n  let checkTime = timerJoin(date.getTime());\n  if (remainingMoney > 0 || remainingWallet >= 0) {\n    const sql = `INSERT INTO minutes_1 SET \n        id_product = ?,\n        phone = ?,\n        code = ?,\n        invite = ?,\n        stage = ?,\n        level = ?,\n        money = ?,\n        amount = ?,\n        fee = ?,\n        \\`get\\`  = ?,\n        game = ?,\n        bet = ?,\n        status = ?,\n        today = ?,\n        time = ?`;\n    await connection.execute(sql, [id_product, userInfo.phone, userInfo.code, userInfo.invite, period, userInfo.level, totalBetAmount - fee, x, fee, 0, gameJoin, join, 0, checkTime, timeNow]);\n    await connection.execute(\"UPDATE `users` SET `money` = ?, `win_wallet` = ?,vip_exp = vip_exp + ? WHERE `token` = ?\", [remainingMoney, remainingWallet, totalBetAmount, auth]);\n    const [updatedUser] = await connection.query(\"SELECT `money`, `win_wallet`,vip_exp,vip_level,check_vip ,phone FROM users WHERE token = ? AND veri = 1  LIMIT 1 \", [auth]);\n    let exp = updatedUser[0].vip_exp;\n    let currentLvl = updatedUser[0].vip_level;\n    const closestExpObject = vipRate.filter(item => item.exp <= exp).sort((a, b) => b.exp - a.exp)[0];\n    const [parent] = await connection.execute('SELECT phone , vip_level FROM users WHERE code = ?', [user[0].invite]);\n    const ratio = vipRate.filter(data => data.level === parent[0].vip_level);\n    await connection.execute('UPDATE users SET win_wallet = win_wallet + ? WHERE phone = ?', [Math.round(totalBetAmount * ratio[0].rebate / 100), parent[0].phone]);\n    if (closestExpObject.level > currentLvl) {\n      let arr = updatedUser[0].check_vip.split(',').map(Number);\n      if (arr[closestExpObject.level - 1] === 0) {\n        arr[closestExpObject.level - 1] = 1;\n        const str = arr.join(',');\n        await connection.execute(`UPDATE users set vip_level = ? , win_wallet = win_wallet + ?,check_vip = ? where phone = ?`, [closestExpObject.level, closestExpObject.bonus, str, updatedUser[0].phone]);\n        await connection.execute(`INSERT INTO vip_record set type = \"Level Up Reward\",reward = ?,exp = ?,level = ?,phone = ?`, [closestExpObject.bonus, closestExpObject.exp, closestExpObject.level, updatedUser[0].phone]);\n      } else {\n        await connection.execute(`UPDATE users SET vip_level = ? where phone = ?`, [closestExpObject.level, updatedUser[0].phone]);\n      }\n    }\n    await rosesPlus(auth, totalBetAmount);\n    const [level] = await connection.query(\"SELECT * FROM level \");\n    let level0 = level[0];\n    const sql2 = `INSERT INTO roses SET \n        phone = ?,\n        code = ?,\n        invite = ?,\n        f1 = ?,\n        f2 = ?,\n        f3 = ?,\n        f4 = ?,\n        time = ?`;\n    let f1 = totalBetAmount / 100 * level0.f1;\n    let f2 = totalBetAmount / 100 * level0.f2;\n    let f3 = totalBetAmount / 100 * level0.f3;\n    let f4 = totalBetAmount / 100 * level0.f4;\n    await connection.execute(sql2, [userInfo.phone, userInfo.code, userInfo.invite, f1, f2, f3, f4, timeNow]);\n    return res.status(200).json({\n      message: \"Successful bet\",\n      status: true,\n      data: result,\n      change: updatedUser[0].level,\n      money: updatedUser[0].money,\n      win_wallet: updatedUser[0].win_wallet\n    });\n  } else {\n    return res.status(200).json({\n      message: \"The amount is not enough\",\n      status: false\n    });\n  }\n};\nconst listOrderOld = async (req, res) => {\n  let {\n    typeid,\n    pageno,\n    pageto\n  } = req.body;\n  if (typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n  if (pageno < 0 || pageto < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  let auth = req.cookies.auth;\n  const [user] = await connection.query(\"SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 \", [auth]);\n  let game = \"\";\n  if (typeid == 1) game = \"wingo\";\n  if (typeid == 3) game = \"wingo3\";\n  if (typeid == 5) game = \"wingo5\";\n  if (typeid == 10) game = \"wingo10\";\n  const [wingo] = await connection.query(`SELECT * FROM wingo WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT ${pageno}, ${pageto} `);\n  const [wingoAll] = await connection.query(`SELECT * FROM wingo WHERE status != 0 AND game = '${game}' `);\n  const [period] = await connection.query(`SELECT period FROM wingo WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n  if (!wingo[0]) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!pageno || !pageto || !user[0] || !wingo[0] || !period[0]) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n  let page = Math.ceil(wingoAll.length / 10);\n  return res.status(200).json({\n    code: 0,\n    msg: \"Get success\",\n    data: {\n      gameslist: wingo\n    },\n    period: period[0].period,\n    page: page,\n    status: true\n  });\n};\nconst GetMyEmerdList = async (req, res) => {\n  let {\n    typeid,\n    pageno,\n    pageto\n  } = req.body;\n  if (!pageno || !pageto) {\n    pageno = 0;\n    pageto = 10;\n  }\n  if (typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n  if (pageno < 0 || pageto < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  let auth = req.cookies.auth;\n  let game = \"\";\n  if (typeid == 1) game = \"wingo\";\n  if (typeid == 3) game = \"wingo3\";\n  if (typeid == 5) game = \"wingo5\";\n  if (typeid == 10) game = \"wingo10\";\n  const [user] = await connection.query(\"SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 \", [auth]);\n  const [minutes_1] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND game = '${game}' ORDER BY id DESC LIMIT ${Number(pageno) + \",\" + Number(pageto)}`, [user[0].phone]);\n  const [minutes_1All] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND game = '${game}' ORDER BY id DESC `, [user[0].phone]);\n  if (!minutes_1[0]) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!pageno || !pageto || !user[0] || !minutes_1[0]) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n  let page = Math.ceil(minutes_1All.length / 10);\n  let datas = minutes_1.map(data => {\n    let {\n      id,\n      phone,\n      code,\n      invite,\n      level,\n      game,\n      ...others\n    } = data;\n    return others;\n  });\n  return res.status(200).json({\n    code: 0,\n    msg: \"Get success\",\n    data: {\n      gameslist: datas\n    },\n    page: page,\n    status: true\n  });\n};\nconst addWinGo = async game => {\n  try {\n    let join = \"\";\n    if (game == 1) join = \"wingo\";\n    if (game == 3) join = \"wingo3\";\n    if (game == 5) join = \"wingo5\";\n    if (game == 10) join = \"wingo10\";\n    const [winGoNow] = await connection.query(`SELECT period FROM wingo WHERE status = 0 AND game = \"${join}\" ORDER BY id DESC LIMIT 1 `);\n    const [currentBets] = await connection.execute(`SELECT * FROM minutes_1 WHERE game = ? AND status = ? AND level = ? ORDER BY id ASC`, [join, 0, 0]);\n    function sumMoneyByBetType(betType) {\n      let amt = currentBets.filter(item => item.bet === betType).reduce((sum, item) => sum + item.money, 0);\n      return amt;\n    }\n    let receivedMoney = currentBets.reduce((sum, item) => sum + item.money, 0);\n    let totalReturn = new Array(10).fill(0);\n    const [setting] = await connection.query(\"SELECT * FROM `admin` \");\n    let period = winGoNow[0].period; // cáº§u hiá»n táº¡i\n    let amount = Math.floor(Math.random() * 10); // xanh Äá» tÃ­m\n    let timeNow = Date.now();\n    let nextResult = \"\";\n    let newArr = \"\";\n    if (game == 1) nextResult = setting[0].wingo1;\n    if (game == 3) nextResult = setting[0].wingo3;\n    if (game == 5) nextResult = setting[0].wingo5;\n    if (game == 10) nextResult = setting[0].wingo10;\n    if (nextResult == \"-1\" && !currentBets[0]) {\n      await connection.execute(`UPDATE wingo SET amount = ?, status = ? WHERE period = ? AND game = ?`, [amount, 1, period, join]);\n\n      // newArr = \"-1\";\n    } else if (nextResult == '-1' && currentBets) {\n      let result;\n      if (currentBets.length == 1) {\n        const randomNumber = Math.floor(Math.random() * 1000) + 1;\n        await connection.execute('UPDATE admin SET total_pool = total_pool + ?', [currentBets[0].money / 2]);\n        const [count1] = await connection.execute('SELECT COUNT(*) AS count FROM minutes_1 WHERE phone = ?', [currentBets[0].phone]);\n        const [count2] = await connection.execute('SELECT COUNT(*) AS count FROM result_5d WHERE phone = ?', [currentBets[0].phone]);\n        const [count3] = await connection.execute('SELECT COUNT(*) AS count FROM result_k3 WHERE phone = ?', [currentBets[0].phone]);\n        const total = count1[0].count + count2[0].count + count3[0].count;\n\n        // Fetch the current pool value\n        const [pool] = await connection.execute('SELECT total_pool FROM admin');\n        let poolValue = pool[0].total_pool;\n        let returnValue = 0;\n        let removepool = 0;\n\n        // Logic based on the bet type\n        if (currentBets[0].bet === 'x') {\n          returnValue = currentBets[0].money * 2;\n          if (poolValue > returnValue) {\n            if (total < 10) {\n              result = randomNumber > 200 ? [1, 3, 5, 7, 9][Math.floor(Math.random() * 5)] : [0, 2, 4, 6, 8][Math.floor(Math.random() * 5)];\n              removepool = randomNumber > 300 ? currentBets[0].money * 2 : 0;\n            } else {\n              result = randomNumber < 500 ? [1, 3, 5, 7, 9][Math.floor(Math.random() * 5)] : [0, 2, 4, 6, 8][Math.floor(Math.random() * 5)];\n              removepool = randomNumber < 500 ? currentBets[0].money * 2 : 0;\n            }\n          } else {\n            result = [0, 2, 4, 6, 8][Math.floor(Math.random() * 5)];\n          }\n        } else if (currentBets[0].bet === 'd') {\n          returnValue = currentBets[0].money * 2;\n          if (poolValue > returnValue) {\n            if (total < 10) {\n              result = randomNumber > 200 ? [0, 2, 4, 6, 8][Math.floor(Math.random() * 5)] : [1, 3, 5, 7, 9][Math.floor(Math.random() * 5)];\n              removepool = randomNumber > 300 ? currentBets[0].money * 2 : 0;\n            } else {\n              result = randomNumber < 500 ? [1, 3, 5, 7, 9][Math.floor(Math.random() * 5)] : [0, 2, 4, 6, 8][Math.floor(Math.random() * 5)];\n              removepool = randomNumber >= 500 ? currentBets[0].money * 2 : 0;\n            }\n          } else {\n            result = [1, 3, 5, 7, 9][Math.floor(Math.random() * 5)];\n          }\n        } else if (currentBets[0].bet === 'l') {\n          returnValue = currentBets[0].money * 2;\n          if (poolValue > returnValue) {\n            if (total < 10) {\n              result = randomNumber > 200 ? [5, 6, 7, 8, 9][Math.floor(Math.random() * 5)] : [0, 1, 2, 3, 4][Math.floor(Math.random() * 5)];\n              removepool = randomNumber > 300 ? currentBets[0].money * 2 : 0;\n            } else {\n              result = randomNumber < 500 ? [5, 6, 7, 8, 9][Math.floor(Math.random() * 5)] : [0, 1, 2, 3, 4][Math.floor(Math.random() * 5)];\n              removepool = randomNumber < 500 ? currentBets[0].money * 2 : 0;\n            }\n          } else {\n            result = [0, 1, 2, 3, 4][Math.floor(Math.random() * 5)];\n          }\n        } else if (currentBets[0].bet === 'n') {\n          returnValue = currentBets[0].money * 2;\n          if (poolValue > returnValue) {\n            if (total < 10) {\n              result = randomNumber > 200 ? [0, 1, 2, 3, 4][Math.floor(Math.random() * 5)] : [5, 6, 7, 8, 9][Math.floor(Math.random() * 5)];\n              removepool = randomNumber > 300 ? currentBets[0].money * 2 : 0;\n            } else {\n              result = randomNumber < 500 ? [5, 6, 7, 8, 9][Math.floor(Math.random() * 5)] : [0, 1, 2, 3, 3][Math.floor(Math.random() * 5)];\n              removepool = randomNumber >= 500 ? currentBets[0].money * 2 : 0;\n            }\n          } else {\n            result = [5, 6, 7, 8, 9][Math.floor(Math.random() * 5)];\n          }\n        } else if (currentBets[0].bet === 't') {\n          returnValue = currentBets[0].money * 4.5;\n          result = poolValue > returnValue && randomNumber > 800 ? [0, 5][Math.floor(Math.random() * 2)] : [1, 2, 3, 4, 6, 7, 8, 9][Math.floor(Math.random() * 8)];\n          removepool = randomNumber > 800 && poolValue > returnValue ? currentBets[0].money * 4.5 : 0;\n        } else {\n          returnValue = currentBets[0].money * 9;\n          if (poolValue > returnValue) {\n            result = randomNumber < 100 ? parseInt(currentBets[0].bet) : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].filter(num => num != parseInt(currentBets[0].bet))[Math.floor(Math.random() * 9)];\n            removepool = randomNumber < 100 ? currentBets[0].money * 9 : 0;\n          } else {\n            result = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].filter(num => num != parseInt(currentBets[0].bet))[Math.floor(Math.random() * 9)];\n          }\n        }\n\n        // Update the result in the database\n        console.log(removepool, 'removepool');\n        console.log(result, 'result');\n        await connection.execute('UPDATE admin SET total_pool = total_pool - ?', [removepool]);\n        await connection.execute('UPDATE wingo SET amount = ?, status = ? WHERE period = ? AND game = ?', [result, 1, period, join]);\n      } else {\n        for (let i = 0; i < 10; i++) {\n          let total = 0;\n          if (i <= 4) {\n            total = total + sumMoneyByBetType('n') * 2;\n          }\n          if (i > 4) {\n            total = total + sumMoneyByBetType('l') * 2;\n          }\n          if (i == 1 || i == 3 || i == 7 || i == 9) {\n            total = total + sumMoneyByBetType(i.toString()) * 9 + sumMoneyByBetType('x') * 2;\n          }\n          if (i == 2 || i == 4 || i == 6 || i == 8) {\n            total = total + sumMoneyByBetType(i.toString()) * 9 + sumMoneyByBetType('d') * 2;\n          }\n          if (i == 0) {\n            total = total + sumMoneyByBetType(i.toString()) * 9 + sumMoneyByBetType('d') * 2 + sumMoneyByBetType('t') * 4.5;\n          }\n          if (i == 5) {\n            total = total + sumMoneyByBetType(i.toString()) * 9 + sumMoneyByBetType('x') * 2 + sumMoneyByBetType('t') * 4.5;\n          }\n          totalReturn[i] = total;\n        }\n        let smallest = Infinity;\n        let indices = [];\n        let zeroIndices = [];\n\n        // Find the smallest non-zero value and collect its indices\n        totalReturn.forEach((value, index) => {\n          if (value > 0) {\n            if (value < smallest) {\n              smallest = value;\n              indices = [index]; // Reset indices array with the current smallest value's index\n            } else if (value === smallest) {\n              indices.push(index); // Add to indices array if it's the same as the current smallest\n            }\n          } else {\n            zeroIndices.push(index); // Collect indices of zero values\n          }\n        });\n\n        // Determine the index based on the receivedMoney condition\n        let selectedIndex;\n        if (receivedMoney > smallest + receivedMoney * 0.20) {\n          // Randomly select an index if there are multiple indices with the smallest value\n          selectedIndex = indices[Math.floor(Math.random() * indices.length)];\n        } else {\n          // Randomly select a zero value index\n          selectedIndex = zeroIndices[Math.floor(Math.random() * zeroIndices.length)];\n        }\n        await connection.execute(`UPDATE wingo SET amount = ?, status = ? WHERE period = ? AND game = ?`, [selectedIndex, 1, period, join]);\n      }\n    } else {\n      let result = \"\";\n      let arr = nextResult.split(\"|\");\n      let check = arr.length;\n      if (check == 1) {\n        newArr = \"-1\";\n      } else {\n        for (let i = 1; i < arr.length; i++) {\n          newArr += arr[i] + \"|\";\n        }\n        newArr = newArr.slice(0, -1);\n      }\n      result = arr[0];\n      await connection.execute(`UPDATE wingo SET amount = ?,status = ? WHERE period = ? AND game = \"${join}\"`, [result, 1, period]);\n    }\n    const sql = `INSERT INTO wingo SET \n    period = ?,\n    amount = ?,\n    game = ?,\n    status = ?,\n    time = ?`;\n    await connection.execute(sql, [Number(period) + 1, 0, join, 0, timeNow]);\n    if (game == 1) join = \"wingo1\";\n    if (game == 3) join = \"wingo3\";\n    if (game == 5) join = \"wingo5\";\n    if (game == 10) join = \"wingo10\";\n    await connection.execute(`UPDATE admin SET ${join} = ?`, [-1]);\n  } catch (error) {\n    if (error) {\n      console.log(error);\n    }\n  }\n};\nconst handlingWinGo1P = async typeid => {\n  let game = \"\";\n  if (typeid == 1) game = \"wingo\";\n  if (typeid == 3) game = \"wingo3\";\n  if (typeid == 5) game = \"wingo5\";\n  if (typeid == 10) game = \"wingo10\";\n  const [winGoNow] = await connection.query(`SELECT * FROM wingo WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n\n  // update ket qua\n  await connection.execute(`UPDATE minutes_1 SET result = ? WHERE status = 0 AND game = '${game}'`, [winGoNow[0].amount]);\n  let result = Number(winGoNow[0].amount);\n  switch (result) {\n    case 0:\n      await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"0\" AND bet != \"t\" `, []);\n      break;\n    case 1:\n      await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"1\" `, []);\n      break;\n    case 2:\n      await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"2\" `, []);\n      break;\n    case 3:\n      await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"3\" `, []);\n      break;\n    case 4:\n      await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"4\" `, []);\n      break;\n    case 5:\n      await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"5\" AND bet != \"t\" `, []);\n      break;\n    case 6:\n      await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"6\" `, []);\n      break;\n    case 7:\n      await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"7\" `, []);\n      break;\n    case 8:\n      await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"8\" `, []);\n      break;\n    case 9:\n      await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"9\" `, []);\n      break;\n    default:\n      break;\n  }\n  if (result < 5) {\n    await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet = \"l\" `, []);\n  } else {\n    await connection.execute(`UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet = \"n\" `, []);\n  }\n\n  // láº¥y ra danh sÃ¡ch Äáº·t cÆ°á»£c chÆ°a xá»­ lÃ½\n  const [order] = await connection.execute(`SELECT * FROM minutes_1 WHERE status = 0 AND game = '${game}' `);\n  for (let i = 0; i < order.length; i++) {\n    let orders = order[i];\n    let result = orders.result;\n    let bet = orders.bet;\n    let total = orders.money;\n    let id = orders.id;\n    let phone = orders.phone;\n    var nhan_duoc = 0;\n    if (bet == \"l\" || bet == \"n\") {\n      nhan_duoc = total * 2;\n    } else {\n      if (result == 0 || result == 5) {\n        if (bet == \"d\" || bet == \"x\") {\n          nhan_duoc = total * 2;\n        } else if (bet == \"t\") {\n          nhan_duoc = total * 4.5;\n        } else if (bet == \"0\" || bet == \"5\") {\n          nhan_duoc = total * 9;\n        }\n      } else {\n        if (result == 1 && bet == \"1\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 1 && bet == \"x\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 2 && bet == \"2\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 2 && bet == \"d\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 3 && bet == \"3\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 3 && bet == \"x\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 4 && bet == \"4\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 4 && bet == \"d\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 6 && bet == \"6\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 6 && bet == \"d\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 7 && bet == \"7\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 7 && bet == \"x\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 8 && bet == \"8\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 8 && bet == \"d\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 9 && bet == \"9\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 9 && bet == \"x\") {\n            nhan_duoc = total * 2;\n          }\n        }\n      }\n    }\n    const [users] = await connection.execute(\"SELECT `win_wallet` FROM `users` WHERE `phone` = ?\", [phone]);\n    let totals = users[0].win_wallet + nhan_duoc * 0.98;\n    await connection.execute(\"UPDATE `minutes_1` SET `get` = ?, `status` = 1 WHERE `id` = ? \", [nhan_duoc * 0.98, id]);\n    const sql = \"UPDATE `users` SET `win_wallet` = ? WHERE `phone` = ? \";\n    await connection.execute(sql, [totals, phone]);\n  }\n};\nmodule.exports = {\n  winGoPage,\n  betWinGo,\n  listOrderOld,\n  GetMyEmerdList,\n  handlingWinGo1P,\n  addWinGo,\n  winGoPage3,\n  winGoPage5,\n  winGoPage10\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["connection","require","config","winGoPage","req","res","periodId","render","winGoPage3","winGoPage5","winGoPage10","isNumber","params","pattern","test","formateT","result","timerJoin","date","Date","Number","years","getFullYear","months","getMonth","days","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","rosesPlus","auth","money","level","query","level0","user","userInfo","f1","invite","length","infoF1","rosesF1","phone","f2","infoF2","rosesF2","f3","infoF3","rosesF3","f4","infoF4","rosesF4","vipRate","exp","bonus","rebate","betWinGo","typeid","join","x","body","cookies","status","json","message","gameJoin","winGoNow","period","fee","totalBetAmount","timeNow","now","remainingMoney","remainingWallet","win_wallet","id_product","Math","floor","random","formatTime","color","checkJoin","checkTime","getTime","sql","execute","code","updatedUser","vip_exp","currentLvl","vip_level","closestExpObject","filter","item","sort","a","b","parent","ratio","data","round","arr","check_vip","split","map","str","sql2","change","listOrderOld","pageno","pageto","msg","gameslist","game","wingo","wingoAll","page","ceil","GetMyEmerdList","minutes_1","minutes_1All","datas","id","others","addWinGo","currentBets","sumMoneyByBetType","betType","amt","bet","reduce","sum","receivedMoney","totalReturn","Array","fill","setting","amount","nextResult","newArr","wingo1","wingo3","wingo5","wingo10","randomNumber","count1","count2","count3","total","count","pool","poolValue","total_pool","returnValue","removepool","parseInt","num","console","log","i","toString","smallest","Infinity","indices","zeroIndices","forEach","value","index","push","selectedIndex","check","slice","error","handlingWinGo1P","order","orders","nhan_duoc","users","totals","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["winGoController.js"],"sourcesContent":["const connection = require(\"../config/connectDB\");\n// import jwt from \"jsonwebtoken\";\n// import md5 from \"md5\";\n// import e from \"express\";\nrequire(\"dotenv\").config();\n\nconst winGoPage = async (req, res) => {\n  const periodId = '123'\n  return res.render(\"bet/wingo/win.ejs\", { periodId });\n};\n\nconst winGoPage3 = async (req, res) => {\n  return res.render(\"bet/wingo/win3.ejs\");\n};\n\nconst winGoPage5 = async (req, res) => {\n  return res.render(\"bet/wingo/win5.ejs\");\n};\n\nconst winGoPage10 = async (req, res) => {\n  return res.render(\"bet/wingo/win10.ejs\");\n};\n\nconst isNumber = (params) => {\n  let pattern = /^[0-9]*\\d$/;\n  return pattern.test(params);\n};\n\nfunction formateT(params) {\n  let result = params < 10 ? \"0\" + params : params;\n  return result;\n}\n\nfunction timerJoin(params = \"\") {\n  let date = \"\";\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  let years = formateT(date.getFullYear());\n  let months = formateT(date.getMonth() + 1);\n  let days = formateT(date.getDate());\n\n  let hours = formateT(date.getHours());\n  let minutes = formateT(date.getMinutes());\n  let seconds = formateT(date.getSeconds());\n  return (\n    years +\n    \"-\" +\n    months +\n    \"-\" +\n    days +\n    \" \" +\n    hours +\n    \":\" +\n    minutes +\n    \":\" +\n    seconds\n  );\n}\n\nconst rosesPlus = async (auth, money) => {\n  const [level] = await connection.query(\"SELECT * FROM level \");\n  let level0 = level[0];\n\n  const [user] = await connection.query(\n    \"SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 \",\n    [auth]\n  );\n  let userInfo = user[0];\n  const [f1] = await connection.query(\n    \"SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 \",\n    [userInfo.invite]\n  );\n  if (money >= 10000) {\n    if (f1.length > 0) {\n      let infoF1 = f1[0];\n      let rosesF1 = (money / 100) * level0.f1;\n      await connection.query(\n        \"UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? \",\n        [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]\n      );\n      const [f2] = await connection.query(\n        \"SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 \",\n        [infoF1.invite]\n      );\n      if (f2.length > 0) {\n        let infoF2 = f2[0];\n        let rosesF2 = (money / 100) * level0.f2;\n        await connection.query(\n          \"UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? \",\n          [rosesF2, rosesF2, rosesF2, infoF2.phone]\n        );\n        const [f3] = await connection.query(\n          \"SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 \",\n          [infoF2.invite]\n        );\n        if (f3.length > 0) {\n          let infoF3 = f3[0];\n          let rosesF3 = (money / 100) * level0.f3;\n          await connection.query(\n            \"UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? \",\n            [rosesF3, rosesF3, rosesF3, infoF3.phone]\n          );\n          const [f4] = await connection.query(\n            \"SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 \",\n            [infoF3.invite]\n          );\n          if (f4.length > 0) {\n            let infoF4 = f4[0];\n            let rosesF4 = (money / 100) * level0.f4;\n            await connection.query(\n              \"UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? \",\n              [rosesF4, rosesF4, rosesF4, infoF4.phone]\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nlet vipRate = [\n  {\n    level: 0,\n    exp: 0,\n    bonus: 0,\n    rebate: 0\n  },\n  {\n    level: 1,\n    exp: 3000,\n    bonus: 30,\n    rebate: 0\n  },\n  {\n    level: 2,\n    exp: 30000,\n    bonus: 150,\n    rebate: 0.3\n  },\n  {\n    level: 3,\n    exp: 300000,\n    bonus: 690,\n    rebate: 0.35\n  },\n  {\n    level: 4,\n    exp: 2000000,\n    bonus: 1290,\n    rebate: 0.4\n  },\n  {\n    level: 5,\n    exp: 20000000,\n    bonus: 5900,\n    rebate: 0.45\n  },\n  {\n    level: 6,\n    exp: 60000000,\n    bonus: 16900,\n    rebate: 0.5\n  },\n  {\n    level: 7,\n    exp: 100000000,\n    bonus: 69000,\n    rebate: 0.55\n  },\n  {\n    level: 8,\n    exp: 1000000000,\n    bonus: 169000,\n    rebate: 0.6\n  },\n  {\n    level: 9,\n    exp: 5000000000,\n    bonus: 690000,\n    rebate: 0.7\n  },\n  {\n    level: 10,\n    exp: 10000000000,\n    bonus: 1690000,\n    rebate: 0.8\n  },\n]\n\nconst betWinGo = async (req, res) => {\n  let { typeid, join, x, money } = req.body;\n  let auth = req.cookies.auth;\n\n  if (typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n\n  let gameJoin = \"\";\n  if (typeid == 1) gameJoin = \"wingo\";\n  if (typeid == 3) gameJoin = \"wingo3\";\n  if (typeid == 5) gameJoin = \"wingo5\";\n  if (typeid == 10) gameJoin = \"wingo10\";\n  const [winGoNow] = await connection.query(\n    `SELECT period FROM wingo WHERE status = 0 AND game = '${gameJoin}' ORDER BY id DESC LIMIT 1`\n  );\n  const [user] = await connection.query(\n    \"SELECT `phone`, `code`, `invite`, `level`, `money`, `win_wallet` FROM users WHERE token = ? AND veri = 1  LIMIT 1 \",\n    [auth]\n  );\n\n  if (!winGoNow[0] || !user[0] || !isNumber(x) || !isNumber(money)) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n\n  let userInfo = user[0];\n  let period = winGoNow[0].period;\n  let fee = x * money * 0.02;\n  let totalBetAmount = x * money;\n  let timeNow = Date.now();\n\n  let remainingMoney = userInfo.money - totalBetAmount;\n  let remainingWallet = userInfo.win_wallet;\n\n  if (remainingMoney < 0) {\n    remainingWallet += remainingMoney; // Deduct the negative amount from win_wallet\n    remainingMoney = 0;\n  }\n\n  let date = new Date();\n  let years = formateT(date.getFullYear());\n  let months = formateT(date.getMonth() + 1);\n  let days = formateT(date.getDate());\n  let id_product =\n    years + months + days + Math.floor(Math.random() * 1000000000000000);\n\n  let formatTime = timerJoin();\n\n  let color = \"\";\n  if (join == \"l\") {\n    color = \"big\";\n  } else if (join == \"n\") {\n    color = \"small\";\n  } else if (join == \"t\") {\n    color = \"violet\";\n  } else if (join == \"d\") {\n    color = \"red\";\n  } else if (join == \"x\") {\n    color = \"green\";\n  } else if (join == \"0\") {\n    color = \"red-violet\";\n  } else if (join == \"5\") {\n    color = \"green-violet\";\n  } else if (join % 2 == 0) {\n    color = \"red\";\n  } else if (join % 2 != 0) {\n    color = \"green\";\n  }\n\n  let checkJoin = \"\";\n\n  if ((!isNumber(join) && join == \"l\") || join == \"n\") {\n    checkJoin = `\n        <div data-v-a9660e98=\"\" class=\"van-image\" style=\"width: 30px; height: 30px;\">\n            <img src=\"/images/${join == \"n\" ? \"small\" : \"big\"\n      }.png\" class=\"van-image__img\">\n        </div>\n        `;\n  } else {\n    checkJoin = `\n        <span data-v-a9660e98=\"\">${isNumber(join) ? join : \"\"}</span>\n        `;\n  }\n\n  let result = `\n    <div data-v-a9660e98=\"\" issuenumber=\"${period}\" addtime=\"${formatTime}\" rowid=\"1\" class=\"hb\">\n        <div data-v-a9660e98=\"\" class=\"item c-row\">\n            <div data-v-a9660e98=\"\" class=\"result\">\n                <div data-v-a9660e98=\"\" class=\"select select-${color}\">\n                    ${checkJoin}\n                </div>\n            </div>\n            <div data-v-a9660e98=\"\" class=\"c-row c-row-between info\">\n                <div data-v-a9660e98=\"\">\n                    <div data-v-a9660e98=\"\" class=\"issueName\">\n                        ${period}\n                    </div>\n                    <div data-v-a9660e98=\"\" class=\"tiem\">${formatTime}</div>\n                </div>\n            </div>\n        </div>\n        <!---->\n    </div>\n    `;\n\n  function timerJoin(params = \"\") {\n    let date = \"\";\n    if (params) {\n      date = new Date(Number(params));\n    } else {\n      date = new Date();\n    }\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    return years + \"-\" + months + \"-\" + days;\n  }\n  let checkTime = timerJoin(date.getTime());\n\n  if (remainingMoney > 0 || remainingWallet >= 0) {\n    const sql = `INSERT INTO minutes_1 SET \n        id_product = ?,\n        phone = ?,\n        code = ?,\n        invite = ?,\n        stage = ?,\n        level = ?,\n        money = ?,\n        amount = ?,\n        fee = ?,\n        \\`get\\`  = ?,\n        game = ?,\n        bet = ?,\n        status = ?,\n        today = ?,\n        time = ?`;\n    await connection.execute(sql, [\n      id_product,\n      userInfo.phone,\n      userInfo.code,\n      userInfo.invite,\n      period,\n      userInfo.level,\n      totalBetAmount - fee,\n      x,\n      fee,\n      0,\n      gameJoin,\n      join,\n      0,\n      checkTime,\n      timeNow\n    ]);\n    await connection.execute(\n      \"UPDATE `users` SET `money` = ?, `win_wallet` = ?,vip_exp = vip_exp + ? WHERE `token` = ?\",\n      [remainingMoney, remainingWallet,totalBetAmount,auth]\n    );\n    const [updatedUser] = await connection.query(\n      \"SELECT `money`, `win_wallet`,vip_exp,vip_level,check_vip ,phone FROM users WHERE token = ? AND veri = 1  LIMIT 1 \",\n      [auth]\n    );\n   \n    let exp = updatedUser[0].vip_exp;\n    let currentLvl = updatedUser[0].vip_level;\n    const closestExpObject = vipRate\n      .filter(item => item.exp <= exp)\n      .sort((a, b) => b.exp - a.exp)[0];\n\n    const [parent] = await connection.execute('SELECT phone , vip_level FROM users WHERE code = ?',[user[0].invite]);\n    const ratio = vipRate.filter((data)=>data.level===parent[0].vip_level);\n    await connection.execute('UPDATE users SET win_wallet = win_wallet + ? WHERE phone = ?',[Math.round(totalBetAmount*ratio[0].rebate/100),parent[0].phone]);\n      if(closestExpObject.level>currentLvl){\n        let arr = updatedUser[0].check_vip.split(',').map(Number);\n\n        if(arr[closestExpObject.level-1]===0){\n          arr[closestExpObject.level-1] =1;\n          const str = arr.join(',');\n          await connection.execute(`UPDATE users set vip_level = ? , win_wallet = win_wallet + ?,check_vip = ? where phone = ?`,[closestExpObject.level,closestExpObject.bonus,str,updatedUser[0].phone]);\n          await connection.execute(`INSERT INTO vip_record set type = \"Level Up Reward\",reward = ?,exp = ?,level = ?,phone = ?`,[closestExpObject.bonus,closestExpObject.exp,closestExpObject.level,updatedUser[0].phone])\n        }\n        else{\n          await connection.execute(`UPDATE users SET vip_level = ? where phone = ?`,[closestExpObject.level,updatedUser[0].phone]);\n        }\n       \n      }\n    await rosesPlus(auth, totalBetAmount);\n    const [level] = await connection.query(\"SELECT * FROM level \");\n    let level0 = level[0];\n    const sql2 = `INSERT INTO roses SET \n        phone = ?,\n        code = ?,\n        invite = ?,\n        f1 = ?,\n        f2 = ?,\n        f3 = ?,\n        f4 = ?,\n        time = ?`;\n    let f1 = (totalBetAmount / 100) * level0.f1;\n    let f2 = (totalBetAmount / 100) * level0.f2;\n    let f3 = (totalBetAmount / 100) * level0.f3;\n    let f4 = (totalBetAmount / 100) * level0.f4;\n    await connection.execute(sql2, [\n      userInfo.phone,\n      userInfo.code,\n      userInfo.invite,\n      f1,\n      f2,\n      f3,\n      f4,\n      timeNow\n    ]);\n    return res.status(200).json({\n      message: \"Successful bet\",\n      status: true,\n      data: result,\n      change: updatedUser[0].level,\n      money: updatedUser[0].money,\n      win_wallet: updatedUser[0].win_wallet\n    });\n  } else {\n    return res.status(200).json({\n      message: \"The amount is not enough\",\n      status: false\n    });\n  }\n};\n\n\nconst listOrderOld = async (req, res) => {\n  let { typeid, pageno, pageto } = req.body;\n\n  if (typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n  if (pageno < 0 || pageto < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  let auth = req.cookies.auth;\n  const [user] = await connection.query(\n    \"SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 \",\n    [auth]\n  );\n\n  let game = \"\";\n  if (typeid == 1) game = \"wingo\";\n  if (typeid == 3) game = \"wingo3\";\n  if (typeid == 5) game = \"wingo5\";\n  if (typeid == 10) game = \"wingo10\";\n\n\n  const [wingo] = await connection.query(\n    `SELECT * FROM wingo WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT ${pageno}, ${pageto} `\n  );\n  const [wingoAll] = await connection.query(\n    `SELECT * FROM wingo WHERE status != 0 AND game = '${game}' `\n  );\n  const [period] = await connection.query(\n    `SELECT period FROM wingo WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `\n  );\n  if (!wingo[0]) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!pageno || !pageto || !user[0] || !wingo[0] || !period[0]) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n  let page = Math.ceil(wingoAll.length / 10);\n  return res.status(200).json({\n    code: 0,\n    msg: \"Get success\",\n    data: {\n      gameslist: wingo\n    },\n    period: period[0].period,\n    page: page,\n    status: true\n  });\n};\n\nconst GetMyEmerdList = async (req, res) => {\n  let { typeid, pageno, pageto } = req.body;\n\n  if (!pageno || !pageto) {\n    pageno = 0;\n    pageto = 10;\n  }\n\n  if (typeid != 1 && typeid != 3 && typeid != 5 && typeid != 10) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n\n  if (pageno < 0 || pageto < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  let auth = req.cookies.auth;\n\n  let game = \"\";\n  if (typeid == 1) game = \"wingo\";\n  if (typeid == 3) game = \"wingo3\";\n  if (typeid == 5) game = \"wingo5\";\n  if (typeid == 10) game = \"wingo10\";\n\n  const [user] = await connection.query(\n    \"SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 \",\n    [auth]\n  );\n  const [minutes_1] = await connection.query(\n    `SELECT * FROM minutes_1 WHERE phone = ? AND game = '${game}' ORDER BY id DESC LIMIT ${Number(pageno) + \",\" + Number(pageto)\n    }`,\n    [user[0].phone]\n  );\n  const [minutes_1All] = await connection.query(\n    `SELECT * FROM minutes_1 WHERE phone = ? AND game = '${game}' ORDER BY id DESC `,\n    [user[0].phone]\n  );\n\n  if (!minutes_1[0]) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!pageno || !pageto || !user[0] || !minutes_1[0]) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: true\n    });\n  }\n  let page = Math.ceil(minutes_1All.length / 10);\n\n  let datas = minutes_1.map((data) => {\n    let { id, phone, code, invite, level, game, ...others } = data;\n    return others;\n  });\n\n  return res.status(200).json({\n    code: 0,\n    msg: \"Get success\",\n    data: {\n      gameslist: datas\n    },\n    page: page,\n    status: true\n  });\n};\n\nconst addWinGo = async (game) => {\n  try {\n    let join = \"\";\n    if (game == 1) join = \"wingo\";\n    if (game == 3) join = \"wingo3\";\n    if (game == 5) join = \"wingo5\";\n    if (game == 10) join = \"wingo10\";\n\n\n    const [winGoNow] = await connection.query(\n      `SELECT period FROM wingo WHERE status = 0 AND game = \"${join}\" ORDER BY id DESC LIMIT 1 `\n    );\n\n    const [currentBets] = await connection.execute(\n      `SELECT * FROM minutes_1 WHERE game = ? AND status = ? AND level = ? ORDER BY id ASC`,\n      [join, 0, 0]\n    );\n\n    function sumMoneyByBetType(betType) {\n      let amt = currentBets\n        .filter(item => item.bet === betType)\n        .reduce((sum, item) => sum + item.money, 0);\n      return amt;\n    }\n\n    let receivedMoney = currentBets.reduce((sum, item) => sum + item.money, 0);\n\n    let totalReturn = new Array(10).fill(0);\n\n    const [setting] = await connection.query(\"SELECT * FROM `admin` \");\n    let period = winGoNow[0].period; // cáº§u hiá»n táº¡i\n    let amount = Math.floor(Math.random() * 10); // xanh Äá» tÃ­m\n    let timeNow = Date.now();\n    let nextResult = \"\";\n    let newArr = \"\";\n    if (game == 1) nextResult = setting[0].wingo1;\n    if (game == 3) nextResult = setting[0].wingo3;\n    if (game == 5) nextResult = setting[0].wingo5;\n    if (game == 10) nextResult = setting[0].wingo10;\n    if (nextResult == \"-1\" && !currentBets[0]) {\n      await connection.execute(\n        `UPDATE wingo SET amount = ?, status = ? WHERE period = ? AND game = ?`,\n        [amount, 1, period, join]\n      );\n\n      // newArr = \"-1\";\n\n    }\n    else if (nextResult == '-1' && currentBets) {\n      let result ;\n      if (currentBets.length == 1) {\n        const randomNumber = Math.floor(Math.random() * 1000) + 1;\n    \n        await connection.execute('UPDATE admin SET total_pool = total_pool + ?', [currentBets[0].money / 2]);\n    \n        const [count1] = await connection.execute('SELECT COUNT(*) AS count FROM minutes_1 WHERE phone = ?', [currentBets[0].phone]);\n       \n        const [count2] = await connection.execute('SELECT COUNT(*) AS count FROM result_5d WHERE phone = ?', [currentBets[0].phone]);\n       \n        const [count3] = await connection.execute('SELECT COUNT(*) AS count FROM result_k3 WHERE phone = ?', [currentBets[0].phone]);\n      \n        \n        const total = count1[0].count + count2[0].count + count3[0].count;\n    \n        // Fetch the current pool value\n        const [pool] = await connection.execute('SELECT total_pool FROM admin');\n        let poolValue = pool[0].total_pool;\n        let returnValue = 0;\n        let removepool = 0;\n    \n        // Logic based on the bet type\n        if (currentBets[0].bet === 'x') {\n            returnValue = currentBets[0].money * 2;\n            if (poolValue > returnValue) {\n                if (total < 10) {\n                    result = randomNumber > 200\n                        ? [1, 3, 5, 7, 9][Math.floor(Math.random() * 5)]\n                        : [0, 2, 4, 6, 8][Math.floor(Math.random() * 5)];\n                        removepool = randomNumber > 300 ? currentBets[0].money * 2 : 0; \n                } else {\n                    result = randomNumber < 500\n                        ? [1, 3, 5, 7, 9][Math.floor(Math.random() * 5)]\n                        : [0, 2, 4, 6, 8][Math.floor(Math.random() * 5)];\n                        removepool = randomNumber < 500 ? currentBets[0].money * 2 : 0;\n                }\n            } else {\n                result = [0, 2, 4, 6, 8][Math.floor(Math.random() * 5)];\n            }\n        } else if (currentBets[0].bet === 'd') {\n            returnValue = currentBets[0].money * 2;\n            if (poolValue > returnValue) {\n                if (total < 10) {\n                    result = randomNumber > 200\n                        ? [0, 2, 4, 6, 8][Math.floor(Math.random() * 5)]\n                        : [1, 3, 5, 7, 9][Math.floor(Math.random() * 5)];\n                        removepool = randomNumber > 300 ? currentBets[0].money * 2 : 0;\n                } else {\n                    result = randomNumber < 500\n                        ? [1, 3, 5, 7, 9][Math.floor(Math.random() * 5)]\n                        : [0, 2, 4, 6, 8][Math.floor(Math.random() * 5)];\n                        removepool = randomNumber >= 500 ? currentBets[0].money * 2 : 0;\n                }\n            } else {\n                result = [1, 3, 5, 7, 9][Math.floor(Math.random() * 5)];\n            }\n        } else if (currentBets[0].bet === 'l') {\n            returnValue = currentBets[0].money * 2;\n            if (poolValue > returnValue) {\n                if (total < 10) {\n                    result = randomNumber > 200\n                        ? [5, 6, 7, 8, 9][Math.floor(Math.random() * 5)]\n                        : [0, 1, 2, 3, 4][Math.floor(Math.random() * 5)];\n                        removepool = randomNumber > 300 ? currentBets[0].money * 2 : 0;\n                } else {\n                    result = randomNumber < 500\n                        ? [5, 6, 7, 8, 9][Math.floor(Math.random() * 5)]\n                        : [0, 1, 2, 3, 4][Math.floor(Math.random() * 5)];\n                        removepool = randomNumber < 500 ? currentBets[0].money * 2 : 0;\n                }\n            } else {\n                result = [0, 1, 2, 3, 4][Math.floor(Math.random() * 5)];\n            }\n        } else if (currentBets[0].bet === 'n') {\n            returnValue = currentBets[0].money * 2;\n            if (poolValue > returnValue) {\n                if (total < 10) {\n                    result = randomNumber > 200\n                        ? [0, 1, 2, 3, 4][Math.floor(Math.random() * 5)]\n                        : [5, 6, 7, 8, 9][Math.floor(Math.random() * 5)];\n                        removepool = randomNumber > 300 ? currentBets[0].money * 2 : 0;\n                } else {\n                    result = randomNumber < 500\n                        ? [5, 6, 7, 8, 9][Math.floor(Math.random() * 5)]\n                        : [0, 1, 2, 3, 3][Math.floor(Math.random() * 5)];\n                        removepool = randomNumber >= 500 ? currentBets[0].money * 2 : 0;\n                }\n            } else {\n                result = [5, 6, 7, 8, 9][Math.floor(Math.random() * 5)];\n            }\n        } else if (currentBets[0].bet === 't') {\n            returnValue = currentBets[0].money * 4.5;\n            result = poolValue > returnValue && randomNumber > 800\n                ? [0, 5][Math.floor(Math.random() * 2)]\n                : [1, 2, 3, 4, 6, 7, 8, 9][Math.floor(Math.random() * 8)];\n                removepool = randomNumber > 800 && poolValue > returnValue ? currentBets[0].money * 4.5 : 0;\n        } else {\n            returnValue = currentBets[0].money * 9;\n            if(poolValue>returnValue){\n              result = randomNumber < 100\n              ? parseInt(currentBets[0].bet)\n              : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].filter(num => num != parseInt(currentBets[0].bet))[Math.floor(Math.random() * 9)];\n              removepool = randomNumber < 100 ? currentBets[0].money * 9 : 0;\n            }\n          else{\n            result = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].filter(num => num != parseInt(currentBets[0].bet))[Math.floor(Math.random() * 9)];\n          }\n        }\n    \n        // Update the result in the database\n         console.log(removepool,'removepool');\n         console.log(result,'result');\n        await connection.execute('UPDATE admin SET total_pool = total_pool - ?', [removepool]);\n        await connection.execute(\n            'UPDATE wingo SET amount = ?, status = ? WHERE period = ? AND game = ?',\n            [result, 1, period, join]\n        );\n    }\n    \n      else {\n        for (let i = 0; i < 10; i++) {\n          let total = 0;\n          if (i <= 4) {\n            total = total + sumMoneyByBetType('n') * 2;\n          }\n          if (i > 4) {\n            total = total + sumMoneyByBetType('l') * 2;\n          }\n          if (i == 1 || i == 3 || i == 7 || i == 9) {\n            total = total + sumMoneyByBetType(i.toString()) * 9 + sumMoneyByBetType('x') * 2;\n          }\n          if (i == 2 || i == 4 || i == 6 || i == 8) {\n            total = total + sumMoneyByBetType(i.toString()) * 9 + sumMoneyByBetType('d') * 2;\n          }\n\n          if (i == 0) {\n            total = total + sumMoneyByBetType(i.toString()) * 9 + sumMoneyByBetType('d') * 2 + sumMoneyByBetType('t') * 4.5;\n          }\n\n          if (i == 5) {\n            total = total + sumMoneyByBetType(i.toString()) * 9 + sumMoneyByBetType('x') * 2 + sumMoneyByBetType('t') * 4.5;\n          }\n\n          totalReturn[i] = total;\n\n        }\n\n\n\n        let smallest = Infinity;\n        let indices = [];\n        let zeroIndices = [];\n\n        // Find the smallest non-zero value and collect its indices\n        totalReturn.forEach((value, index) => {\n          if (value > 0) {\n            if (value < smallest) {\n              smallest = value;\n              indices = [index];  // Reset indices array with the current smallest value's index\n            } else if (value === smallest) {\n              indices.push(index);  // Add to indices array if it's the same as the current smallest\n            }\n          } else {\n            zeroIndices.push(index); // Collect indices of zero values\n          }\n        });\n\n      \n        // Determine the index based on the receivedMoney condition\n        let selectedIndex;\n        if (receivedMoney > smallest + receivedMoney * 0.20) {\n          // Randomly select an index if there are multiple indices with the smallest value\n          selectedIndex = indices[Math.floor(Math.random() * indices.length)];\n        } else {\n          // Randomly select a zero value index\n          selectedIndex = zeroIndices[Math.floor(Math.random() * zeroIndices.length)];\n        }\n\n\n\n        await connection.execute(\n          `UPDATE wingo SET amount = ?, status = ? WHERE period = ? AND game = ?`,\n          [selectedIndex, 1, period, join]\n        );\n\n\n\n      }\n    }\n\n    else {\n      let result = \"\";\n      let arr = nextResult.split(\"|\");\n      let check = arr.length;\n      if (check == 1) {\n        newArr = \"-1\";\n      } else {\n        for (let i = 1; i < arr.length; i++) {\n          newArr += arr[i] + \"|\";\n        }\n        newArr = newArr.slice(0, -1);\n      }\n      result = arr[0];\n      await connection.execute(\n        `UPDATE wingo SET amount = ?,status = ? WHERE period = ? AND game = \"${join}\"`,\n        [result, 1, period]\n      );\n    }\n\n    const sql = `INSERT INTO wingo SET \n    period = ?,\n    amount = ?,\n    game = ?,\n    status = ?,\n    time = ?`;\n    await connection.execute(sql, [Number(period) + 1, 0, join, 0, timeNow]);\n\n    if (game == 1) join = \"wingo1\";\n    if (game == 3) join = \"wingo3\";\n    if (game == 5) join = \"wingo5\";\n    if (game == 10) join = \"wingo10\";\n\n    await connection.execute(`UPDATE admin SET ${join} = ?`, [-1]);\n\n  } catch (error) {\n    if (error) {\n      console.log(error);\n    }\n  }\n};\n\nconst handlingWinGo1P = async (typeid) => {\n  let game = \"\";\n  if (typeid == 1) game = \"wingo\";\n  if (typeid == 3) game = \"wingo3\";\n  if (typeid == 5) game = \"wingo5\";\n  if (typeid == 10) game = \"wingo10\";\n\n  const [winGoNow] = await connection.query(\n    `SELECT * FROM wingo WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `\n  );\n\n  // update ket qua\n  await connection.execute(\n    `UPDATE minutes_1 SET result = ? WHERE status = 0 AND game = '${game}'`,\n    [winGoNow[0].amount]\n  );\n  let result = Number(winGoNow[0].amount);\n  switch (result) {\n    case 0:\n      await connection.execute(\n        `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"0\" AND bet != \"t\" `,\n        []\n      );\n      break;\n    case 1:\n      await connection.execute(\n        `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"1\" `,\n        []\n      );\n      break;\n    case 2:\n      await connection.execute(\n        `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"2\" `,\n        []\n      );\n      break;\n    case 3:\n      await connection.execute(\n        `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"3\" `,\n        []\n      );\n      break;\n    case 4:\n      await connection.execute(\n        `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"4\" `,\n        []\n      );\n      break;\n    case 5:\n      await connection.execute(\n        `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"5\" AND bet != \"t\" `,\n        []\n      );\n      break;\n    case 6:\n      await connection.execute(\n        `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"6\" `,\n        []\n      );\n      break;\n    case 7:\n      await connection.execute(\n        `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"7\" `,\n        []\n      );\n      break;\n    case 8:\n      await connection.execute(\n        `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"d\" AND bet != \"8\" `,\n        []\n      );\n      break;\n    case 9:\n      await connection.execute(\n        `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet != \"l\" AND bet != \"n\" AND bet != \"x\" AND bet != \"9\" `,\n        []\n      );\n      break;\n    default:\n      break;\n  }\n\n  if (result < 5) {\n    await connection.execute(\n      `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet = \"l\" `,\n      []\n    );\n  } else {\n    await connection.execute(\n      `UPDATE minutes_1 SET status = 2 WHERE status = 0 AND game = \"${game}\" AND bet = \"n\" `,\n      []\n    );\n  }\n\n  // láº¥y ra danh sÃ¡ch Äáº·t cÆ°á»£c chÆ°a xá»­ lÃ½\n  const [order] = await connection.execute(\n    `SELECT * FROM minutes_1 WHERE status = 0 AND game = '${game}' `\n  );\n  for (let i = 0; i < order.length; i++) {\n    let orders = order[i];\n    let result = orders.result;\n    let bet = orders.bet;\n    let total = orders.money;\n    let id = orders.id;\n    let phone = orders.phone;\n    var nhan_duoc = 0;\n\n    if (bet == \"l\" || bet == \"n\") {\n      nhan_duoc = total * 2;\n    } else {\n      if (result == 0 || result == 5) {\n        if (bet == \"d\" || bet == \"x\") {\n          nhan_duoc = total * 2;\n        } else if (bet == \"t\") {\n          nhan_duoc = total * 4.5;\n        } else if (bet == \"0\" || bet == \"5\") {\n          nhan_duoc = total * 9;\n        }\n      } else {\n        if (result == 1 && bet == \"1\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 1 && bet == \"x\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 2 && bet == \"2\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 2 && bet == \"d\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 3 && bet == \"3\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 3 && bet == \"x\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 4 && bet == \"4\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 4 && bet == \"d\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 6 && bet == \"6\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 6 && bet == \"d\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 7 && bet == \"7\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 7 && bet == \"x\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 8 && bet == \"8\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 8 && bet == \"d\") {\n            nhan_duoc = total * 2;\n          }\n        }\n        if (result == 9 && bet == \"9\") {\n          nhan_duoc = total * 9;\n        } else {\n          if (result == 9 && bet == \"x\") {\n            nhan_duoc = total * 2;\n          }\n        }\n      }\n    }\n    const [users] = await connection.execute(\n      \"SELECT `win_wallet` FROM `users` WHERE `phone` = ?\",\n      [phone]\n    );\n    let totals = users[0].win_wallet + nhan_duoc * 0.98;\n    await connection.execute(\n      \"UPDATE `minutes_1` SET `get` = ?, `status` = 1 WHERE `id` = ? \",\n      [nhan_duoc * 0.98, id]\n    );\n    const sql = \"UPDATE `users` SET `win_wallet` = ? WHERE `phone` = ? \";\n    await connection.execute(sql, [totals, phone]);\n  }\n};\n\nmodule.exports = {\n  winGoPage,\n  betWinGo,\n  listOrderOld,\n  GetMyEmerdList,\n  handlingWinGo1P,\n  addWinGo,\n  winGoPage3,\n  winGoPage5,\n  winGoPage10,\n};\n"],"mappings":"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","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/userController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const connection = require(\"../config/connectDB\");\nconst jwt = require(\"jsonwebtoken\");\nconst md5 = require(\"md5\");\nconst request = require(\"request\");\nconst axios = require(\"axios\");\nlet timeNow = Date.now();\nconst randomNumber = (min, max) => {\n  return String(Math.floor(Math.random() * (max - min + 1)) + min);\n};\nconst verifyCode = async (req, res) => {\n  let auth = req.cookies.auth;\n  let now = new Date().getTime();\n  let timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500;\n  let otp = randomNumber(100000, 999999);\n  conswit[rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? \", [auth]);\n  if (!rows) {\n    return res.status(200).json({\n      message: \"Account does not exist\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let user = rows[0];\n  if (user.time_otp - now <= 0) {\n    request(`http://47.243.168.18:9090/sms/batch/v2?appkey=NFJKdK&appsecret=brwkTw&phone=84${user.phone}&msg=Your verification code is ${otp}&extend=${now}`, async (error, response, body) => {\n      let data = JSON.parse(body);\n      if (data.code == \"00000\") {\n        await connection.execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, user.phone]);\n        return res.status(200).json({\n          message: \"Submitted successfully\",\n          status: true,\n          timeStamp: timeNow,\n          timeEnd: timeEnd\n        });\n      }\n    });\n  } else {\n    return res.status(200).json({\n      message: \"Send SMS regularly.\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\nconst aviator = async (req, res) => {\n  let auth = req.cookies.auth;\n  res.redirect(`https://jetx.airportcar.in/theninja/src/api/userapi.php?action=loginandregisterbyauth&token=${auth}`);\n  //res.redirect(https://jetx.airportcar.in/#/jet/loginbyauth/${auth});\n};\nconst userInfo = async (req, res) => {\n  let auth = req.cookies.auth;\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? \", [auth]);\n  if (!rows) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE `phone` = ? AND status = 1\", [rows[0].phone]);\n  let totalRecharge = 0;\n  recharge.forEach(data => {\n    totalRecharge += data.money;\n  });\n  const [withdraw] = await connection.query(\"SELECT * FROM withdraw WHERE `phone` = ? AND status = 1\", [rows[0].phone]);\n  let totalWithdraw = 0;\n  withdraw.forEach(data => {\n    totalWithdraw += data.money;\n  });\n  const {\n    id,\n    password,\n    ip,\n    veri,\n    ip_address,\n    status,\n    time,\n    token,\n    ...others\n  } = rows[0];\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    data: {\n      code: others.code,\n      id_user: others.id_user,\n      name_user: others.name_user,\n      phone_user: others.phone,\n      money_user: others.money,\n      win_wallet: others.win_wallet\n    },\n    totalRecharge: totalRecharge,\n    totalWithdraw: totalWithdraw,\n    timeStamp: timeNow\n  });\n};\nconst changeUser = async (req, res) => {\n  let auth = req.cookies.auth;\n  let name = req.body.name;\n  let type = req.body.type;\n  const [rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? \", [auth]);\n  if (!rows || !type || !name) return res.status(200).json({\n    message: \"Failed\",\n    status: false,\n    timeStamp: timeNow\n  });\n  switch (type) {\n    case \"editname\":\n      await connection.query(\"UPDATE users SET name_user = ? WHERE `token` = ? \", [name, auth]);\n      return res.status(200).json({\n        message: \"Username modification successful\",\n        status: true,\n        timeStamp: timeNow\n      });\n      break;\n    default:\n      return res.status(200).json({\n        message: \"Failed\",\n        status: false,\n        timeStamp: timeNow\n      });\n      break;\n  }\n};\nconst changePassword = async (req, res) => {\n  let auth = req.cookies.auth;\n  let password = req.body.password;\n  let newPassWord = req.body.newPassWord;\n  // let otp = req.body.otp;\n\n  if (!password || !newPassWord) return res.status(200).json({\n    message: \"Failed\",\n    status: false,\n    timeStamp: timeNow\n  });\n  const [rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? AND `password` = ? \", [auth, md5(password)]);\n  if (rows.length == 0) return res.status(200).json({\n    message: \"Incorrect password\",\n    status: false,\n    timeStamp: timeNow\n  });\n\n  // let getTimeEnd = Number(rows[0].time_otp);\n  // let tet = new Date(getTimeEnd).getTime();\n  // var now = new Date().getTime();\n  // var timeRest = tet - now;\n  // if (timeRest <= 0) {\n  //     return res.status(200).json({\n  //         message: 'MÃ£ OTP ÄÃ£ háº¿t hiá»u lá»±c',\n  //         status: false,\n  //         timeStamp: timeNow,\n  //     });\n  // }\n\n  // const [check_otp] = await connection.query('SELECT * FROM users WHERE `token` = ? AND `password` = ? AND otp = ? ', [auth, md5(password), otp]);\n  // if(check_otp.length == 0) return res.status(200).json({\n  //     message: 'MÃ£ OTP khÃ´ng chÃ­nh xÃ¡c',\n  //     status: false,\n  //     timeStamp: timeNow,\n  // });;\n\n  await connection.query(\"UPDATE users SET otp = ?, password = ?, plain_password = ? WHERE `token` = ? \", [randomNumber(100000, 999999), md5(newPassWord), newPassWord, auth]);\n  return res.status(200).json({\n    message: \"Password modification successful\",\n    status: true,\n    timeStamp: timeNow\n  });\n};\nconst attendance = {\n  1: 200,\n  2: 1000,\n  3: 3000,\n  4: 9000,\n  5: 20000,\n  6: 60000,\n  7: 200000\n};\nconst checkInHandling = async (req, res) => {\n  let auth = req.cookies.auth;\n  let data = req.body.data;\n  console.log(data, 'data');\n  if (!auth) return res.status(200).json({\n    message: \"Failed\",\n    status: false,\n    timeStamp: timeNow\n  });\n  const [rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? \", [auth]);\n  if (!rows) return res.status(200).json({\n    message: \"Failed\",\n    status: false,\n    timeStamp: timeNow\n  });\n  if (!data) {\n    const [point_list] = await connection.query(\"SELECT * FROM point_list WHERE `phone` = ? \", [rows[0].phone]);\n    return res.status(200).json({\n      message: \"No More Data\",\n      datas: point_list,\n      status: true,\n      timeStamp: timeNow\n    });\n  }\n  const currentDate = new Date();\n  const startTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - (rows[0].today_daily - 1), 0, 1).getTime();\n  const query = `\n    SELECT *\n    FROM recharge\n    WHERE status = 1\n      AND phone = ?\n      AND time > ?\n`;\n  const [recharge] = await connection.execute(query, [rows[0].phone, startTime]);\n  if (data > rows[0].daily_today) {\n    return res.status(200).json({\n      message: \"Invalid Option!\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  if (data < rows[0].daily_today || rows[0].daily_prev === rows[0].daily_today) {\n    return res.status(200).json({\n      message: \"Already Claimed!\",\n      status: false,\n      timeStamp: timeNow\n    });\n  } else {\n    const total_recharge = recharge.reduce((acc, val) => acc + val.money, 0);\n    if (total_recharge >= attendance[data]) {\n      const [point_lists] = await connection.query(\"SELECT * FROM point_list WHERE `phone` = ? \", [rows[0].phone]);\n      const point_list = point_lists[0];\n      const get = point_list[`total${data}`];\n      await connection.query(\"UPDATE users SET win_wallet = win_wallet + ?,daily_prev = daily_prev + ? WHERE phone = ? \", [get, 1, rows[0].phone]);\n      console.log(rows[0].phone, 'phone');\n      const [newData] = await connection.query('INSERT INTO attendance_record SET phone = ? , amount = ? , day = ?', [rows[0].phone, get, data]);\n      console.log(newData, 'newaData');\n      return res.status(200).json({\n        message: `You just received â¹ ${point_list.total1}.00`,\n        status: true,\n        timeStamp: timeNow\n      });\n    } else {\n      return res.status(200).json({\n        message: `recharge Rs ${attendance[data] - total_recharge} to claim the rewaord`,\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n  }\n};\nconst weeklyClaim = async (req, res) => {\n  const auth = req.cookies.auth;\n  const index = req.body.index;\n  const amount = req.body.amount;\n  const deposit = req.body.deposit;\n  console.log(auth, index, amount, deposit, 'req');\n  const [rows] = await connection.query('SELECT * FROM users WHERE token = ?', [auth]);\n  console.log(rows, 'step1');\n  if (index > 6 || !rows[0]) {\n    return res.status(200).json({\n      message: 'FAILED!',\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  await connection.execute('INSERT INTO weekly_report SET amount = ?,bonus = ?,phone = ?', [deposit, amount, rows[0].phone]);\n  console.log('step2');\n  let weeklyClaimedArray = rows[0].weekly_claimed.split(',').map(Number);\n  console.log(weeklyClaimedArray, 'preArray');\n  if (weeklyClaimedArray[index] == 1) {\n    return res.status(200).json({\n      message: 'Already Claimed!',\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  weeklyClaimedArray[index] = 1;\n  console.log(weeklyClaimedArray, 'postArray');\n  const updatedWeeklyClaimedString = weeklyClaimedArray.join(',');\n  console.log(updatedWeeklyClaimedString, 'updated string');\n  await connection.execute('UPDATE users SET weekly_claimed = ?,win_wallet = win_wallet + ? WHERE token = ?', [updatedWeeklyClaimedString, amount, auth]);\n  console.log('step3');\n  return res.status(200).json({\n    message: `You Have Received ${amount} Successfully`,\n    status: true,\n    timeStamp: timeNow\n  });\n};\nconst activityRecords = async (req, res) => {\n  const auth = req.cookies.auth;\n  const [user] = await connection.execute('SELECT * FROM users WHERE token = ?', [auth]);\n  if (!user[0]) {\n    return res.status(200).json({\n      message: 'FAILED!',\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [records] = await connection.execute('SELECT * FROM weekly_report WHERE phone=?', [user[0].phone]);\n  return res.status(200).json({\n    message: 'success',\n    status: true,\n    data: records,\n    timeStamp: timeNow\n  });\n};\nfunction formateT(params) {\n  let result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin(params = \"\", addHours = 0) {\n  let date = \"\";\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  let years = formateT(date.getFullYear());\n  let months = formateT(date.getMonth() + 1);\n  let days = formateT(date.getDate());\n  let hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  let minutes = formateT(date.getMinutes());\n  let seconds = formateT(date.getSeconds());\n  return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n}\nconst checkInData = async (req, res) => {\n  let auth = req.cookies.auth;\n  let [user] = await connection.query('SELECT * from users WHERE token = ?', [auth]);\n  if (!user[0]) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  } else {\n    const currentDate = new Date();\n    const startTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - (user[0].today_daily - 1), 0, 1).getTime();\n    const query = `\n       SELECT *\n       FROM recharge\n       WHERE status = 1\n         AND phone = ?\n         AND time > ?\n   `;\n    const [recharge] = await connection.execute(query, [user[0].phone, startTime]);\n    const total_recharge = recharge.reduce((acc, val) => acc + val.money, 0);\n    return res.status(200).json({\n      message: \"success\",\n      status: true,\n      data: user[0],\n      recharge: total_recharge,\n      timeStamp: timeNow\n    });\n  }\n};\nconst checkInRecord = async (req, res) => {\n  let auth = req.cookies.auth;\n  let [user] = await connection.query('SELECT phone from users WHERE token = ?', [auth]);\n  if (!user[0]) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  } else {\n    let [Data] = await connection.query('SELECT * from attendance_record WHERE phone = ?', [user[0].phone]);\n    return res.status(200).json({\n      message: \"success\",\n      status: true,\n      data: Data,\n      timeStamp: timeNow\n    });\n  }\n};\nconst promotion = async (req, res) => {\n  let auth = req.cookies.auth;\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite`, `roses_f`, `roses_f1`, `roses_today` FROM users WHERE `token` = ? \", [auth]);\n  const [level] = await connection.query(\"SELECT * FROM level\");\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let userInfo = user[0];\n\n  // Directly referred level-1 users\n  const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code]);\n\n  // Directly referred users today\n  let f1_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_time = f1s[i].time;\n    let check = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check) {\n      f1_today += 1;\n    }\n  }\n\n  // All direct referrals today\n  let f_all_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code;\n    const f1_time = f1s[i].time;\n    let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check_f1) f_all_today += 1;\n\n    // Total level-2 referrals today\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const f2_time = f2s[i].time;\n      let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n      if (check_f2) f_all_today += 1;\n\n      // Total level-3 referrals today\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code;\n        const f3_time = f3s[i].time;\n        let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n        if (check_f3) f_all_today += 1;\n\n        // Total level-4 referrals today\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code]);\n        for (let i = 0; i < f4s.length; i++) {\n          const f4_code = f4s[i].code;\n          const f4_time = f4s[i].time;\n          let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n          if (check_f4) f_all_today += 1;\n        }\n      }\n    }\n  }\n\n  // Total level-2 referrals\n  let f2 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code;\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    f2 += f2s.length;\n  }\n\n  // Total level-3 referrals\n  let f3 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code;\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      if (f3s.length > 0) f3 += f3s.length;\n    }\n  }\n\n  // Total level-4 referrals\n  let f4 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code;\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code]);\n        if (f4s.length > 0) f4 += f4s.length;\n      }\n    }\n  }\n  let selectedData = [];\n  async function fetchInvitesByCode(code, depth = 1) {\n    if (depth > 6) {\n      return;\n    }\n    const [inviteData] = await connection.query(\"SELECT `id_user`,`name_user`,`phone`, `code`, `invite`, `rank`, `user_level`, `total_money` FROM users WHERE `invite` = ?\", [code]);\n    if (inviteData.length > 0) {\n      for (const invite of inviteData) {\n        selectedData.push(invite);\n        await fetchInvitesByCode(invite.code, depth + 1);\n      }\n    }\n  }\n  if (f1s.length > 0) {\n    for (const initialInfoF1 of f1s) {\n      selectedData.push(initialInfoF1);\n      await fetchInvitesByCode(initialInfoF1.code);\n    }\n  }\n  const rosesF1 = parseFloat(userInfo.roses_f);\n  const rosesAll = parseFloat(userInfo.roses_f1);\n  let rosesAdd = rosesF1 + rosesAll;\n  return res.status(200).json({\n    message: \"Receive success\",\n    level: level,\n    info: user,\n    status: true,\n    invite: {\n      f1: f1s.length,\n      total_f: selectedData.length,\n      f1_today: f1_today,\n      f_all_today: f_all_today,\n      roses_f1: userInfo.roses_f1,\n      roses_f: userInfo.roses_f,\n      roses_all: rosesAdd,\n      roses_today: userInfo.roses_today\n    },\n    timeStamp: timeNow\n  });\n};\nconst myTeam = async (req, res) => {\n  let auth = req.cookies.auth;\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  const [level] = await connection.query(\"SELECT * FROM level\");\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  return res.status(200).json({\n    message: \"Receive success\",\n    level: level,\n    info: user,\n    status: true,\n    timeStamp: timeNow\n  });\n};\nconst listMyTeam = async (req, res) => {\n  let auth = req.cookies.auth;\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let userInfo = user[0];\n  const [f1] = await connection.query(\"SELECT `id_user`, `phone`, `code`, `invite`,`roses_f`, `rank`, `name_user`,`status`,`total_money`, `time` FROM users WHERE `invite` = ? ORDER BY id DESC\", [userInfo.code]);\n  const [mem] = await connection.query(\"SELECT `id_user`, `phone`, `time` FROM users WHERE `invite` = ? ORDER BY id DESC LIMIT 10\", [userInfo.code]);\n  const [total_roses] = await connection.query(\"SELECT `f1`,`invite`, `code`,`phone`,`time` FROM roses WHERE `invite` = ? ORDER BY id DESC LIMIT 10\", [userInfo.code]);\n  const selectedData = [];\n  async function fetchUserDataByCode(code, depth = 1) {\n    if (depth > 6) {\n      return;\n    }\n    const [userData] = await connection.query(\"SELECT `id_user`, `name_user`, `phone`, `code`, `invite`, `rank`, `total_money` FROM users WHERE `invite` = ?\", [code]);\n    if (userData.length > 0) {\n      for (const user of userData) {\n        const [turnoverData] = await connection.query(\"SELECT `phone`, `daily_turn_over`, `total_turn_over` FROM turn_over WHERE `phone` = ?\", [user.phone]);\n        const [inviteCountData] = await connection.query(\"SELECT COUNT(*) as invite_count FROM users WHERE `invite` = ?\", [user.code]);\n        const inviteCount = inviteCountData[0].invite_count;\n        const userObject = {\n          ...user,\n          invite_count: inviteCount,\n          user_level: depth,\n          daily_turn_over: turnoverData[0]?.daily_turn_over || 0,\n          total_turn_over: turnoverData[0]?.total_turn_over || 0\n        };\n        selectedData.push(userObject);\n        await fetchUserDataByCode(user.code, depth + 1);\n      }\n    }\n  }\n  await fetchUserDataByCode(userInfo.code);\n  let newMem = [];\n  mem.map(data => {\n    let objectMem = {\n      id_user: data.id_user,\n      phone: \"91\" + data.phone.slice(0, 1) + \"****\" + String(data.phone.slice(-4)),\n      time: data.time\n    };\n    return newMem.push(objectMem);\n  });\n  return res.status(200).json({\n    message: \"Receive success\",\n    f1: selectedData,\n    f1_direct: f1,\n    mem: newMem,\n    total_roses: total_roses,\n    status: true,\n    timeStamp: timeNow\n  });\n};\nconst wowpay = async (req, res) => {\n  let auth = req.cookies.auth;\n  let money = req.body.money;\n\n  // Fetching the user's mobile number from the database using auth token\n\n  // Your existing controller code here\n};\nconst comissionRecord = async (req, res) => {\n  const auth = req.cookies.auth;\n  const [user] = await connection.execute('SELECT phone FROM users WHERE token = ?', [auth]);\n  if (!user[0]) {\n    return res.status(200).json({\n      message: 'Failed',\n      status: false\n    });\n  }\n  const phone = user[0].phone;\n  const [records] = await connection.execute('SELECT * FROM rebate_record where phone = ?', [phone]);\n  return res.status(200).json({\n    message: 'success',\n    status: true,\n    data: records\n  });\n};\nconst recharge = async (req, res) => {\n  let auth = req.cookies.auth;\n  let money = req.body.money;\n  let type = req.body.type;\n  let typeid = req.body.typeid;\n  const minimumMoney = process.env.MINIMUM_MONEY;\n  if (type != \"cancel\") {\n    if (!auth || !money || money < minimumMoney - 1) {\n      return res.status(200).json({\n        message: \"Failed\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  if (type == \"cancel\") {\n    await connection.query(\"UPDATE recharge SET status = 2 WHERE phone = ? AND id_order = ? AND status = ? \", [userInfo.phone, typeid, 0]);\n    return res.status(200).json({\n      message: \"Cancelled order successfully\",\n      status: true,\n      timeStamp: timeNow\n    });\n  }\n  const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = ? \", [userInfo.phone, 0]);\n  if (recharge.length == 0) {\n    let time = new Date().getTime();\n    const date = new Date();\n    function formateT(params) {\n      let result = params < 10 ? \"0\" + params : params;\n      return result;\n    }\n    function timerJoin(params = \"\", addHours = 0) {\n      let date = \"\";\n      if (params) {\n        date = new Date(Number(params));\n      } else {\n        date = new Date();\n      }\n      date.setHours(date.getHours() + addHours);\n      let years = formateT(date.getFullYear());\n      let months = formateT(date.getMonth() + 1);\n      let days = formateT(date.getDate());\n      let hours = date.getHours() % 12;\n      hours = hours === 0 ? 12 : hours;\n      let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n      let minutes = formateT(date.getMinutes());\n      let seconds = formateT(date.getSeconds());\n      return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n    }\n    let checkTime = timerJoin(time);\n    let id_time = date.getUTCFullYear() + \"\" + date.getUTCMonth() + 1 + \"\" + date.getUTCDate();\n    let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n    // let vat = Math.floor(Math.random() * (2000 - 0 + 1) ) + 0;\n\n    money = Number(money);\n    let client_transaction_id = id_time + id_order;\n    const formData = {\n      username: process.env.accountBank,\n      secret_key: process.env.secret_key,\n      client_transaction: client_transaction_id,\n      amount: money\n    };\n    if (type == \"momo\") {\n      const sql = `INSERT INTO recharge SET \n            id_order = ?,\n            transaction_id = ?,\n            phone = ?,\n            money = ?,\n            type = ?,\n            status = ?,\n            today = ?,\n            url = ?,\n            time = ?`;\n      await connection.execute(sql, [client_transaction_id, \"NULL\", userInfo.phone, money, type, 0, checkTime, \"NULL\", time]);\n      const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = ? \", [userInfo.phone, 0]);\n      return res.status(200).json({\n        message: \"Received successfully\",\n        datas: recharge[0],\n        status: true,\n        timeStamp: timeNow\n      });\n    }\n    const moneyString = money.toString();\n    const apiData = {\n      key: process.env.PAYMENT_KEY,\n      client_txn_id: client_transaction_id,\n      amount: moneyString,\n      p_info: process.env.PAYMENT_INFO,\n      customer_name: userInfo.name_user,\n      customer_email: process.env.PAYMENT_EMAIL,\n      customer_mobile: userInfo.phone,\n      redirect_url: `${process.env.APP_BASE_URL}/wallet/rechargerecord`,\n      udf1: process.env.APP_NAME\n    };\n    try {\n      const apiResponse = await axios.post(\"https://api.ekqr.in/api/create_order\", apiData);\n      if (apiResponse.data.status == true) {\n        const sql = `INSERT INTO recharge SET \n                id_order = ?,\n                transaction_id = ?,\n                phone = ?,\n                money = ?,\n                type = ?,\n                status = ?,\n                today = ?,\n                url = ?,\n                time = ?`;\n        await connection.execute(sql, [client_transaction_id, \"0\", userInfo.phone, money, type, 0, checkTime, \"0\", timeNow]);\n        const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = ? \", [userInfo.phone, 0]);\n        return res.status(200).json({\n          message: \"Received successfully\",\n          datas: recharge[0],\n          payment_url: apiResponse.data.data.payment_url,\n          status: true,\n          timeStamp: timeNow\n        });\n      } else {\n        return res.status(500).json({\n          message: \"Failed to create order\",\n          status: false\n        });\n      }\n    } catch (error) {\n      return res.status(500).json({\n        message: \"API request failed\",\n        status: false\n      });\n    }\n  } else {\n    return res.status(200).json({\n      message: \"Received successfully\",\n      datas: recharge[0],\n      status: true,\n      timeStamp: timeNow\n    });\n  }\n};\nconst cancelRecharge = async (req, res) => {\n  try {\n    let auth = req.cookies.auth;\n    if (!auth) {\n      return res.status(200).json({\n        message: \"Authorization is required to access this API!\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    const [user] = await connection.query(\"SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? \", [auth]);\n    if (!user) {\n      return res.status(200).json({\n        message: \"Authorization is required to access this API!\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    let userInfo = user[0];\n    const result = await connection.query(\"DELETE FROM recharge WHERE phone = ? AND status = ?\", [userInfo.phone, 0]);\n    if (result.affectedRows > 0) {\n      return res.status(200).json({\n        message: \"All the pending recharges has been deleted successfully!\",\n        status: true,\n        timeStamp: timeNow\n      });\n    } else {\n      return res.status(200).json({\n        message: \"There was no pending recharges for this user or delete operation has been failed!\",\n        status: true,\n        timeStamp: timeNow\n      });\n    }\n  } catch (error) {\n    console.error(\"API error: \", error);\n    return res.status(500).json({\n      message: \"API Request failed!\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\nconst addBank = async (req, res) => {\n  let auth = req.cookies.auth;\n  let name_bank = req.body.name_bank;\n  let name_user = req.body.name_user;\n  let stk = req.body.stk;\n  let email = req.body.email;\n  let tinh = req.body.tinh;\n  let time = new Date().getTime();\n  if (!auth || !name_bank || !name_user || !stk || !email || !tinh) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user_bank] = await connection.query(\"SELECT * FROM user_bank WHERE stk = ? \", [stk]);\n  const [user_bank2] = await connection.query(\"SELECT * FROM user_bank WHERE phone = ? \", [userInfo.phone]);\n  if (user_bank.length == 0 && user_bank2.length == 0) {\n    const sql = `INSERT INTO user_bank SET \n        phone = ?,\n        name_bank = ?,\n        name_user = ?,\n        stk = ?,\n        email = ?,\n        tinh = ?,\n        time = ?`;\n    await connection.execute(sql, [userInfo.phone, name_bank, name_user, stk, email, tinh, time]);\n    return res.status(200).json({\n      message: \"Successfully added bank\",\n      status: true,\n      timeStamp: timeNow\n    });\n  } else if (user_bank.length > 0) {\n    await connection.query(\"UPDATE user_bank SET stk = ? WHERE phone = ? \", [stk, userInfo.phone]);\n    return res.status(200).json({\n      message: \"Account number updated in the system\",\n      status: false,\n      timeStamp: timeNow\n    });\n  } else if (user_bank2.length > 0) {\n    await connection.query(\"UPDATE user_bank SET name_bank = ?, name_user = ?, stk = ?, email = ?, tinh = ?, time = ? WHERE phone = ?\", [name_bank, name_user, stk, email, tinh, time, userInfo.phone]);\n    return res.status(200).json({\n      message: \"your account is updated\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\nconst addUpi = async (req, res) => {\n  let auth = req.cookies.auth;\n  let {\n    upi,\n    name\n  } = req.body;\n  let time = new Date().getTime();\n  if (!auth || !upi || !name) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user_bank] = await connection.query(\"SELECT * FROM user_bank WHERE phone = ? \", [userInfo.phone]);\n  if (user_bank.length === 0) {\n    const sql = `INSERT INTO user_bank SET \n      phone = ?,\n      sdt = ?,\n      upi_name = ?,\n      time = ?`;\n    await connection.execute(sql, [userInfo.phone, upi, name, time]);\n    return res.status(200).json({\n      message: \"Successfully added UPI\",\n      status: true,\n      timeStamp: timeNow\n    });\n  } else {\n    const sql = `UPDATE user_bank SET \n      sdt = ?,\n      upi_name = ?,\n      time = ? WHERE\n      phone = ?`;\n    await connection.execute(sql, [upi, name, time, userInfo.phone]);\n    return res.status(200).json({\n      message: \"your account is updated\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\nconst infoUserBank = async (req, res) => {\n  let auth = req.cookies.auth;\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite`, `money`,`win_wallet` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  function formateT(params) {\n    let result = params < 10 ? \"0\" + params : params;\n    return result;\n  }\n  function timerJoin(params = \"\", addHours = 0) {\n    let date = \"\";\n    if (params) {\n      date = new Date(Number(params));\n    } else {\n      date = new Date();\n    }\n    date.setHours(date.getHours() + addHours);\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n    return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n  }\n  let date = new Date().getTime();\n  //    let checkTime = timerJoin(date)\n  //    const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = 1\", [userInfo.phone])\n\n  const [wingoWonResult] = await connection.query(`SELECT SUM(\\`get\\`) AS wingoWonMoney FROM minutes_1 WHERE phone = '${userInfo.phone}'`);\n  const wingoWonMoney = Number(wingoWonResult[0].wingoWonMoney) || 0;\n  const [k3WonResult] = await connection.query(`SELECT SUM(\\`get\\`) AS k3WonMoney FROM result_k3 WHERE phone = '${userInfo.phone}'`);\n  const k3WonMoney = Number(k3WonResult[0].k3WonMoney) || 0;\n  const [G5dWonResult] = await connection.query(`SELECT SUM(\\`get\\`) AS G5dWonMoney FROM result_5d WHERE phone = '${userInfo.phone}'`);\n  const G5dWonMoney = Number(G5dWonResult[0].G5dWonMoney) || 0;\n  const [wingoLossResult] = await connection.query(`SELECT SUM(money) AS wingoLossMoney FROM minutes_1 WHERE phone = '${userInfo.phone}' AND \\`get\\` = 0`);\n  const wingoLossMoney = Number(wingoLossResult[0].wingoLossMoney) || 0;\n  const [k3LossResult] = await connection.query(`SELECT SUM(money) AS k3LossMoney FROM result_k3 WHERE phone = '${userInfo.phone}' AND \\`get\\` = 0`);\n  const k3LossMoney = Number(k3LossResult[0].k3LossMoney) || 0;\n  const [G5LossResult] = await connection.query(`SELECT SUM(money) AS G5dLossMoney FROM result_5d WHERE phone = '${userInfo.phone}' AND \\`get\\` = 0`);\n  const G5dLossMoney = Number(G5LossResult[0].G5dLossMoney) || 0;\n  const [withdrawResult] = await connection.query(`SELECT SUM(money) AS totalWithdraw FROM withdraw WHERE phone = '${userInfo.phone}' AND status = 1`);\n  const totalWithdraw = Number(withdrawResult[0].totalWithdraw) || 0;\n  const [withdrawPendingResult] = await connection.query(`SELECT SUM(money) AS totalWithdrawPending FROM withdraw WHERE phone = '${userInfo.phone}' AND status = 0`);\n  const totalWithdrawPending = Number(withdrawPendingResult[0].totalWithdrawPending) || 0;\n  const totalWon = wingoWonMoney + k3WonMoney + G5dWonMoney;\n  const totalLoss = wingoLossMoney + k3LossMoney + G5dLossMoney;\n  console.log(\"totalWon\", totalWon);\n  console.log(\"totalLoss\", totalLoss);\n  console.log(\"totalWithdraw\", totalWithdraw);\n  console.log(\"totalWithdrawPending\", totalWithdrawPending);\n  const totalMoney = totalWon - totalLoss - totalWithdraw - totalWithdrawPending;\n  console.log(\"totalMoney\", totalMoney);\n  const [userBank] = await connection.query(\"SELECT * FROM user_bank WHERE phone = ? \", [userInfo.phone]);\n  return res.status(200).json({\n    message: \"Received successfully\",\n    datas: userBank,\n    userInfo: user,\n    result: totalMoney,\n    status: true,\n    timeStamp: timeNow\n  });\n};\nconst withdrawal3 = async (req, res) => {\n  let auth = req.cookies.auth;\n  let money = req.body.money;\n  // let password = req.body.password\n  if (!auth || !money || money < 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  console.log(auth, money, \"hello world i am here\");\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite`, `money`,`extra`,`ekyc`,win_wallet FROM users WHERE `token` = ?\", [auth]);\n\n  // if (user.length == 0) {\n  //    return res.status(200).json({\n  //       message: \"incorrect password\",\n  //       status: false,\n  //       timeStamp: timeNow,\n  //    })\n  // }\n  let userInfo = user[0];\n  console.log(userInfo, \"userInfo is here\");\n  const date = new Date();\n  let id_time = date.getUTCFullYear() + \"\" + date.getUTCMonth() + 1 + \"\" + date.getUTCDate();\n  let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n  function formateT(params) {\n    let result = params < 10 ? \"0\" + params : params;\n    return result;\n  }\n  function timerJoin(params = \"\", addHours = 0) {\n    let date = \"\";\n    if (params) {\n      date = new Date(Number(params));\n    } else {\n      date = new Date();\n    }\n    date.setHours(date.getHours() + addHours);\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n    return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n  }\n  let dates = new Date().getTime();\n  let checkTime = timerJoin(dates);\n  const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = 1\", [userInfo?.phone]);\n  const [minutes_1] = await connection.query(\"SELECT * FROM minutes_1 WHERE phone = ?\", [userInfo.phone]);\n  let total = 0;\n  recharge.forEach(data => {\n    total += parseFloat(data.money);\n  });\n  let total2 = 0;\n  minutes_1.forEach(data => {\n    total2 += parseFloat(data.money);\n  });\n  let result = 0;\n  if (total - total2 > 0) result = total - total2;\n  result = Math.max(result, 0);\n  const [user_bank] = await connection.query(\"SELECT * FROM user_bank WHERE `phone` = ?\", [userInfo.phone]);\n  const [withdraw] = await connection.query(\"SELECT * FROM withdraw WHERE `phone` = ? AND today = ?\", [userInfo.phone, checkTime]);\n  if (user_bank.length != 0) {\n    if (withdraw.length < 3) {\n      if (userInfo.win_wallet - money >= 0) {\n        // if (result == 0) {\n        //    if (total - total2 >= 0) {\n        //       if (result == 0) {\n        //          return res.status(200).json({\n        //             message: \"The total bet is not enough to fulfill the request\",\n        //             status: false,\n        //             timeStamp: timeNow,\n        //          })\n        //       }\n        //    } else {\n\n        let infoBank = user_bank[0];\n        const sql = `INSERT INTO withdraw SET \n                    id_order = ?,\n                    phone = ?,\n                    money = ?,\n                    stk = ?,\n                    name_bank = ?,\n                    ifsc = ?,\n                    name_user = ?,\n                    status = ?,\n                    today = ?,\n                    time = ?,\n                    sdt = ?,\n                    tp=?`;\n        await connection.execute(sql, [id_time + \"\" + id_order, userInfo.phone, money, infoBank.stk, infoBank.name_bank, infoBank.email, infoBank.name_user, 0, checkTime, dates, infoBank.sdt, 0]);\n        await connection.query(\"UPDATE users SET win_wallet = win_wallet - ? WHERE phone = ? \", [money, userInfo.phone]);\n        // await connection.query(\"UPDATE users SET extra WHERE phone\",[false,userInfo.phone])\n        console.log(userInfo.extra, \"ghjkl;\");\n        if (userInfo.extra == 0 && userInfo.ekyc == null) {\n          await connection.query(`UPDATE users SET ekyc = false WHERE phone = ?`, [userInfo.phone]);\n        }\n        return res.status(200).json({\n          message: \"Withdrawal successful\",\n          status: true,\n          money: userInfo.money,\n          win_wallet: userInfo.win_wallet - money,\n          timeStamp: timeNow\n        });\n\n        //    }\n        // } \n        // else {\n        //    return res.status(200).json({\n        //       message: \"The total bet is not enough to fulfill the request\",\n        //       status: false,\n        //       timeStamp: timeNow,\n        //    })\n        // }\n      } else {\n        return res.status(200).json({\n          message: \"The balance is not enough to fulfill the request\",\n          status: false,\n          timeStamp: timeNow\n        });\n      }\n    } else {\n      return res.status(200).json({\n        message: \"You can only make 3 withdrawals per day\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n  } else {\n    return res.status(200).json({\n      message: \"Please link your bank first\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\nconst userme = async (req, res) => {\n  let auth = req.cookies.auth;\n  const [user] = await connection.query(\"SELECT `phone`,`money`, `code`,`invite` ,`extra`,`ekyc` FROM users WHERE `token` = ? \", [auth]);\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  res.status(200).json({\n    message: user[0],\n    status: true,\n    timeStamp: timeNow\n  });\n};\nconst transfer = async (req, res) => {\n  let auth = req.cookies.auth;\n  let amount = req.body.amount;\n  let receiver_phone = req.body.phone;\n  const date = new Date();\n  // let id_time = date.getUTCFullYear() + '' + (date.getUTCMonth() + 1) + '' + date.getUTCDate();\n  let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n  let time = new Date().getTime();\n  let client_transaction_id = id_order;\n  const [user] = await connection.query(\"SELECT `phone`,`money`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  let sender_phone = userInfo.phone;\n  let sender_money = parseInt(userInfo.money);\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  function formateT(params) {\n    let result = params < 10 ? \"0\" + params : params;\n    return result;\n  }\n  function timerJoin(params = \"\", addHours = 0) {\n    let date = \"\";\n    if (params) {\n      date = new Date(Number(params));\n    } else {\n      date = new Date();\n    }\n    date.setHours(date.getHours() + addHours);\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n    return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n  }\n  let dates = new Date().getTime();\n  let checkTime = timerJoin(dates);\n  const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = 1 \", [userInfo.phone]);\n  const [minutes_1] = await connection.query(\"SELECT * FROM minutes_1 WHERE phone = ? \", [userInfo.phone]);\n  let total = 0;\n  recharge.forEach(data => {\n    total += data.money;\n  });\n  let total2 = 0;\n  minutes_1.forEach(data => {\n    total2 += data.money;\n  });\n  let result = 0;\n  if (total - total2 > 0) result = total - total2;\n\n  // console.log('date:', result);\n  if (result == 0) {\n    if (sender_money >= amount) {\n      let [receiver] = await connection.query(\"SELECT * FROM users WHERE `phone` = ?\", [receiver_phone]);\n      if (receiver.length === 1 && sender_phone !== receiver_phone) {\n        let money = sender_money - amount;\n        let total_money = amount + receiver[0].total_money;\n        // await connection.query('UPDATE users SET money = ? WHERE phone = ?', [money, sender_phone]);\n        // await connection.query(`UPDATE users SET money = money + ? WHERE phone = ?`, [amount, receiver_phone]);\n        const sql = \"INSERT INTO balance_transfer (sender_phone, receiver_phone, amount) VALUES (?, ?, ?)\";\n        await connection.execute(sql, [sender_phone, receiver_phone, amount]);\n        const sql_recharge = \"INSERT INTO recharge (id_order, transaction_id, phone, money, type, status, today, url, time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\";\n        await connection.execute(sql_recharge, [client_transaction_id, 0, receiver_phone, amount, \"wallet\", 0, checkTime, 0, time]);\n        return res.status(200).json({\n          message: `Requested ${amount} sent successfully`,\n          status: true,\n          timeStamp: timeNow\n        });\n      } else {\n        return res.status(200).json({\n          message: `${receiver_phone} is not a valid user mobile number`,\n          status: false,\n          timeStamp: timeNow\n        });\n      }\n    } else {\n      return res.status(200).json({\n        message: \"Your balance is not enough\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n  } else {\n    return res.status(200).json({\n      message: \"The total bet is not enough to fulfill the request\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\n\n// get transfer balance data\nconst transferHistory = async (req, res) => {\n  let auth = req.cookies.auth;\n  const [user] = await connection.query(\"SELECT `phone`,`money`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [history] = await connection.query(\"SELECT * FROM balance_transfer WHERE sender_phone = ?\", [userInfo.phone]);\n  const [receive] = await connection.query(\"SELECT * FROM balance_transfer WHERE receiver_phone = ?\", [userInfo.phone]);\n  if (receive.length > 0 || history.length > 0) {\n    return res.status(200).json({\n      message: \"Success\",\n      receive: receive,\n      datas: history,\n      status: true,\n      timeStamp: timeNow\n    });\n  }\n};\nconst recharge2 = async (req, res) => {\n  let auth = req.cookies.auth;\n  let money = req.body.money;\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = ? \", [userInfo.phone, 0]);\n  const [bank_recharge] = await connection.query(\"SELECT * FROM bank_recharge\");\n  if (recharge.length != 0) {\n    return res.status(200).json({\n      message: \"Received successfully\",\n      datas: recharge[0],\n      infoBank: bank_recharge,\n      status: true,\n      timeStamp: timeNow\n    });\n  } else {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\nconst listRecharge = async (req, res) => {\n  let auth = req.cookies.auth;\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC \", [userInfo.phone]);\n  return res.status(200).json({\n    message: \"Receive success\",\n    datas: recharge,\n    status: true,\n    timeStamp: timeNow\n  });\n};\nconst search = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.body.phone;\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite`, `level` FROM users WHERE `token` = ? \", [auth]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let userInfo = user[0];\n  if (userInfo.level == 1) {\n    const [users] = await connection.query(`SELECT * FROM users WHERE phone = ? ORDER BY id DESC `, [phone]);\n    return res.status(200).json({\n      message: \"Receive success\",\n      datas: users,\n      status: true,\n      timeStamp: timeNow\n    });\n  } else if (userInfo.level == 2) {\n    const [users] = await connection.query(`SELECT * FROM users WHERE phone = ? ORDER BY id DESC `, [phone]);\n    if (users.length == 0) {\n      return res.status(200).json({\n        message: \"Receive success\",\n        datas: [],\n        status: true,\n        timeStamp: timeNow\n      });\n    } else {\n      if (users[0].ctv == userInfo.phone) {\n        return res.status(200).json({\n          message: \"Receive success\",\n          datas: users,\n          status: true,\n          timeStamp: timeNow\n        });\n      } else {\n        return res.status(200).json({\n          message: \"Failed\",\n          status: false,\n          timeStamp: timeNow\n        });\n      }\n    }\n  } else {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\nconst listWithdraw = async (req, res) => {\n  let auth = req.cookies.auth;\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [recharge] = await connection.query(\"SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC \", [userInfo.phone]);\n  return res.status(200).json({\n    message: \"Receive success\",\n    datas: recharge,\n    status: true,\n    timeStamp: timeNow\n  });\n};\nconst useRedenvelope = async (req, res) => {\n  let auth = req.cookies.auth;\n  let code = req.body.code;\n  if (!auth || !code) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [redenvelopes] = await connection.query(\"SELECT * FROM redenvelopes WHERE id_redenvelope = ?\", [code]);\n  if (redenvelopes.length == 0) {\n    return res.status(200).json({\n      message: \"Redemption code error\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [used_code] = await connection.query('SELECT * from redenvelopes_used WHERE phone_used = ? AND id_redenvelops = ?', [userInfo.phone, code]);\n  if (used_code[0]) {\n    return res.status(200).json({\n      message: \"You have already used this redemption code\",\n      status: false,\n      timeStamp: timeNow\n    });\n  } else {\n    let infoRe = redenvelopes[0];\n    const d = new Date();\n    const time = d.getTime();\n    if (infoRe.status == 0) {\n      if (infoRe.used === 1) {\n        await connection.query(\"UPDATE redenvelopes SET used = ?, status = ? WHERE `id_redenvelope` = ? \", [0, 1, infoRe.id_redenvelope]);\n      } else {\n        await connection.query(\"UPDATE redenvelopes SET used = ?, status = ? WHERE `id_redenvelope` = ? \", [infoRe.used - 1, 0, infoRe.id_redenvelope]);\n      }\n      await connection.query(\"UPDATE users SET money = money + ? WHERE `phone` = ? \", [infoRe.money, userInfo.phone]);\n      let sql = \"INSERT INTO redenvelopes_used SET phone = ?, phone_used = ?, id_redenvelops = ?, money = ?, `time` = ? \";\n      await connection.query(sql, [infoRe.phone, userInfo.phone, infoRe.id_redenvelope, infoRe.money, time]);\n      return res.status(200).json({\n        message: `Received successfully +${infoRe.money}`,\n        status: true,\n        timeStamp: timeNow\n      });\n    } else {\n      return res.status(200).json({\n        message: \"Gift code expired\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n  }\n};\nconst callback_bank = async (req, res) => {\n  let transaction_id = req.body.transaction_id;\n  let client_transaction_id = req.body.client_transaction_id;\n  let amount = req.body.amount;\n  let requested_datetime = req.body.requested_datetime;\n  let expired_datetime = req.body.expired_datetime;\n  let payment_datetime = req.body.payment_datetime;\n  let status = req.body.status;\n  if (!transaction_id) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  if (status == 2) {\n    await connection.query(`UPDATE recharge SET status = 1 WHERE id_order = ?`, [client_transaction_id]);\n    const [info] = await connection.query(`SELECT * FROM recharge WHERE id_order = ?`, [client_transaction_id]);\n    await connection.query(\"UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? \", [info[0].money, info[0].money, info[0].phone]);\n    return res.status(200).json({\n      message: 0,\n      status: true\n    });\n  } else {\n    await connection.query(`UPDATE recharge SET status = 2 WHERE id = ?`, [id]);\n    return res.status(200).json({\n      message: \"Cancellation successful\",\n      status: true,\n      datas: recharge\n    });\n  }\n};\nconst confirmRecharge = async (req, res) => {\n  let auth = req.cookies.auth;\n  //let money = req.body.money;\n  //let paymentUrl = req.body.payment_url;\n  let client_txn_id = req.body?.client_txn_id;\n  if (!client_txn_id) {\n    return res.status(200).json({\n      message: \"client_txn_id is required\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = ? \", [userInfo.phone, 0]);\n  if (recharge.length != 0) {\n    const rechargeData = recharge[0];\n    const date = new Date(rechargeData.today);\n    const dd = String(date.getDate()).padStart(2, \"0\");\n    const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n    const yyyy = date.getFullYear();\n    const formattedDate = `${dd}-${mm}-${yyyy}`;\n    const apiData = {\n      key: process.env.PAYMENT_KEY,\n      client_txn_id: client_txn_id,\n      txn_date: formattedDate\n    };\n    try {\n      const apiResponse = await axios.post(\"https://api.ekqr.in/api/check_order_status\", apiData);\n      console.log(apiResponse.data);\n      const apiRecord = apiResponse.data.data;\n      if (apiRecord.status === \"scanning\") {\n        return res.status(200).json({\n          message: \"Waiting for confirmation\",\n          status: false,\n          timeStamp: timeNow\n        });\n      }\n      if (apiRecord.client_txn_id === rechargeData.id_order && apiRecord.customer_mobile === rechargeData.phone && apiRecord.amount === rechargeData.money) {\n        if (apiRecord.status === \"success\") {\n          await connection.query(`UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n          // const [code] = await connection.query(`SELECT invite, total_money from users WHERE phone = ?`, [apiRecord.customer_mobile]);\n          // const [data] = await connection.query('SELECT recharge_bonus_2, recharge_bonus FROM admin WHERE id = 1');\n          // let selfBonus = info[0].money * (data[0].recharge_bonus_2 / 10);\n          // let money = info[0].money + selfBonus;\n          let money = apiRecord.amount;\n          await connection.query(\"UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? \", [money, money, apiRecord.customer_mobile]);\n          // let rechargeBonus;\n          // if (code[0].total_money <= 0) {\n          //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus / 10);\n          // }\n          // else {\n          //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus_2 / 10);\n          //\n          // const percent = rechargeBonus;\n          // await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE code = ?', [money, money, code[0].invite]);\n\n          return res.status(200).json({\n            message: \"Successful application confirmation\",\n            status: true,\n            datas: recharge\n          });\n        } else if (apiRecord.status === \"failure\" || apiRecord.status === \"close\") {\n          console.log(apiRecord.status);\n          await connection.query(`UPDATE recharge SET status = 2 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n          return res.status(200).json({\n            message: \"Payment failure\",\n            status: true,\n            timeStamp: timeNow\n          });\n        }\n      } else {\n        return res.status(200).json({\n          message: \"Mismtach data\",\n          status: true,\n          timeStamp: timeNow\n        });\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  } else {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\nconst confirmUSDTRecharge = async (req, res) => {\n  console.log(res?.body);\n  console.log(res?.query);\n  console.log(res?.cookies);\n  // let auth = req.cookies.auth;\n  // //let money = req.body.money;\n  // //let paymentUrl = req.body.payment_url;\n  // let client_txn_id = req.body?.client_txn_id;\n\n  // if (!client_txn_id) {\n  //     return res.status(200).json({\n  //         message: 'client_txn_id is required',\n  //         status: false,\n  //         timeStamp: timeNow,\n  //     })\n  // }\n\n  // if (!auth) {\n  //     return res.status(200).json({\n  //         message: 'Failed',\n  //         status: false,\n  //         timeStamp: timeNow,\n  //     })\n  // }\n\n  // const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n  // let userInfo = user[0];\n\n  // if (!user) {\n  //     return res.status(200).json({\n  //         message: 'Failed',\n  //         status: false,\n  //         timeStamp: timeNow,\n  //     });\n  // };\n\n  // const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n\n  // if (recharge.length != 0) {\n  //     const rechargeData = recharge[0];\n  //     const date = new Date(rechargeData.today);\n  //     const dd = String(date.getDate()).padStart(2, '0');\n  //     const mm = String(date.getMonth() + 1).padStart(2, '0');\n  //     const yyyy = date.getFullYear();\n  //     const formattedDate = `${dd}-${mm}-${yyyy}`;\n  //     const apiData = {\n  //         key: process.env.PAYMENT_KEY,\n  //         client_txn_id: client_txn_id,\n  //         txn_date: formattedDate,\n  //     };\n  //     try {\n  //         const apiResponse = await axios.post('https://api.ekqr.in/api/check_order_status', apiData);\n  //         const apiRecord = apiResponse.data.data;\n  //         if (apiRecord.status === \"scanning\") {\n  //             return res.status(200).json({\n  //                 message: 'Waiting for confirmation',\n  //                 status: false,\n  //                 timeStamp: timeNow,\n  //             });\n  //         }\n  //         if (apiRecord.client_txn_id === rechargeData.id_order && apiRecord.customer_mobile === rechargeData.phone && apiRecord.amount === rechargeData.money) {\n  //             if (apiRecord.status === 'success') {\n  //                 await connection.query(`UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n  //                 // const [code] = await connection.query(`SELECT invite, total_money from users WHERE phone = ?`, [apiRecord.customer_mobile]);\n  //                 // const [data] = await connection.query('SELECT recharge_bonus_2, recharge_bonus FROM admin WHERE id = 1');\n  //                 // let selfBonus = info[0].money * (data[0].recharge_bonus_2 / 10);\n  //                 // let money = info[0].money + selfBonus;\n  //                 let money = apiRecord.amount;\n  //                 await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? ', [money, money, apiRecord.customer_mobile]);\n  //                 // let rechargeBonus;\n  //                 // if (code[0].total_money <= 0) {\n  //                 //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus / 10);\n  //                 // }\n  //                 // else {\n  //                 //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus_2 / 10);\n  //                 // }\n  //                 // const percent = rechargeBonus;\n  //                 // await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE code = ?', [money, money, code[0].invite]);\n\n  //                 return res.status(200).json({\n  //                     message: 'Successful application confirmation',\n  //                     status: true,\n  //                     datas: recharge,\n  //                 });\n  //             } else if (apiRecord.status === 'failure' || apiRecord.status === 'close') {\n  //                 console.log(apiRecord.status)\n  //                 await connection.query(`UPDATE recharge SET status = 2 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n  //                 return res.status(200).json({\n  //                     message: 'Payment failure',\n  //                     status: true,\n  //                     timeStamp: timeNow,\n  //                 });\n  //             }\n  //         } else {\n  //             return res.status(200).json({\n  //                 message: 'Mismtach data',\n  //                 status: true,\n  //                 timeStamp: timeNow,\n  //             });\n  //         }\n  //     } catch (error) {\n  //         console.error(error);\n  //     }\n  // } else {\n  //     return res.status(200).json({\n  //         message: 'Failed',\n  //         status: false,\n  //         timeStamp: timeNow,\n  //     });\n  // }\n};\nconst updateRecharge = async (req, res) => {\n  let auth = req.cookies.auth;\n  let money = req.body.money;\n  let order_id = req.body.id_order;\n  let data = req.body.inputData;\n\n  // if (type != 'upi') {\n  //     if (!auth || !money || money < 300) {\n  //         return res.status(200).json({\n  //             message: 'upi failed',\n  //             status: false,\n  //             timeStamp: timeNow,\n  //         })\n  //     }\n  // }\n  const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth]);\n  let userInfo = user[0];\n  if (!user) {\n    return res.status(200).json({\n      message: \"user not found\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [utr] = await connection.query(\"SELECT * FROM recharge WHERE `utr` = ? \", [data]);\n  let utrInfo = utr[0];\n  if (!utrInfo) {\n    await connection.query(\"UPDATE recharge SET utr = ? WHERE phone = ? AND id_order = ?\", [data, userInfo.phone, order_id]);\n    return res.status(200).json({\n      message: \"UTR updated\",\n      status: true,\n      timeStamp: timeNow\n    });\n  } else {\n    return res.status(200).json({\n      message: \"UTR is already in use\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\nconst partnerData = async (req, res) => {\n  const now = new Date();\n  const tenDaysAgo = new Date(now.getTime() - 10 * 24 * 60 * 60 * 1000);\n  const startOfDay = new Date(tenDaysAgo.setHours(0, 0, 0, 0)).getTime();\n  const endOfDay = now.getTime();\n  const timeNow = now.toISOString();\n  const auth = req.cookies.auth;\n  const [user] = await connection.execute('SELECT code FROM users WHERE token = ?', [auth]);\n  if (!user[0]) {\n    return res.status(200).json({\n      message: \"FAILED\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [members] = await connection.execute(`SELECT phone, time \n       FROM users \n       WHERE invite = ? \n       AND CAST(time AS UNSIGNED) BETWEEN ? AND ?`, [user[0].code, startOfDay, endOfDay]);\n  if (members.length === 0) {\n    return res.status(200).json({\n      message: \"No members found\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let data = [];\n  await Promise.all(members.map(async val => {\n    const [recharge] = await connection.execute('SELECT * FROM recharge WHERE phone = ? ORDER BY CAST(time AS UNSIGNED) ASC', [val.phone]);\n    let firstRecharge = recharge[0]?.money || 0;\n    let secondRecharge = recharge[1]?.money || 0;\n    let thirdRecharge = recharge[2]?.money || 0;\n    let totalRecharge = recharge.reduce((acc, val) => acc + val.money, 0);\n    let phone = val.phone;\n    const date = new Date(parseInt(val.time));\n    const time = date.toLocaleString();\n    data.push({\n      firstRecharge,\n      secondRecharge,\n      thirdRecharge,\n      totalRecharge,\n      phone,\n      time\n    });\n  }));\n  return res.status(200).json({\n    message: \"success\",\n    status: true,\n    timeStamp: timeNow,\n    data: data\n  });\n};\nmodule.exports = {\n  userInfo,\n  changeUser,\n  promotion,\n  myTeam,\n  wowpay,\n  recharge,\n  recharge2,\n  listRecharge,\n  listWithdraw,\n  changePassword,\n  checkInHandling,\n  infoUserBank,\n  addBank,\n  addUpi,\n  withdrawal3,\n  transfer,\n  transferHistory,\n  callback_bank,\n  listMyTeam,\n  verifyCode,\n  aviator,\n  useRedenvelope,\n  search,\n  updateRecharge,\n  confirmRecharge,\n  cancelRecharge,\n  confirmUSDTRecharge,\n  checkInData,\n  checkInRecord,\n  weeklyClaim,\n  activityRecords,\n  comissionRecord,\n  partnerData,\n  partnerData,\n  userme\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["connection","require","jwt","md5","request","axios","timeNow","Date","now","randomNumber","min","max","String","Math","floor","random","verifyCode","req","res","auth","cookies","getTime","timeEnd","otp","conswit","rows","query","status","json","message","timeStamp","user","time_otp","phone","error","response","body","data","JSON","parse","code","execute","aviator","redirect","userInfo","recharge","totalRecharge","forEach","money","withdraw","totalWithdraw","id","password","ip","veri","ip_address","time","token","others","id_user","name_user","phone_user","money_user","win_wallet","changeUser","name","type","changePassword","newPassWord","length","attendance","checkInHandling","console","log","point_list","datas","currentDate","startTime","getFullYear","getMonth","getDate","today_daily","daily_today","daily_prev","total_recharge","reduce","acc","val","point_lists","get","newData","total1","weeklyClaim","index","amount","deposit","weeklyClaimedArray","weekly_claimed","split","map","Number","updatedWeeklyClaimedString","join","activityRecords","records","formateT","params","result","timerJoin","addHours","date","setHours","getHours","years","months","days","hours","ampm","minutes","getMinutes","seconds","getSeconds","checkInData","checkInRecord","Data","promotion","level","f1s","f1_today","i","f1_time","check","f_all_today","f1_code","check_f1","f2s","f2_code","f2_time","check_f2","f3s","f3_code","f3_time","check_f3","f4s","f4_code","f4_time","check_f4","f2","f3","f4","selectedData","fetchInvitesByCode","depth","inviteData","invite","push","initialInfoF1","rosesF1","parseFloat","roses_f","rosesAll","roses_f1","rosesAdd","info","f1","total_f","roses_all","roses_today","myTeam","listMyTeam","mem","total_roses","fetchUserDataByCode","userData","turnoverData","inviteCountData","inviteCount","invite_count","userObject","user_level","daily_turn_over","total_turn_over","newMem","objectMem","slice","f1_direct","wowpay","comissionRecord","typeid","minimumMoney","process","env","MINIMUM_MONEY","checkTime","id_time","getUTCFullYear","getUTCMonth","getUTCDate","id_order","client_transaction_id","formData","username","accountBank","secret_key","client_transaction","sql","moneyString","toString","apiData","key","PAYMENT_KEY","client_txn_id","p_info","PAYMENT_INFO","customer_name","customer_email","PAYMENT_EMAIL","customer_mobile","redirect_url","APP_BASE_URL","udf1","APP_NAME","apiResponse","post","payment_url","cancelRecharge","affectedRows","addBank","name_bank","stk","email","tinh","user_bank","user_bank2","addUpi","upi","infoUserBank","wingoWonResult","wingoWonMoney","k3WonResult","k3WonMoney","G5dWonResult","G5dWonMoney","wingoLossResult","wingoLossMoney","k3LossResult","k3LossMoney","G5LossResult","G5dLossMoney","withdrawResult","withdrawPendingResult","totalWithdrawPending","totalWon","totalLoss","totalMoney","userBank","withdrawal3","dates","minutes_1","total","total2","infoBank","sdt","extra","ekyc","userme","transfer","receiver_phone","sender_phone","sender_money","parseInt","receiver","total_money","sql_recharge","transferHistory","history","receive","recharge2","bank_recharge","listRecharge","search","users","ctv","listWithdraw","useRedenvelope","redenvelopes","used_code","infoRe","d","used","id_redenvelope","callback_bank","transaction_id","requested_datetime","expired_datetime","payment_datetime","confirmRecharge","rechargeData","today","dd","padStart","mm","yyyy","formattedDate","txn_date","apiRecord","confirmUSDTRecharge","updateRecharge","order_id","inputData","utr","utrInfo","partnerData","tenDaysAgo","startOfDay","endOfDay","toISOString","members","Promise","all","firstRecharge","secondRecharge","thirdRecharge","toLocaleString","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["userController.js"],"sourcesContent":["const connection = require(\"../config/connectDB\")\nconst jwt = require(\"jsonwebtoken\")\nconst md5 = require(\"md5\")\nconst request = require(\"request\")\n\nconst axios = require(\"axios\")\nlet timeNow = Date.now()\n\nconst randomNumber = (min, max) => {\n   return String(Math.floor(Math.random() * (max - min + 1)) + min)\n}\n\nconst verifyCode = async (req, res) => {\n   let auth = req.cookies.auth\n   let now = new Date().getTime()\n   let timeEnd = +new Date() + 1000 * (60 * 2 + 0) + 500\n   let otp = randomNumber(100000, 999999)\n\n   conswit[rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? \", [auth])\n   if (!rows) {\n      return res.status(200).json({\n         message: \"Account does not exist\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   let user = rows[0]\n   if (user.time_otp - now <= 0) {\n      request(`http://47.243.168.18:9090/sms/batch/v2?appkey=NFJKdK&appsecret=brwkTw&phone=84${user.phone}&msg=Your verification code is ${otp}&extend=${now}`, async (error, response, body) => {\n         let data = JSON.parse(body)\n         if (data.code == \"00000\") {\n            await connection.execute(\"UPDATE users SET otp = ?, time_otp = ? WHERE phone = ? \", [otp, timeEnd, user.phone])\n            return res.status(200).json({\n               message: \"Submitted successfully\",\n               status: true,\n               timeStamp: timeNow,\n               timeEnd: timeEnd,\n            })\n         }\n      })\n   } else {\n      return res.status(200).json({\n         message: \"Send SMS regularly.\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n}\n\nconst aviator = async (req, res) => {\n   let auth = req.cookies.auth;\n   res.redirect(`https://jetx.airportcar.in/theninja/src/api/userapi.php?action=loginandregisterbyauth&token=${auth}`);\n   //res.redirect(https://jetx.airportcar.in/#/jet/loginbyauth/${auth});\n}\n\nconst userInfo = async (req, res) => {\n   let auth = req.cookies.auth\n\n   if (!auth) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? \", [auth])\n\n   if (!rows) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE `phone` = ? AND status = 1\", [rows[0].phone])\n   let totalRecharge = 0\n   recharge.forEach(data => {\n      totalRecharge += data.money\n   })\n   const [withdraw] = await connection.query(\"SELECT * FROM withdraw WHERE `phone` = ? AND status = 1\", [rows[0].phone])\n   let totalWithdraw = 0\n   withdraw.forEach(data => {\n      totalWithdraw += data.money\n   })\n\n   const { id, password, ip, veri, ip_address, status, time, token, ...others } = rows[0]\n   return res.status(200).json({\n      message: \"Success\",\n      status: true,\n      data: {\n         code: others.code,\n         id_user: others.id_user,\n         name_user: others.name_user,\n         phone_user: others.phone,\n         money_user: others.money,\n         win_wallet:others.win_wallet\n      },\n      totalRecharge: totalRecharge,\n      totalWithdraw: totalWithdraw,\n      timeStamp: timeNow,\n   })\n}\n\nconst changeUser = async (req, res) => {\n   let auth = req.cookies.auth\n   let name = req.body.name\n   let type = req.body.type\n\n   const [rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? \", [auth])\n   if (!rows || !type || !name)\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   switch (type) {\n      case \"editname\":\n         await connection.query(\"UPDATE users SET name_user = ? WHERE `token` = ? \", [name, auth])\n         return res.status(200).json({\n            message: \"Username modification successful\",\n            status: true,\n            timeStamp: timeNow,\n         })\n         break\n\n      default:\n         return res.status(200).json({\n            message: \"Failed\",\n            status: false,\n            timeStamp: timeNow,\n         })\n         break\n   }\n}\n\nconst changePassword = async (req, res) => {\n   let auth = req.cookies.auth\n   let password = req.body.password\n   let newPassWord = req.body.newPassWord\n   // let otp = req.body.otp;\n\n   if (!password || !newPassWord)\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   const [rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? AND `password` = ? \", [auth, md5(password)])\n   if (rows.length == 0)\n      return res.status(200).json({\n         message: \"Incorrect password\",\n         status: false,\n         timeStamp: timeNow,\n      })\n\n   // let getTimeEnd = Number(rows[0].time_otp);\n   // let tet = new Date(getTimeEnd).getTime();\n   // var now = new Date().getTime();\n   // var timeRest = tet - now;\n   // if (timeRest <= 0) {\n   //     return res.status(200).json({\n   //         message: 'MÃ£ OTP ÄÃ£ háº¿t hiá»u lá»±c',\n   //         status: false,\n   //         timeStamp: timeNow,\n   //     });\n   // }\n\n   // const [check_otp] = await connection.query('SELECT * FROM users WHERE `token` = ? AND `password` = ? AND otp = ? ', [auth, md5(password), otp]);\n   // if(check_otp.length == 0) return res.status(200).json({\n   //     message: 'MÃ£ OTP khÃ´ng chÃ­nh xÃ¡c',\n   //     status: false,\n   //     timeStamp: timeNow,\n   // });;\n\n   await connection.query(\"UPDATE users SET otp = ?, password = ?, plain_password = ? WHERE `token` = ? \", [randomNumber(100000, 999999), md5(newPassWord), newPassWord, auth])\n   return res.status(200).json({\n      message: \"Password modification successful\",\n      status: true,\n      timeStamp: timeNow,\n   })\n}\n\nconst attendance = {\n   1: 200,\n   2: 1000,\n   3: 3000,\n   4: 9000,\n   5: 20000,\n   6: 60000,\n   7: 200000\n}\n\nconst checkInHandling = async (req, res) => {\n   let auth = req.cookies.auth\n   let data = req.body.data\n   console.log(data, 'data')\n\n   if (!auth)\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   const [rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? \", [auth])\n   if (!rows)\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   if (!data) {\n      const [point_list] = await connection.query(\"SELECT * FROM point_list WHERE `phone` = ? \", [rows[0].phone])\n      return res.status(200).json({\n         message: \"No More Data\",\n         datas: point_list,\n         status: true,\n         timeStamp: timeNow,\n      })\n   }\n\n   const currentDate = new Date();\n\n   const startTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - (rows[0].today_daily - 1), 0, 1).getTime();\n\n   const query = `\n    SELECT *\n    FROM recharge\n    WHERE status = 1\n      AND phone = ?\n      AND time > ?\n`;\n\n   const [recharge] = await connection.execute(query, [rows[0].phone, startTime]);\n\n   if(data>rows[0].daily_today){\n      return res.status(200).json({\n         message: \"Invalid Option!\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   if(data<rows[0].daily_today || rows[0].daily_prev === rows[0].daily_today){\n      return res.status(200).json({\n         message: \"Already Claimed!\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   else{\n      const total_recharge = recharge.reduce((acc,val)=>acc+val.money,0);\n   if(total_recharge>=attendance[data]){\n      const [point_lists] = await connection.query(\"SELECT * FROM point_list WHERE `phone` = ? \", [rows[0].phone])\n      const point_list = point_lists[0];\n      const get = point_list[`total${data}`];\n      await connection.query(\"UPDATE users SET win_wallet = win_wallet + ?,daily_prev = daily_prev + ? WHERE phone = ? \", [get,1, rows[0].phone]);\n      console.log(rows[0].phone,'phone')\n     const [newData] = await connection.query('INSERT INTO attendance_record SET phone = ? , amount = ? , day = ?',[rows[0].phone,get,data]);\n     console.log(newData,'newaData');\n     return res.status(200).json({\n      message: `You just received â¹ ${point_list.total1}.00`,\n      status: true,\n      timeStamp: timeNow,\n   })\n   }\n   else{\n      return res.status(200).json({\n         message: `recharge Rs ${attendance[data]-total_recharge} to claim the rewaord`,\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   }\n   \n}\n\nconst weeklyClaim = async(req,res)=>{\n   const auth = req.cookies.auth;\n   const index = req.body.index;\n   const amount = req.body.amount;\n   const deposit = req.body.deposit;\n   console.log(auth,index,amount,deposit,'req')\n\n   const [rows] = await connection.query('SELECT * FROM users WHERE token = ?',[auth]);\n   console.log(rows,'step1')\n\n   if(index>6 || !rows[0]){\n      return res.status(200).json({\n         message:'FAILED!',\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   await connection.execute('INSERT INTO weekly_report SET amount = ?,bonus = ?,phone = ?',[deposit,amount,rows[0].phone]);\n   console.log('step2')\n\n\n   let weeklyClaimedArray = rows[0].weekly_claimed.split(',').map(Number);\n   console.log(weeklyClaimedArray,'preArray')\n   if(weeklyClaimedArray[index]==1){\n      return res.status(200).json({\n         message:'Already Claimed!',\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   weeklyClaimedArray[index] = 1;\n   console.log(weeklyClaimedArray,'postArray')\n   const updatedWeeklyClaimedString = weeklyClaimedArray.join(',');\n   console.log(updatedWeeklyClaimedString,'updated string')\n   await connection.execute('UPDATE users SET weekly_claimed = ?,win_wallet = win_wallet + ? WHERE token = ?', [updatedWeeklyClaimedString,amount,auth]);\n   console.log('step3')\n\n   \n   return res.status(200).json({\n      message: `You Have Received ${amount} Successfully`,\n      status: true,\n      timeStamp: timeNow,\n   })\n  \n}\n\nconst activityRecords = async (req,res)=>{\n   const auth = req.cookies.auth;\n   const [user] = await connection.execute('SELECT * FROM users WHERE token = ?',[auth]);\n   if(!user[0]){\n      return res.status(200).json({\n         message:'FAILED!',\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   const [records] = await connection.execute('SELECT * FROM weekly_report WHERE phone=?',[user[0].phone]);\n\n   return res.status(200).json({\n      message:'success',\n      status: true,\n      data:records,\n      timeStamp: timeNow,\n   })\n}\n\nfunction formateT(params) {\n   let result = params < 10 ? \"0\" + params : params\n   return result\n}\n\nfunction timerJoin(params = \"\", addHours = 0) {\n   let date = \"\"\n   if (params) {\n      date = new Date(Number(params))\n   } else {\n      date = new Date()\n   }\n\n   date.setHours(date.getHours() + addHours)\n\n   let years = formateT(date.getFullYear())\n   let months = formateT(date.getMonth() + 1)\n   let days = formateT(date.getDate())\n\n   let hours = date.getHours() % 12\n   hours = hours === 0 ? 12 : hours\n   let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\n\n   let minutes = formateT(date.getMinutes())\n   let seconds = formateT(date.getSeconds())\n\n   return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\n}\n\nconst checkInData = async (req,res)=>{\n   let auth = req.cookies.auth;\n   let [user] = await connection.query('SELECT * from users WHERE token = ?',[auth]);\n   if(!user[0]){\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   else{\n      const currentDate = new Date();\n\n      const startTime = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - (user[0].today_daily - 1), 0, 1).getTime();\n   \n      const query = `\n       SELECT *\n       FROM recharge\n       WHERE status = 1\n         AND phone = ?\n         AND time > ?\n   `;\n   \n      const [recharge] = await connection.execute(query, [user[0].phone, startTime]);\n      const total_recharge = recharge.reduce((acc,val)=>acc+val.money,0);\n      return res.status(200).json({\n         message:\"success\",\n         status:true,\n         data:user[0],\n         recharge:total_recharge,\n         timeStamp:timeNow\n      })\n   }\n}\n\nconst checkInRecord = async (req,res)=>{\n   let auth = req.cookies.auth;\n   let [user] = await connection.query('SELECT phone from users WHERE token = ?',[auth]);\n   if(!user[0]){\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   else{\n     let [Data] = await connection.query('SELECT * from attendance_record WHERE phone = ?',[user[0].phone])\n     return res.status(200).json({\n      message:\"success\",\n      status:true,\n      data:Data,\n      timeStamp:timeNow\n     })\n      \n   }\n}\n\nconst promotion = async (req, res) => {\n   let auth = req.cookies.auth\n   if (!auth) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite`, `roses_f`, `roses_f1`, `roses_today` FROM users WHERE `token` = ? \", [auth])\n   const [level] = await connection.query(\"SELECT * FROM level\")\n\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   let userInfo = user[0]\n\n   // Directly referred level-1 users\n   const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code])\n\n   // Directly referred users today\n   let f1_today = 0\n   for (let i = 0; i < f1s.length; i++) {\n      const f1_time = f1s[i].time\n      let check = timerJoin(f1_time) == timerJoin() ? true : false\n      if (check) {\n         f1_today += 1\n      }\n   }\n\n   // All direct referrals today\n   let f_all_today = 0\n   for (let i = 0; i < f1s.length; i++) {\n      const f1_code = f1s[i].code\n      const f1_time = f1s[i].time\n      let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false\n      if (check_f1) f_all_today += 1\n\n      // Total level-2 referrals today\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code])\n      for (let i = 0; i < f2s.length; i++) {\n         const f2_code = f2s[i].code\n         const f2_time = f2s[i].time\n         let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false\n         if (check_f2) f_all_today += 1\n\n         // Total level-3 referrals today\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code])\n         for (let i = 0; i < f3s.length; i++) {\n            const f3_code = f3s[i].code\n            const f3_time = f3s[i].time\n            let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false\n            if (check_f3) f_all_today += 1\n\n            // Total level-4 referrals today\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code])\n            for (let i = 0; i < f4s.length; i++) {\n               const f4_code = f4s[i].code\n               const f4_time = f4s[i].time\n               let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false\n               if (check_f4) f_all_today += 1\n            }\n         }\n      }\n   }\n\n   // Total level-2 referrals\n   let f2 = 0\n   for (let i = 0; i < f1s.length; i++) {\n      const f1_code = f1s[i].code\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\n      f2 += f2s.length\n   }\n\n   // Total level-3 referrals\n   let f3 = 0\n   for (let i = 0; i < f1s.length; i++) {\n      const f1_code = f1s[i].code\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\n      for (let i = 0; i < f2s.length; i++) {\n         const f2_code = f2s[i].code\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\n         if (f3s.length > 0) f3 += f3s.length\n      }\n   }\n\n   // Total level-4 referrals\n   let f4 = 0\n   for (let i = 0; i < f1s.length; i++) {\n      const f1_code = f1s[i].code\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\n      for (let i = 0; i < f2s.length; i++) {\n         const f2_code = f2s[i].code\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\n         for (let i = 0; i < f3s.length; i++) {\n            const f3_code = f3s[i].code\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code])\n            if (f4s.length > 0) f4 += f4s.length\n         }\n      }\n   }\n\n   let selectedData = []\n\n   async function fetchInvitesByCode(code, depth = 1) {\n      if (depth > 6) {\n         return\n      }\n\n      const [inviteData] = await connection.query(\"SELECT `id_user`,`name_user`,`phone`, `code`, `invite`, `rank`, `user_level`, `total_money` FROM users WHERE `invite` = ?\", [code])\n\n      if (inviteData.length > 0) {\n         for (const invite of inviteData) {\n            selectedData.push(invite)\n            await fetchInvitesByCode(invite.code, depth + 1)\n         }\n      }\n   }\n\n   if (f1s.length > 0) {\n      for (const initialInfoF1 of f1s) {\n         selectedData.push(initialInfoF1)\n         await fetchInvitesByCode(initialInfoF1.code)\n      }\n   }\n\n   const rosesF1 = parseFloat(userInfo.roses_f)\n   const rosesAll = parseFloat(userInfo.roses_f1)\n   let rosesAdd = rosesF1 + rosesAll\n\n   return res.status(200).json({\n      message: \"Receive success\",\n      level: level,\n      info: user,\n      status: true,\n      invite: {\n         f1: f1s.length,\n         total_f: selectedData.length,\n         f1_today: f1_today,\n         f_all_today: f_all_today,\n         roses_f1: userInfo.roses_f1,\n         roses_f: userInfo.roses_f,\n         roses_all: rosesAdd,\n         roses_today: userInfo.roses_today,\n      },\n      timeStamp: timeNow,\n   })\n}\n\nconst myTeam = async (req, res) => {\n   let auth = req.cookies.auth\n   if (!auth) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   const [level] = await connection.query(\"SELECT * FROM level\")\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   return res.status(200).json({\n      message: \"Receive success\",\n      level: level,\n      info: user,\n      status: true,\n      timeStamp: timeNow,\n   })\n}\n\nconst listMyTeam = async (req, res) => {\n   let auth = req.cookies.auth\n   if (!auth) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   let userInfo = user[0]\n   const [f1] = await connection.query(\"SELECT `id_user`, `phone`, `code`, `invite`,`roses_f`, `rank`, `name_user`,`status`,`total_money`, `time` FROM users WHERE `invite` = ? ORDER BY id DESC\", [userInfo.code])\n   const [mem] = await connection.query(\"SELECT `id_user`, `phone`, `time` FROM users WHERE `invite` = ? ORDER BY id DESC LIMIT 10\", [userInfo.code])\n   const [total_roses] = await connection.query(\"SELECT `f1`,`invite`, `code`,`phone`,`time` FROM roses WHERE `invite` = ? ORDER BY id DESC LIMIT 10\", [userInfo.code])\n\n   const selectedData = []\n\n   async function fetchUserDataByCode(code, depth = 1) {\n      if (depth > 6) {\n         return\n      }\n\n      const [userData] = await connection.query(\"SELECT `id_user`, `name_user`, `phone`, `code`, `invite`, `rank`, `total_money` FROM users WHERE `invite` = ?\", [code])\n      if (userData.length > 0) {\n         for (const user of userData) {\n            const [turnoverData] = await connection.query(\"SELECT `phone`, `daily_turn_over`, `total_turn_over` FROM turn_over WHERE `phone` = ?\", [user.phone])\n            const [inviteCountData] = await connection.query(\"SELECT COUNT(*) as invite_count FROM users WHERE `invite` = ?\", [user.code])\n            const inviteCount = inviteCountData[0].invite_count\n\n            const userObject = {\n               ...user,\n               invite_count: inviteCount,\n               user_level: depth,\n               daily_turn_over: turnoverData[0]?.daily_turn_over || 0,\n               total_turn_over: turnoverData[0]?.total_turn_over || 0,\n            }\n\n            selectedData.push(userObject)\n            await fetchUserDataByCode(user.code, depth + 1)\n         }\n      }\n   }\n\n   await fetchUserDataByCode(userInfo.code)\n\n   let newMem = []\n   mem.map(data => {\n      let objectMem = {\n         id_user: data.id_user,\n         phone: \"91\" + data.phone.slice(0, 1) + \"****\" + String(data.phone.slice(-4)),\n         time: data.time,\n      }\n\n      return newMem.push(objectMem)\n   })\n   return res.status(200).json({\n      message: \"Receive success\",\n      f1: selectedData,\n      f1_direct: f1,\n      mem: newMem,\n      total_roses: total_roses,\n      status: true,\n      timeStamp: timeNow,\n   })\n}\nconst wowpay = async (req, res) => {\n   let auth = req.cookies.auth\n   let money = req.body.money\n\n   // Fetching the user's mobile number from the database using auth token\n\n   // Your existing controller code here\n}\n\nconst comissionRecord = async (req,res)=>{\n   const auth = req.cookies.auth;\n    const [user] = await connection.execute('SELECT phone FROM users WHERE token = ?',[auth]);\n    if(!user[0]){\n        return res.status(200).json({\n            message: 'Failed',\n            status: false,\n    \n        }); \n    }\n    const phone = user[0].phone;\n    const [records] = await connection.execute('SELECT * FROM rebate_record where phone = ?',[phone]);\n    return res.status(200).json({\n      message: 'success',\n      status: true,\n      data:records\n  }); \n}\n\nconst recharge = async (req, res) => {\n   let auth = req.cookies.auth\n   let money = req.body.money\n   let type = req.body.type\n   let typeid = req.body.typeid\n\n   const minimumMoney = process.env.MINIMUM_MONEY\n\n   if (type != \"cancel\") {\n      if (!auth || !money || money < minimumMoney - 1) {\n         return res.status(200).json({\n            message: \"Failed\",\n            status: false,\n            timeStamp: timeNow,\n         })\n      }\n   }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   if (type == \"cancel\") {\n      await connection.query(\"UPDATE recharge SET status = 2 WHERE phone = ? AND id_order = ? AND status = ? \", [userInfo.phone, typeid, 0])\n      return res.status(200).json({\n         message: \"Cancelled order successfully\",\n         status: true,\n         timeStamp: timeNow,\n      })\n   }\n   const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = ? \", [userInfo.phone, 0])\n\n   if (recharge.length == 0) {\n      let time = new Date().getTime()\n      const date = new Date()\n      function formateT(params) {\n         let result = params < 10 ? \"0\" + params : params\n         return result\n      }\n\n      function timerJoin(params = \"\", addHours = 0) {\n         let date = \"\"\n         if (params) {\n            date = new Date(Number(params))\n         } else {\n            date = new Date()\n         }\n\n         date.setHours(date.getHours() + addHours)\n\n         let years = formateT(date.getFullYear())\n         let months = formateT(date.getMonth() + 1)\n         let days = formateT(date.getDate())\n\n         let hours = date.getHours() % 12\n         hours = hours === 0 ? 12 : hours\n         let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\n\n         let minutes = formateT(date.getMinutes())\n         let seconds = formateT(date.getSeconds())\n\n         return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\n      }\n      let checkTime = timerJoin(time)\n      let id_time = date.getUTCFullYear() + \"\" + date.getUTCMonth() + 1 + \"\" + date.getUTCDate()\n      let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000\n      // let vat = Math.floor(Math.random() * (2000 - 0 + 1) ) + 0;\n\n      money = Number(money)\n      let client_transaction_id = id_time + id_order\n      const formData = {\n         username: process.env.accountBank,\n         secret_key: process.env.secret_key,\n         client_transaction: client_transaction_id,\n         amount: money,\n      }\n\n      if (type == \"momo\") {\n         const sql = `INSERT INTO recharge SET \n            id_order = ?,\n            transaction_id = ?,\n            phone = ?,\n            money = ?,\n            type = ?,\n            status = ?,\n            today = ?,\n            url = ?,\n            time = ?`\n         await connection.execute(sql, [client_transaction_id, \"NULL\", userInfo.phone, money, type, 0, checkTime, \"NULL\", time])\n         const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = ? \", [userInfo.phone, 0])\n         return res.status(200).json({\n            message: \"Received successfully\",\n            datas: recharge[0],\n            status: true,\n            timeStamp: timeNow,\n         })\n      }\n\n      const moneyString = money.toString()\n\n      const apiData = {\n         key: process.env.PAYMENT_KEY,\n         client_txn_id: client_transaction_id,\n         amount: moneyString,\n         p_info: process.env.PAYMENT_INFO,\n         customer_name: userInfo.name_user,\n         customer_email: process.env.PAYMENT_EMAIL,\n         customer_mobile: userInfo.phone,\n         redirect_url: `${process.env.APP_BASE_URL}/wallet/rechargerecord`,\n         udf1: process.env.APP_NAME,\n      }\n\n      try {\n         const apiResponse = await axios.post(\"https://api.ekqr.in/api/create_order\", apiData)\n\n         if (apiResponse.data.status == true) {\n            const sql = `INSERT INTO recharge SET \n                id_order = ?,\n                transaction_id = ?,\n                phone = ?,\n                money = ?,\n                type = ?,\n                status = ?,\n                today = ?,\n                url = ?,\n                time = ?`\n\n            await connection.execute(sql, [client_transaction_id, \"0\", userInfo.phone, money, type, 0, checkTime, \"0\", timeNow])\n\n            const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = ? \", [userInfo.phone, 0])\n\n            return res.status(200).json({\n               message: \"Received successfully\",\n               datas: recharge[0],\n               payment_url: apiResponse.data.data.payment_url,\n               status: true,\n               timeStamp: timeNow,\n            })\n         } else {\n            return res.status(500).json({ message: \"Failed to create order\", status: false })\n         }\n      } catch (error) {\n         return res.status(500).json({ message: \"API request failed\", status: false })\n      }\n   } else {\n      return res.status(200).json({\n         message: \"Received successfully\",\n         datas: recharge[0],\n         status: true,\n         timeStamp: timeNow,\n      })\n   }\n}\n\nconst cancelRecharge = async (req, res) => {\n   try {\n      let auth = req.cookies.auth\n\n      if (!auth) {\n         return res.status(200).json({\n            message: \"Authorization is required to access this API!\",\n            status: false,\n            timeStamp: timeNow,\n         })\n      }\n\n      const [user] = await connection.query(\"SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? \", [auth])\n\n      if (!user) {\n         return res.status(200).json({\n            message: \"Authorization is required to access this API!\",\n            status: false,\n            timeStamp: timeNow,\n         })\n      }\n\n      let userInfo = user[0]\n\n      const result = await connection.query(\"DELETE FROM recharge WHERE phone = ? AND status = ?\", [userInfo.phone, 0])\n\n      if (result.affectedRows > 0) {\n         return res.status(200).json({\n            message: \"All the pending recharges has been deleted successfully!\",\n            status: true,\n            timeStamp: timeNow,\n         })\n      } else {\n         return res.status(200).json({\n            message: \"There was no pending recharges for this user or delete operation has been failed!\",\n            status: true,\n            timeStamp: timeNow,\n         })\n      }\n   } catch (error) {\n      console.error(\"API error: \", error)\n      return res.status(500).json({\n         message: \"API Request failed!\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n}\n\nconst addBank = async (req, res) => {\n   let auth = req.cookies.auth\n   let name_bank = req.body.name_bank\n   let name_user = req.body.name_user\n   let stk = req.body.stk\n   let email = req.body.email\n   let tinh = req.body.tinh\n   let time = new Date().getTime()\n\n   if (!auth || !name_bank || !name_user || !stk || !email || !tinh) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [user_bank] = await connection.query(\"SELECT * FROM user_bank WHERE stk = ? \", [stk])\n   const [user_bank2] = await connection.query(\"SELECT * FROM user_bank WHERE phone = ? \", [userInfo.phone])\n   if (user_bank.length == 0 && user_bank2.length == 0) {\n      const sql = `INSERT INTO user_bank SET \n        phone = ?,\n        name_bank = ?,\n        name_user = ?,\n        stk = ?,\n        email = ?,\n        tinh = ?,\n        time = ?`\n      await connection.execute(sql, [userInfo.phone, name_bank, name_user, stk, email, tinh, time])\n      return res.status(200).json({\n         message: \"Successfully added bank\",\n         status: true,\n         timeStamp: timeNow,\n      })\n   } else if (user_bank.length > 0) {\n      await connection.query(\"UPDATE user_bank SET stk = ? WHERE phone = ? \", [stk, userInfo.phone])\n      return res.status(200).json({\n         message: \"Account number updated in the system\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   } else if (user_bank2.length > 0) {\n      await connection.query(\"UPDATE user_bank SET name_bank = ?, name_user = ?, stk = ?, email = ?, tinh = ?, time = ? WHERE phone = ?\", [name_bank, name_user, stk, email, tinh, time, userInfo.phone])\n      return res.status(200).json({\n         message: \"your account is updated\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n}\n\nconst addUpi = async (req,res)=>{\n   let auth = req.cookies.auth;\n   let {upi,name} = req.body;\n   let time = new Date().getTime()\n   if (!auth || !upi || !name) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0];\n\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   const [user_bank] = await connection.query(\"SELECT * FROM user_bank WHERE phone = ? \", [userInfo.phone]);\n   if(user_bank.length===0){\n      const sql = `INSERT INTO user_bank SET \n      phone = ?,\n      sdt = ?,\n      upi_name = ?,\n      time = ?`\n    await connection.execute(sql, [userInfo.phone,upi,name, time]);\n    return res.status(200).json({\n      message: \"Successfully added UPI\",\n      status: true,\n      timeStamp: timeNow,\n   })\n   }\n   else{\n      const sql = `UPDATE user_bank SET \n      sdt = ?,\n      upi_name = ?,\n      time = ? WHERE\n      phone = ?`\n      await connection.execute(sql, [upi,name,time,userInfo.phone]);\n      return res.status(200).json({\n         message: \"your account is updated\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n  \n}\n\nconst infoUserBank = async (req, res) => {\n   let auth = req.cookies.auth\n   if (!auth) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite`, `money`,`win_wallet` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   function formateT(params) {\n      let result = params < 10 ? \"0\" + params : params\n      return result\n   }\n\n   function timerJoin(params = \"\", addHours = 0) {\n      let date = \"\"\n      if (params) {\n         date = new Date(Number(params))\n      } else {\n         date = new Date()\n      }\n\n      date.setHours(date.getHours() + addHours)\n\n      let years = formateT(date.getFullYear())\n      let months = formateT(date.getMonth() + 1)\n      let days = formateT(date.getDate())\n\n      let hours = date.getHours() % 12\n      hours = hours === 0 ? 12 : hours\n      let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\n\n      let minutes = formateT(date.getMinutes())\n      let seconds = formateT(date.getSeconds())\n\n      return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\n   }\n   let date = new Date().getTime()\n   //    let checkTime = timerJoin(date)\n   //    const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = 1\", [userInfo.phone])\n\n   const [wingoWonResult] = await connection.query(`SELECT SUM(\\`get\\`) AS wingoWonMoney FROM minutes_1 WHERE phone = '${userInfo.phone}'`)\n   const wingoWonMoney = Number(wingoWonResult[0].wingoWonMoney) || 0\n\n   const [k3WonResult] = await connection.query(`SELECT SUM(\\`get\\`) AS k3WonMoney FROM result_k3 WHERE phone = '${userInfo.phone}'`)\n   const k3WonMoney = Number(k3WonResult[0].k3WonMoney) || 0\n\n   const [G5dWonResult] = await connection.query(`SELECT SUM(\\`get\\`) AS G5dWonMoney FROM result_5d WHERE phone = '${userInfo.phone}'`)\n   const G5dWonMoney = Number(G5dWonResult[0].G5dWonMoney) || 0\n\n   const [wingoLossResult] = await connection.query(`SELECT SUM(money) AS wingoLossMoney FROM minutes_1 WHERE phone = '${userInfo.phone}' AND \\`get\\` = 0`)\n   const wingoLossMoney = Number(wingoLossResult[0].wingoLossMoney) || 0\n\n   const [k3LossResult] = await connection.query(`SELECT SUM(money) AS k3LossMoney FROM result_k3 WHERE phone = '${userInfo.phone}' AND \\`get\\` = 0`)\n   const k3LossMoney = Number(k3LossResult[0].k3LossMoney) || 0\n\n   const [G5LossResult] = await connection.query(`SELECT SUM(money) AS G5dLossMoney FROM result_5d WHERE phone = '${userInfo.phone}' AND \\`get\\` = 0`)\n   const G5dLossMoney = Number(G5LossResult[0].G5dLossMoney) || 0\n\n   const [withdrawResult] = await connection.query(`SELECT SUM(money) AS totalWithdraw FROM withdraw WHERE phone = '${userInfo.phone}' AND status = 1`)\n   const totalWithdraw = Number(withdrawResult[0].totalWithdraw) || 0\n\n   const [withdrawPendingResult] = await connection.query(`SELECT SUM(money) AS totalWithdrawPending FROM withdraw WHERE phone = '${userInfo.phone}' AND status = 0`)\n   const totalWithdrawPending = Number(withdrawPendingResult[0].totalWithdrawPending) || 0\n\n   const totalWon = wingoWonMoney + k3WonMoney + G5dWonMoney\n   const totalLoss = wingoLossMoney + k3LossMoney + G5dLossMoney\n\n   console.log(\"totalWon\", totalWon)\n   console.log(\"totalLoss\", totalLoss)\n   console.log(\"totalWithdraw\", totalWithdraw)\n   console.log(\"totalWithdrawPending\", totalWithdrawPending)\n\n   const totalMoney = totalWon - totalLoss - totalWithdraw - totalWithdrawPending\n   console.log(\"totalMoney\", totalMoney)\n\n   const [userBank] = await connection.query(\"SELECT * FROM user_bank WHERE phone = ? \", [userInfo.phone])\n\n   return res.status(200).json({\n      message: \"Received successfully\",\n      datas: userBank,\n      userInfo: user,\n      result: totalMoney,\n      status: true,\n      timeStamp: timeNow,\n   })\n}\n\nconst withdrawal3 = async (req, res) => {\n   let auth = req.cookies.auth\n   let money = req.body.money\n   // let password = req.body.password\n   if (!auth || !money || money < 0) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   console.log(auth,money,\"hello world i am here\")\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite`, `money`,`extra`,`ekyc`,win_wallet FROM users WHERE `token` = ?\", [auth])\n\n   // if (user.length == 0) {\n   //    return res.status(200).json({\n   //       message: \"incorrect password\",\n   //       status: false,\n   //       timeStamp: timeNow,\n   //    })\n   // }\n   let userInfo = user[0]\n   console.log(userInfo,\"userInfo is here\")\n   const date = new Date()\n   let id_time = date.getUTCFullYear() + \"\" + date.getUTCMonth() + 1 + \"\" + date.getUTCDate()\n   let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000\n\n   function formateT(params) {\n      let result = params < 10 ? \"0\" + params : params\n      return result\n   }\n\n   function timerJoin(params = \"\", addHours = 0) {\n      let date = \"\"\n      if (params) {\n         date = new Date(Number(params))\n      } else {\n         date = new Date()\n      }\n\n      date.setHours(date.getHours() + addHours)\n\n      let years = formateT(date.getFullYear())\n      let months = formateT(date.getMonth() + 1)\n      let days = formateT(date.getDate())\n\n      let hours = date.getHours() % 12\n      hours = hours === 0 ? 12 : hours\n      let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\n\n      let minutes = formateT(date.getMinutes())\n      let seconds = formateT(date.getSeconds())\n\n      return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\n   }\n   let dates = new Date().getTime()\n   let checkTime = timerJoin(dates)\n   const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = 1\", [userInfo?.phone])\n   const [minutes_1] = await connection.query(\"SELECT * FROM minutes_1 WHERE phone = ?\", [userInfo.phone])\n   let total = 0\n   recharge.forEach(data => {\n      total += parseFloat(data.money)\n   })\n   let total2 = 0\n   minutes_1.forEach(data => {\n      total2 += parseFloat(data.money)\n   })\n   let result = 0\n   if (total - total2 > 0) result = total - total2\n   result = Math.max(result, 0)\n   const [user_bank] = await connection.query(\"SELECT * FROM user_bank WHERE `phone` = ?\", [userInfo.phone])\n   const [withdraw] = await connection.query(\"SELECT * FROM withdraw WHERE `phone` = ? AND today = ?\", [userInfo.phone, checkTime])\n   if (user_bank.length != 0) {\n      if (withdraw.length < 3) {\n         if (userInfo.win_wallet  - money >= 0) {\n            // if (result == 0) {\n            //    if (total - total2 >= 0) {\n            //       if (result == 0) {\n            //          return res.status(200).json({\n            //             message: \"The total bet is not enough to fulfill the request\",\n            //             status: false,\n            //             timeStamp: timeNow,\n            //          })\n            //       }\n            //    } else {\n\n                  let infoBank = user_bank[0]\n                  const sql = `INSERT INTO withdraw SET \n                    id_order = ?,\n                    phone = ?,\n                    money = ?,\n                    stk = ?,\n                    name_bank = ?,\n                    ifsc = ?,\n                    name_user = ?,\n                    status = ?,\n                    today = ?,\n                    time = ?,\n                    sdt = ?,\n                    tp=?`\n                  await connection.execute(sql, [id_time + \"\" + id_order, userInfo.phone, money, infoBank.stk, infoBank.name_bank, infoBank.email, infoBank.name_user, 0, checkTime, dates,infoBank.sdt,0])\n                  await connection.query(\"UPDATE users SET win_wallet = win_wallet - ? WHERE phone = ? \", [money, userInfo.phone])\n                  // await connection.query(\"UPDATE users SET extra WHERE phone\",[false,userInfo.phone])\n                  console.log(userInfo.extra,\"ghjkl;\")\n                  if(userInfo.extra == 0 && userInfo.ekyc == null){\n\n                     await connection.query(`UPDATE users SET ekyc = false WHERE phone = ?`, [userInfo.phone]);\n            \n                   }\n                 \n                   \n\n                  return res.status(200).json({\n                     message: \"Withdrawal successful\",\n                     status: true,\n                     money: userInfo.money,\n                     win_wallet: userInfo.win_wallet - money,\n                     timeStamp: timeNow,\n                  })\n\n            //    }\n            // } \n            // else {\n            //    return res.status(200).json({\n            //       message: \"The total bet is not enough to fulfill the request\",\n            //       status: false,\n            //       timeStamp: timeNow,\n            //    })\n            // }\n         } else {\n            return res.status(200).json({\n               message: \"The balance is not enough to fulfill the request\",\n               status: false,\n               timeStamp: timeNow,\n            })\n         }\n      } else {\n         return res.status(200).json({\n            message: \"You can only make 3 withdrawals per day\",\n            status: false,\n            timeStamp: timeNow,\n         })\n      }\n   } else {\n      return res.status(200).json({\n         message: \"Please link your bank first\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n}\n const userme = async(req,res)=>{\n   let auth = req.cookies.auth\n   const [user] = await connection.query(\"SELECT `phone`,`money`, `code`,`invite` ,`extra`,`ekyc` FROM users WHERE `token` = ? \", [auth])\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   res.status(200).json({\n      message: user[0],\n      status: true,\n      timeStamp: timeNow,\n   })\n\n }\n\n\n\n\n\n\nconst transfer = async (req, res) => {\n   let auth = req.cookies.auth\n   let amount = req.body.amount\n   let receiver_phone = req.body.phone\n   const date = new Date()\n   // let id_time = date.getUTCFullYear() + '' + (date.getUTCMonth() + 1) + '' + date.getUTCDate();\n   let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000\n   let time = new Date().getTime()\n   let client_transaction_id = id_order\n\n   const [user] = await connection.query(\"SELECT `phone`,`money`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n   let sender_phone = userInfo.phone\n   let sender_money = parseInt(userInfo.money)\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   function formateT(params) {\n      let result = params < 10 ? \"0\" + params : params\n      return result\n   }\n\n   function timerJoin(params = \"\", addHours = 0) {\n      let date = \"\"\n      if (params) {\n         date = new Date(Number(params))\n      } else {\n         date = new Date()\n      }\n\n      date.setHours(date.getHours() + addHours)\n\n      let years = formateT(date.getFullYear())\n      let months = formateT(date.getMonth() + 1)\n      let days = formateT(date.getDate())\n\n      let hours = date.getHours() % 12\n      hours = hours === 0 ? 12 : hours\n      let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\n\n      let minutes = formateT(date.getMinutes())\n      let seconds = formateT(date.getSeconds())\n\n      return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\n   }\n\n   let dates = new Date().getTime()\n   let checkTime = timerJoin(dates)\n   const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = 1 \", [userInfo.phone])\n   const [minutes_1] = await connection.query(\"SELECT * FROM minutes_1 WHERE phone = ? \", [userInfo.phone])\n   let total = 0\n   recharge.forEach(data => {\n      total += data.money\n   })\n   let total2 = 0\n   minutes_1.forEach(data => {\n      total2 += data.money\n   })\n\n   let result = 0\n   if (total - total2 > 0) result = total - total2\n\n   // console.log('date:', result);\n   if (result == 0) {\n      if (sender_money >= amount) {\n         let [receiver] = await connection.query(\"SELECT * FROM users WHERE `phone` = ?\", [receiver_phone])\n         if (receiver.length === 1 && sender_phone !== receiver_phone) {\n            let money = sender_money - amount\n            let total_money = amount + receiver[0].total_money\n            // await connection.query('UPDATE users SET money = ? WHERE phone = ?', [money, sender_phone]);\n            // await connection.query(`UPDATE users SET money = money + ? WHERE phone = ?`, [amount, receiver_phone]);\n            const sql = \"INSERT INTO balance_transfer (sender_phone, receiver_phone, amount) VALUES (?, ?, ?)\"\n            await connection.execute(sql, [sender_phone, receiver_phone, amount])\n            const sql_recharge = \"INSERT INTO recharge (id_order, transaction_id, phone, money, type, status, today, url, time) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\"\n            await connection.execute(sql_recharge, [client_transaction_id, 0, receiver_phone, amount, \"wallet\", 0, checkTime, 0, time])\n\n            return res.status(200).json({\n               message: `Requested ${amount} sent successfully`,\n               status: true,\n               timeStamp: timeNow,\n            })\n         } else {\n            return res.status(200).json({\n               message: `${receiver_phone} is not a valid user mobile number`,\n               status: false,\n               timeStamp: timeNow,\n            })\n         }\n      } else {\n         return res.status(200).json({\n            message: \"Your balance is not enough\",\n            status: false,\n            timeStamp: timeNow,\n         })\n      }\n   } else {\n      return res.status(200).json({\n         message: \"The total bet is not enough to fulfill the request\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n}\n\n// get transfer balance data\nconst transferHistory = async (req, res) => {\n   let auth = req.cookies.auth\n\n   const [user] = await connection.query(\"SELECT `phone`,`money`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [history] = await connection.query(\"SELECT * FROM balance_transfer WHERE sender_phone = ?\", [userInfo.phone])\n   const [receive] = await connection.query(\"SELECT * FROM balance_transfer WHERE receiver_phone = ?\", [userInfo.phone])\n   if (receive.length > 0 || history.length > 0) {\n      return res.status(200).json({\n         message: \"Success\",\n         receive: receive,\n         datas: history,\n         status: true,\n         timeStamp: timeNow,\n      })\n   }\n}\nconst recharge2 = async (req, res) => {\n   let auth = req.cookies.auth\n   let money = req.body.money\n   if (!auth) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = ? \", [userInfo.phone, 0])\n   const [bank_recharge] = await connection.query(\"SELECT * FROM bank_recharge\")\n   if (recharge.length != 0) {\n      return res.status(200).json({\n         message: \"Received successfully\",\n         datas: recharge[0],\n         infoBank: bank_recharge,\n         status: true,\n         timeStamp: timeNow,\n      })\n   } else {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n}\n\nconst listRecharge = async (req, res) => {\n   let auth = req.cookies.auth\n   if (!auth) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC \", [userInfo.phone])\n   return res.status(200).json({\n      message: \"Receive success\",\n      datas: recharge,\n      status: true,\n      timeStamp: timeNow,\n   })\n}\n\nconst search = async (req, res) => {\n   let auth = req.cookies.auth\n   let phone = req.body.phone\n   if (!auth) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite`, `level` FROM users WHERE `token` = ? \", [auth])\n   if (user.length == 0) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   let userInfo = user[0]\n   if (userInfo.level == 1) {\n      const [users] = await connection.query(`SELECT * FROM users WHERE phone = ? ORDER BY id DESC `, [phone])\n      return res.status(200).json({\n         message: \"Receive success\",\n         datas: users,\n         status: true,\n         timeStamp: timeNow,\n      })\n   } else if (userInfo.level == 2) {\n      const [users] = await connection.query(`SELECT * FROM users WHERE phone = ? ORDER BY id DESC `, [phone])\n      if (users.length == 0) {\n         return res.status(200).json({\n            message: \"Receive success\",\n            datas: [],\n            status: true,\n            timeStamp: timeNow,\n         })\n      } else {\n         if (users[0].ctv == userInfo.phone) {\n            return res.status(200).json({\n               message: \"Receive success\",\n               datas: users,\n               status: true,\n               timeStamp: timeNow,\n            })\n         } else {\n            return res.status(200).json({\n               message: \"Failed\",\n               status: false,\n               timeStamp: timeNow,\n            })\n         }\n      }\n   } else {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n}\n\nconst listWithdraw = async (req, res) => {\n   let auth = req.cookies.auth\n   if (!auth) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [recharge] = await connection.query(\"SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC \", [userInfo.phone])\n   return res.status(200).json({\n      message: \"Receive success\",\n      datas: recharge,\n      status: true,\n      timeStamp: timeNow,\n   })\n}\n\nconst useRedenvelope = async (req, res) => {\n   let auth = req.cookies.auth\n   let code = req.body.code\n   if (!auth || !code) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [redenvelopes] = await connection.query(\"SELECT * FROM redenvelopes WHERE id_redenvelope = ?\", [code]);\n\n   if (redenvelopes.length == 0) {\n      return res.status(200).json({\n         message: \"Redemption code error\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   } \n\n   const [used_code] = await connection.query('SELECT * from redenvelopes_used WHERE phone_used = ? AND id_redenvelops = ?',[userInfo.phone,code]);\n\n   if(used_code[0]){\n      return res.status(200).json({\n         message: \"You have already used this redemption code\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   \n   else {\n      let infoRe = redenvelopes[0]\n      const d = new Date()\n      const time = d.getTime()\n      if (infoRe.status == 0) {\n         if (infoRe.used === 1) {\n            await connection.query(\"UPDATE redenvelopes SET used = ?, status = ? WHERE `id_redenvelope` = ? \", [0, 1, infoRe.id_redenvelope])\n         } else {\n            await connection.query(\"UPDATE redenvelopes SET used = ?, status = ? WHERE `id_redenvelope` = ? \", [infoRe.used - 1, 0, infoRe.id_redenvelope])\n         }\n         await connection.query(\"UPDATE users SET money = money + ? WHERE `phone` = ? \", [infoRe.money, userInfo.phone])\n         let sql = \"INSERT INTO redenvelopes_used SET phone = ?, phone_used = ?, id_redenvelops = ?, money = ?, `time` = ? \"\n         await connection.query(sql, [infoRe.phone, userInfo.phone, infoRe.id_redenvelope, infoRe.money, time])\n         return res.status(200).json({\n            message: `Received successfully +${infoRe.money}`,\n            status: true,\n            timeStamp: timeNow,\n         })\n      } else {\n         return res.status(200).json({\n            message: \"Gift code expired\",\n            status: false,\n            timeStamp: timeNow,\n         })\n      }\n   }\n}\n\nconst callback_bank = async (req, res) => {\n   let transaction_id = req.body.transaction_id\n   let client_transaction_id = req.body.client_transaction_id\n   let amount = req.body.amount\n   let requested_datetime = req.body.requested_datetime\n   let expired_datetime = req.body.expired_datetime\n   let payment_datetime = req.body.payment_datetime\n   let status = req.body.status\n   if (!transaction_id) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   if (status == 2) {\n      await connection.query(`UPDATE recharge SET status = 1 WHERE id_order = ?`, [client_transaction_id])\n      const [info] = await connection.query(`SELECT * FROM recharge WHERE id_order = ?`, [client_transaction_id])\n      await connection.query(\"UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? \", [info[0].money, info[0].money, info[0].phone])\n      return res.status(200).json({\n         message: 0,\n         status: true,\n      })\n   } else {\n      await connection.query(`UPDATE recharge SET status = 2 WHERE id = ?`, [id])\n\n      return res.status(200).json({\n         message: \"Cancellation successful\",\n         status: true,\n         datas: recharge,\n      })\n   }\n}\n\nconst confirmRecharge = async (req, res) => {\n   let auth = req.cookies.auth\n   //let money = req.body.money;\n   //let paymentUrl = req.body.payment_url;\n   let client_txn_id = req.body?.client_txn_id\n\n   if (!client_txn_id) {\n      return res.status(200).json({\n         message: \"client_txn_id is required\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   if (!auth) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n\n   if (!user) {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n   const [recharge] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? AND status = ? \", [userInfo.phone, 0])\n\n   if (recharge.length != 0) {\n      const rechargeData = recharge[0]\n      const date = new Date(rechargeData.today)\n      const dd = String(date.getDate()).padStart(2, \"0\")\n      const mm = String(date.getMonth() + 1).padStart(2, \"0\")\n      const yyyy = date.getFullYear()\n      const formattedDate = `${dd}-${mm}-${yyyy}`\n      const apiData = {\n         key: process.env.PAYMENT_KEY,\n         client_txn_id: client_txn_id,\n         txn_date: formattedDate,\n      }\n      try {\n         const apiResponse = await axios.post(\"https://api.ekqr.in/api/check_order_status\", apiData)\n         console.log(apiResponse.data)\n         const apiRecord = apiResponse.data.data\n         if (apiRecord.status === \"scanning\") {\n            return res.status(200).json({\n               message: \"Waiting for confirmation\",\n               status: false,\n               timeStamp: timeNow,\n            })\n         }\n         if (apiRecord.client_txn_id === rechargeData.id_order && apiRecord.customer_mobile === rechargeData.phone && apiRecord.amount === rechargeData.money) {\n            if (apiRecord.status === \"success\") {\n               await connection.query(`UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount])\n               // const [code] = await connection.query(`SELECT invite, total_money from users WHERE phone = ?`, [apiRecord.customer_mobile]);\n               // const [data] = await connection.query('SELECT recharge_bonus_2, recharge_bonus FROM admin WHERE id = 1');\n               // let selfBonus = info[0].money * (data[0].recharge_bonus_2 / 10);\n               // let money = info[0].money + selfBonus;\n               let money = apiRecord.amount\n               await connection.query(\"UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? \", [money, money, apiRecord.customer_mobile])\n               // let rechargeBonus;\n               // if (code[0].total_money <= 0) {\n               //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus / 10);\n               // }\n               // else {\n               //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus_2 / 10);\n               //\n               // const percent = rechargeBonus;\n               // await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE code = ?', [money, money, code[0].invite]);\n\n               return res.status(200).json({\n                  message: \"Successful application confirmation\",\n                  status: true,\n                  datas: recharge,\n               })\n            } else if (apiRecord.status === \"failure\" || apiRecord.status === \"close\") {\n               console.log(apiRecord.status)\n               await connection.query(`UPDATE recharge SET status = 2 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount])\n               return res.status(200).json({\n                  message: \"Payment failure\",\n                  status: true,\n                  timeStamp: timeNow,\n               })\n            }\n         } else {\n            return res.status(200).json({\n               message: \"Mismtach data\",\n               status: true,\n               timeStamp: timeNow,\n            })\n         }\n      } catch (error) {\n         console.error(error)\n      }\n   } else {\n      return res.status(200).json({\n         message: \"Failed\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n}\n\nconst confirmUSDTRecharge = async (req, res) => {\n   console.log(res?.body)\n   console.log(res?.query)\n   console.log(res?.cookies)\n   // let auth = req.cookies.auth;\n   // //let money = req.body.money;\n   // //let paymentUrl = req.body.payment_url;\n   // let client_txn_id = req.body?.client_txn_id;\n\n   // if (!client_txn_id) {\n   //     return res.status(200).json({\n   //         message: 'client_txn_id is required',\n   //         status: false,\n   //         timeStamp: timeNow,\n   //     })\n   // }\n\n   // if (!auth) {\n   //     return res.status(200).json({\n   //         message: 'Failed',\n   //         status: false,\n   //         timeStamp: timeNow,\n   //     })\n   // }\n\n   // const [user] = await connection.query('SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? ', [auth]);\n   // let userInfo = user[0];\n\n   // if (!user) {\n   //     return res.status(200).json({\n   //         message: 'Failed',\n   //         status: false,\n   //         timeStamp: timeNow,\n   //     });\n   // };\n\n   // const [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? ', [userInfo.phone, 0]);\n\n   // if (recharge.length != 0) {\n   //     const rechargeData = recharge[0];\n   //     const date = new Date(rechargeData.today);\n   //     const dd = String(date.getDate()).padStart(2, '0');\n   //     const mm = String(date.getMonth() + 1).padStart(2, '0');\n   //     const yyyy = date.getFullYear();\n   //     const formattedDate = `${dd}-${mm}-${yyyy}`;\n   //     const apiData = {\n   //         key: process.env.PAYMENT_KEY,\n   //         client_txn_id: client_txn_id,\n   //         txn_date: formattedDate,\n   //     };\n   //     try {\n   //         const apiResponse = await axios.post('https://api.ekqr.in/api/check_order_status', apiData);\n   //         const apiRecord = apiResponse.data.data;\n   //         if (apiRecord.status === \"scanning\") {\n   //             return res.status(200).json({\n   //                 message: 'Waiting for confirmation',\n   //                 status: false,\n   //                 timeStamp: timeNow,\n   //             });\n   //         }\n   //         if (apiRecord.client_txn_id === rechargeData.id_order && apiRecord.customer_mobile === rechargeData.phone && apiRecord.amount === rechargeData.money) {\n   //             if (apiRecord.status === 'success') {\n   //                 await connection.query(`UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n   //                 // const [code] = await connection.query(`SELECT invite, total_money from users WHERE phone = ?`, [apiRecord.customer_mobile]);\n   //                 // const [data] = await connection.query('SELECT recharge_bonus_2, recharge_bonus FROM admin WHERE id = 1');\n   //                 // let selfBonus = info[0].money * (data[0].recharge_bonus_2 / 10);\n   //                 // let money = info[0].money + selfBonus;\n   //                 let money = apiRecord.amount;\n   //                 await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE phone = ? ', [money, money, apiRecord.customer_mobile]);\n   //                 // let rechargeBonus;\n   //                 // if (code[0].total_money <= 0) {\n   //                 //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus / 10);\n   //                 // }\n   //                 // else {\n   //                 //     rechargeBonus = apiRecord.customer_mobile * (data[0].recharge_bonus_2 / 10);\n   //                 // }\n   //                 // const percent = rechargeBonus;\n   //                 // await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE code = ?', [money, money, code[0].invite]);\n\n   //                 return res.status(200).json({\n   //                     message: 'Successful application confirmation',\n   //                     status: true,\n   //                     datas: recharge,\n   //                 });\n   //             } else if (apiRecord.status === 'failure' || apiRecord.status === 'close') {\n   //                 console.log(apiRecord.status)\n   //                 await connection.query(`UPDATE recharge SET status = 2 WHERE id = ? AND id_order = ? AND phone = ? AND money = ?`, [rechargeData.id, apiRecord.client_txn_id, apiRecord.customer_mobile, apiRecord.amount]);\n   //                 return res.status(200).json({\n   //                     message: 'Payment failure',\n   //                     status: true,\n   //                     timeStamp: timeNow,\n   //                 });\n   //             }\n   //         } else {\n   //             return res.status(200).json({\n   //                 message: 'Mismtach data',\n   //                 status: true,\n   //                 timeStamp: timeNow,\n   //             });\n   //         }\n   //     } catch (error) {\n   //         console.error(error);\n   //     }\n   // } else {\n   //     return res.status(200).json({\n   //         message: 'Failed',\n   //         status: false,\n   //         timeStamp: timeNow,\n   //     });\n   // }\n}\n\nconst updateRecharge = async (req, res) => {\n   let auth = req.cookies.auth\n   let money = req.body.money\n   let order_id = req.body.id_order\n   let data = req.body.inputData\n\n   // if (type != 'upi') {\n   //     if (!auth || !money || money < 300) {\n   //         return res.status(200).json({\n   //             message: 'upi failed',\n   //             status: false,\n   //             timeStamp: timeNow,\n   //         })\n   //     }\n   // }\n   const [user] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `token` = ? \", [auth])\n   let userInfo = user[0]\n   if (!user) {\n      return res.status(200).json({\n         message: \"user not found\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n   const [utr] = await connection.query(\"SELECT * FROM recharge WHERE `utr` = ? \", [data])\n   let utrInfo = utr[0]\n\n   if (!utrInfo) {\n      await connection.query(\"UPDATE recharge SET utr = ? WHERE phone = ? AND id_order = ?\", [data, userInfo.phone, order_id])\n      return res.status(200).json({\n         message: \"UTR updated\",\n         status: true,\n         timeStamp: timeNow,\n      })\n   } else {\n      return res.status(200).json({\n         message: \"UTR is already in use\",\n         status: false,\n         timeStamp: timeNow,\n      })\n   }\n\n}\n\nconst partnerData = async (req, res) => {\n   const now = new Date();\n   const tenDaysAgo = new Date(now.getTime() - (10 * 24 * 60 * 60 * 1000));\n\n   const startOfDay = new Date(tenDaysAgo.setHours(0, 0, 0, 0)).getTime();\n   const endOfDay = now.getTime();\n\n   const timeNow = now.toISOString();\n   const auth = req.cookies.auth;\n\n   const [user] = await connection.execute('SELECT code FROM users WHERE token = ?', [auth]);\n\n   if (!user[0]) {\n      return res.status(200).json({\n         message: \"FAILED\",\n         status: false,\n         timeStamp: timeNow,\n      });\n   }\n\n   const [members] = await connection.execute(\n      `SELECT phone, time \n       FROM users \n       WHERE invite = ? \n       AND CAST(time AS UNSIGNED) BETWEEN ? AND ?`,\n      [user[0].code, startOfDay, endOfDay]\n   );\n\n   if (members.length === 0) {\n      return res.status(200).json({\n         message: \"No members found\",\n         status: false,\n         timeStamp: timeNow,\n      });\n   }\n\n   let data = [];\n\n   await Promise.all(members.map(async (val) => {\n      const [recharge] = await connection.execute(\n         'SELECT * FROM recharge WHERE phone = ? ORDER BY CAST(time AS UNSIGNED) ASC', \n         [val.phone]\n      );\n\n      let firstRecharge = recharge[0]?.money || 0;\n      let secondRecharge = recharge[1]?.money || 0;\n      let thirdRecharge = recharge[2]?.money || 0;\n      let totalRecharge = recharge.reduce((acc, val) => acc + val.money, 0);\n      let phone = val.phone;\n      \n      const date = new Date(parseInt(val.time));\n      const time = date.toLocaleString();\n\n      data.push({ firstRecharge, secondRecharge, thirdRecharge, totalRecharge, phone, time });\n   }));\n\n   return res.status(200).json({\n      message: \"success\",\n      status: true,\n      timeStamp: timeNow,\n      data: data\n   });\n};\n\n\n\nmodule.exports = {\n   userInfo,\n   changeUser,\n   promotion,\n   myTeam,\n   wowpay,\n   recharge,\n   recharge2,\n   listRecharge,\n   listWithdraw,\n   changePassword,\n   checkInHandling,\n   infoUserBank,\n   addBank,\n   addUpi,\n   withdrawal3,\n   transfer,\n   transferHistory,\n   callback_bank,\n   listMyTeam,\n   verifyCode,\n   aviator,\n   useRedenvelope,\n   search,\n   updateRecharge,\n   confirmRecharge,\n   cancelRecharge,\n   confirmUSDTRecharge,\n   checkInData,\n   checkInRecord,\n   weeklyClaim,\n   activityRecords,\n   comissionRecord,\n   partnerData,\n   partnerData,\n   userme,\n}\n"],"mappings":"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","ignoreList":[]}},"mtime":1745590831000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/middlewareController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const connection = require(\"../config/connectDB\");\nconst middlewareController = async (req, res, next) => {\n  // xÃ¡c nháº­n token\n  const auth = req.cookies.auth;\n  if (!auth) return res.redirect(\"/login\");\n  try {\n    const [rows] = await connection.execute('SELECT `token`, `status` FROM `users` WHERE `token` = ? AND `veri` = 1', [auth]);\n    if (!rows) {\n      res.clearCookie(\"auth\");\n      return res.end();\n    }\n    ;\n    if (auth == rows[0].token && rows[0].status == '1') {\n      next();\n    } else {\n      return res.redirect(\"/login\");\n    }\n  } catch (error) {\n    return res.redirect(\"/login\");\n  }\n};\nmodule.exports = middlewareController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25uZWN0aW9uIiwicmVxdWlyZSIsIm1pZGRsZXdhcmVDb250cm9sbGVyIiwicmVxIiwicmVzIiwibmV4dCIsImF1dGgiLCJjb29raWVzIiwicmVkaXJlY3QiLCJyb3dzIiwiZXhlY3V0ZSIsImNsZWFyQ29va2llIiwiZW5kIiwidG9rZW4iLCJzdGF0dXMiLCJlcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9pbmZheW91ZGlnaXRhbC9EZXNrdG9wL2F2YXRpb3IvR2FvZ2FtZXMvc3JjL2NvbnRyb2xsZXJzLyIsInNvdXJjZXMiOlsibWlkZGxld2FyZUNvbnRyb2xsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY29ubmVjdGlvbiA9IHJlcXVpcmUoXCIuLi9jb25maWcvY29ubmVjdERCXCIpO1xyXG5cclxuY29uc3QgbWlkZGxld2FyZUNvbnRyb2xsZXIgPSBhc3luYyhyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgLy8geMOhYyBuaOG6rW4gdG9rZW5cclxuICAgIGNvbnN0IGF1dGggPSByZXEuY29va2llcy5hdXRoO1xyXG4gICAgaWYgKCFhdXRoKSByZXR1cm4gcmVzLnJlZGlyZWN0KFwiL2xvZ2luXCIpO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBbcm93c10gPSBhd2FpdCBjb25uZWN0aW9uLmV4ZWN1dGUoJ1NFTEVDVCBgdG9rZW5gLCBgc3RhdHVzYCBGUk9NIGB1c2Vyc2AgV0hFUkUgYHRva2VuYCA9ID8gQU5EIGB2ZXJpYCA9IDEnLCBbYXV0aF0pO1xyXG4gICAgICAgIGlmKCFyb3dzKSB7XHJcbiAgICAgICAgICAgIHJlcy5jbGVhckNvb2tpZShcImF1dGhcIik7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuZW5kKCk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAoYXV0aCA9PSByb3dzWzBdLnRva2VuICYmIHJvd3NbMF0uc3RhdHVzID09ICcxJykge1xyXG4gICAgICAgICAgICBuZXh0KCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5yZWRpcmVjdChcIi9sb2dpblwiKTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJldHVybiByZXMucmVkaXJlY3QoXCIvbG9naW5cIik7XHJcbiAgICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbWlkZGxld2FyZUNvbnRyb2xsZXI7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQztBQUVqRCxNQUFNQyxvQkFBb0IsR0FBRyxNQUFBQSxDQUFNQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxLQUFLO0VBQ2xEO0VBQ0EsTUFBTUMsSUFBSSxHQUFHSCxHQUFHLENBQUNJLE9BQU8sQ0FBQ0QsSUFBSTtFQUM3QixJQUFJLENBQUNBLElBQUksRUFBRSxPQUFPRixHQUFHLENBQUNJLFFBQVEsQ0FBQyxRQUFRLENBQUM7RUFDeEMsSUFBSTtJQUNBLE1BQU0sQ0FBQ0MsSUFBSSxDQUFDLEdBQUcsTUFBTVQsVUFBVSxDQUFDVSxPQUFPLENBQUMsd0VBQXdFLEVBQUUsQ0FBQ0osSUFBSSxDQUFDLENBQUM7SUFDekgsSUFBRyxDQUFDRyxJQUFJLEVBQUU7TUFDTkwsR0FBRyxDQUFDTyxXQUFXLENBQUMsTUFBTSxDQUFDO01BQ3ZCLE9BQU9QLEdBQUcsQ0FBQ1EsR0FBRyxDQUFDLENBQUM7SUFDcEI7SUFBQztJQUNELElBQUlOLElBQUksSUFBSUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDSSxLQUFLLElBQUlKLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQ0ssTUFBTSxJQUFJLEdBQUcsRUFBRTtNQUNoRFQsSUFBSSxDQUFDLENBQUM7SUFDVixDQUFDLE1BQU07TUFDSCxPQUFPRCxHQUFHLENBQUNJLFFBQVEsQ0FBQyxRQUFRLENBQUM7SUFDakM7RUFDSixDQUFDLENBQUMsT0FBT08sS0FBSyxFQUFFO0lBQ1osT0FBT1gsR0FBRyxDQUFDSSxRQUFRLENBQUMsUUFBUSxDQUFDO0VBQ2pDO0FBQ0osQ0FBQztBQUVEUSxNQUFNLENBQUNDLE9BQU8sR0FBR2Ysb0JBQW9CIiwiaWdub3JlTGlzdCI6W119","map":{"version":3,"names":["connection","require","middlewareController","req","res","next","auth","cookies","redirect","rows","execute","clearCookie","end","token","status","error","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["middlewareController.js"],"sourcesContent":["const connection = require(\"../config/connectDB\");\r\n\r\nconst middlewareController = async(req, res, next) => {\r\n    // xÃ¡c nháº­n token\r\n    const auth = req.cookies.auth;\r\n    if (!auth) return res.redirect(\"/login\");\r\n    try {\r\n        const [rows] = await connection.execute('SELECT `token`, `status` FROM `users` WHERE `token` = ? AND `veri` = 1', [auth]);\r\n        if(!rows) {\r\n            res.clearCookie(\"auth\");\r\n            return res.end();\r\n        };\r\n        if (auth == rows[0].token && rows[0].status == '1') {\r\n            next();\r\n        } else {\r\n            return res.redirect(\"/login\");\r\n        }\r\n    } catch (error) {\r\n        return res.redirect(\"/login\");\r\n    }\r\n}\r\n\r\nmodule.exports = middlewareController;"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAEjD,MAAMC,oBAAoB,GAAG,MAAAA,CAAMC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAClD;EACA,MAAMC,IAAI,GAAGH,GAAG,CAACI,OAAO,CAACD,IAAI;EAC7B,IAAI,CAACA,IAAI,EAAE,OAAOF,GAAG,CAACI,QAAQ,CAAC,QAAQ,CAAC;EACxC,IAAI;IACA,MAAM,CAACC,IAAI,CAAC,GAAG,MAAMT,UAAU,CAACU,OAAO,CAAC,wEAAwE,EAAE,CAACJ,IAAI,CAAC,CAAC;IACzH,IAAG,CAACG,IAAI,EAAE;MACNL,GAAG,CAACO,WAAW,CAAC,MAAM,CAAC;MACvB,OAAOP,GAAG,CAACQ,GAAG,CAAC,CAAC;IACpB;IAAC;IACD,IAAIN,IAAI,IAAIG,IAAI,CAAC,CAAC,CAAC,CAACI,KAAK,IAAIJ,IAAI,CAAC,CAAC,CAAC,CAACK,MAAM,IAAI,GAAG,EAAE;MAChDT,IAAI,CAAC,CAAC;IACV,CAAC,MAAM;MACH,OAAOD,GAAG,CAACI,QAAQ,CAAC,QAAQ,CAAC;IACjC;EACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZ,OAAOX,GAAG,CAACI,QAAQ,CAAC,QAAQ,CAAC;EACjC;AACJ,CAAC;AAEDQ,MAAM,CAACC,OAAO,GAAGf,oBAAoB","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/adminController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const connection = require(\"../config/connectDB\");\nconst jwt = require(\"jsonwebtoken\");\nconst md5 = require(\"md5\");\nrequire(\"dotenv\").config();\nlet timeNow = Date.now();\nconst adminPage = async (req, res) => {\n  return res.render(\"manage/index.ejs\");\n};\nconst adminPage3 = async (req, res) => {\n  return res.render(\"manage/a-index-bet/index3.ejs\");\n};\nconst adminPage5 = async (req, res) => {\n  return res.render(\"manage/a-index-bet/index5.ejs\");\n};\nconst adminPage10 = async (req, res) => {\n  return res.render(\"manage/a-index-bet/index10.ejs\");\n};\nconst adminPage5d = async (req, res) => {\n  return res.render(\"manage/5d.ejs\");\n};\nconst adminPageK3 = async (req, res) => {\n  return res.render(\"manage/k3.ejs\");\n};\nconst ctvProfilePage = async (req, res) => {\n  var phone = req.params.phone;\n  return res.render(\"manage/profileCTV.ejs\", {\n    phone\n  });\n};\nconst giftPage = async (req, res) => {\n  return res.render(\"manage/giftPage.ejs\");\n};\nconst membersPage = async (req, res) => {\n  return res.render(\"manage/members.ejs\");\n};\nconst ctvPage = async (req, res) => {\n  return res.render(\"manage/ctv.ejs\");\n};\nconst infoMember = async (req, res) => {\n  let phone = req.params.id;\n  return res.render(\"manage/profileMember.ejs\", {\n    phone\n  });\n};\nconst statistical = async (req, res) => {\n  return res.render(\"manage/statistical.ejs\");\n};\nconst rechargePage = async (req, res) => {\n  return res.render(\"manage/recharge.ejs\");\n};\nconst rechargeRecord = async (req, res) => {\n  return res.render(\"manage/rechargeRecord.ejs\");\n};\nconst withdraw = async (req, res) => {\n  return res.render(\"manage/withdraw.ejs\");\n};\nconst levelSetting = async (req, res) => {\n  return res.render(\"manage/levelSetting.ejs\");\n};\nconst CreatedSalaryRecord = async (req, res) => {\n  return res.render(\"manage/CreatedSalaryRecord.ejs\");\n};\nconst withdrawRecord = async (req, res) => {\n  return res.render(\"manage/withdrawRecord.ejs\");\n};\nconst settings = async (req, res) => {\n  return res.render(\"manage/settings.ejs\");\n};\nconst partner = ['/admin/manager/index', '/admin/manager/index/3', '/admin/manager/index/5', '/admin/manager/index/10', '/admin/manager/5d', '/admin/manager/k3', '/admin/manager/aviator', '/api/webapi/admin/wingo/money_stats', '/api/webapi/admin/totalJoin', '/api/webapi/admin/change', '/api/webapi/admin/5d/listOrders', '/api/webapi/admin/5d/editResult', '/api/webapi/admin/k3/editResult', '/api/webapi/admin/k3/listOrders', '/admin/aviatorResult'];\n// xÃ¡c nháº­n admin\nconst middlewareAdminController = async (req, res, next) => {\n  // xÃ¡c nháº­n token\n  const auth = req.cookies.auth;\n  if (!auth) {\n    return res.redirect(\"/login\");\n  }\n  const [rows] = await connection.execute(\"SELECT `token`,`level`, `status` FROM `users` WHERE `token` = ? AND veri = 1\", [auth]);\n  if (!rows) {\n    return res.redirect(\"/login\");\n  }\n  try {\n    if (auth == rows[0].token && rows[0].status == 1) {\n      if (rows[0].level == 1) {\n        res.locals.level = 1;\n        next();\n      } else if (rows[0].level == 3) {\n        if (partner.includes(req.path)) {\n          res.locals.level = 3;\n          next(); // User has permission to access the route\n        } else {\n          return res.redirect(\"/home\");\n        }\n      } else {\n        return res.redirect(\"/home\");\n      }\n    } else {\n      return res.redirect(\"/login\");\n    }\n  } catch (error) {\n    return res.redirect(\"/login\");\n  }\n};\nconst totalJoin = async (req, res) => {\n  let auth = req.cookies.auth;\n  let typeid = req.body.typeid;\n  if (!typeid) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let game = \"\";\n  if (typeid == \"1\") game = \"wingo\";\n  if (typeid == \"2\") game = \"wingo3\";\n  if (typeid == \"3\") game = \"wingo5\";\n  if (typeid == \"4\") game = \"wingo10\";\n  const [rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? \", [auth]);\n  if (rows.length > 0) {\n    const [wingoall] = await connection.query(`SELECT * FROM minutes_1 WHERE game = \"${game}\" AND status = 0 AND level = 0 ORDER BY id ASC `, [auth]);\n    const [winGo1] = await connection.execute(`SELECT * FROM wingo WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `, []);\n    const [winGo10] = await connection.execute(`SELECT * FROM wingo WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 10 `, []);\n    const [setting] = await connection.execute(`SELECT * FROM admin `, []);\n    return res.status(200).json({\n      message: \"Success\",\n      status: true,\n      datas: wingoall,\n      lotterys: winGo1,\n      list_orders: winGo10,\n      setting: setting,\n      timeStamp: timeNow\n    });\n  } else {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n};\nconst listMember = async (req, res) => {\n  let {\n    pageno,\n    limit\n  } = req.body;\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  const [users] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level != 2 ORDER BY id DESC LIMIT ${pageno}, ${limit} `);\n  const [total_users] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level != 2`);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: users,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\nconst listCTV = async (req, res) => {\n  let {\n    pageno,\n    pageto\n  } = req.body;\n  if (!pageno || !pageto) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || pageto < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  const [wingo] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level = 2 ORDER BY id DESC LIMIT ${pageno}, ${pageto} `);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: wingo\n  });\n};\nfunction formateT2(params) {\n  let result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin2(params = \"\", addHours = 0) {\n  let date = \"\";\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  let years = formateT(date.getFullYear());\n  let months = formateT(date.getMonth() + 1);\n  let days = formateT(date.getDate());\n  let hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  let minutes = formateT(date.getMinutes());\n  let seconds = formateT(date.getSeconds());\n  return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n}\nconst statistical2 = async (req, res) => {\n  const [wingo] = await connection.query(`SELECT SUM(money) as total FROM minutes_1 WHERE status = 1 `);\n  const [wingo2] = await connection.query(`SELECT SUM(money) as total FROM minutes_1 WHERE status = 2 `);\n  const [users] = await connection.query(`SELECT COUNT(id) as total FROM users WHERE status = 1 `);\n  const [users2] = await connection.query(`SELECT COUNT(id) as total FROM users WHERE status = 0 `);\n  const [recharge] = await connection.query(`SELECT SUM(money) as total FROM recharge WHERE status = 1 `);\n  const [withdraw] = await connection.query(`SELECT SUM(money) as total FROM withdraw WHERE status = 1 `);\n  const [recharge_today] = await connection.query(`SELECT SUM(money) as total FROM recharge WHERE status = 1 AND today = ?`, [timerJoin2()]);\n  const [withdraw_today] = await connection.query(`SELECT SUM(money) as total FROM withdraw WHERE status = 1 AND today = ?`, [timerJoin2()]);\n  let win = wingo[0].total;\n  let loss = wingo2[0].total;\n  let usersOnline = users[0].total;\n  let usersOffline = users2[0].total;\n  let recharges = recharge[0].total;\n  let withdraws = withdraw[0].total;\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    win: win,\n    loss: loss,\n    usersOnline: usersOnline,\n    usersOffline: usersOffline,\n    recharges: recharges,\n    withdraws: withdraws,\n    rechargeToday: recharge_today[0].total,\n    withdrawToday: withdraw_today[0].total\n  });\n};\nconst changeAdmin = async (req, res) => {\n  let auth = req.cookies.auth;\n  let value = req.body.value;\n  let type = req.body.type;\n  let typeid = req.body.typeid;\n  if (!value || !type || !typeid) return res.status(200).json({\n    message: \"Failed\",\n    status: false,\n    timeStamp: timeNow\n  });\n  let game = \"\";\n  let bs = \"\";\n  if (typeid == \"1\") {\n    game = \"wingo1\";\n    bs = \"bs1\";\n  }\n  if (typeid == \"2\") {\n    game = \"wingo3\";\n    bs = \"bs3\";\n  }\n  if (typeid == \"3\") {\n    game = \"wingo5\";\n    bs = \"bs5\";\n  }\n  if (typeid == \"4\") {\n    game = \"wingo10\";\n    bs = \"bs10\";\n  }\n  switch (type) {\n    case \"change-wingo1\":\n      await connection.query(`UPDATE admin SET ${game} = ? `, [value]);\n      return res.status(200).json({\n        message: \"Editing results successfully\",\n        status: true,\n        timeStamp: timeNow\n      });\n      break;\n    case \"change-win_rate\":\n      await connection.query(`UPDATE admin SET ${bs} = ? `, [value]);\n      return res.status(200).json({\n        message: \"Editing win rate successfully\",\n        status: true,\n        timeStamp: timeNow\n      });\n      break;\n    default:\n      return res.status(200).json({\n        message: \"Failed\",\n        status: false,\n        timeStamp: timeNow\n      });\n      break;\n  }\n};\nfunction formateT(params) {\n  let result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin(params = \"\", addHours = 0) {\n  let date = \"\";\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  let years = formateT(date.getFullYear());\n  let months = formateT(date.getMonth() + 1);\n  let days = formateT(date.getDate());\n  let hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  let minutes = formateT(date.getMinutes());\n  let seconds = formateT(date.getSeconds());\n  return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n}\nconst userInfo = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.body.phone;\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let userInfo = user[0];\n  // direct subordinate all\n  const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code]);\n\n  // cáº¥p dÆ°á»i trá»±c tiáº¿p hÃ´m nay\n  let f1_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_time = f1s[i].time; // MÃ£ giá»i thiá»u f1\n    let check = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check) {\n      f1_today += 1;\n    }\n  }\n\n  // táº¥t cáº£ cáº¥p dÆ°á»i hÃ´m nay\n  let f_all_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const f1_time = f1s[i].time; // time f1\n    let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check_f1) f_all_today += 1;\n    // tá»ng f1 má»i Äc hÃ´m nay\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code; // MÃ£ giá»i thiá»u f2\n      const f2_time = f2s[i].time; // time f2\n      let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n      if (check_f2) f_all_today += 1;\n      // tá»ng f2 má»i Äc hÃ´m nay\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code; // MÃ£ giá»i thiá»u f3\n        const f3_time = f3s[i].time; // time f3\n        let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n        if (check_f3) f_all_today += 1;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code]);\n        // tá»ng f3 má»i Äc hÃ´m nay\n        for (let i = 0; i < f4s.length; i++) {\n          const f4_code = f4s[i].code; // MÃ£ giá»i thiá»u f4\n          const f4_time = f4s[i].time; // time f4\n          let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n          if (check_f4) f_all_today += 1;\n          // tá»ng f3 má»i Äc hÃ´m nay\n        }\n      }\n    }\n  }\n\n  // Tá»ng sá» f2\n  let f2 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    f2 += f2s.length;\n  }\n\n  // Tá»ng sá» f3\n  let f3 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      if (f3s.length > 0) f3 += f3s.length;\n    }\n  }\n\n  // Tá»ng sá» f4\n  let f4 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code]);\n        if (f4s.length > 0) f4 += f4s.length;\n      }\n    }\n  }\n  // console.log(\"TOTAL_F_TODAY:\" + f_all_today);\n  // console.log(\"F1: \" + f1s.length);\n  // console.log(\"F2: \" + f2);\n  // console.log(\"F3: \" + f3);\n  // console.log(\"F4: \" + f4);\n\n  const [recharge] = await connection.query(\"SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 \", [phone]);\n  const [withdraw] = await connection.query(\"SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 \", [phone]);\n  const [bank_user] = await connection.query(\"SELECT * FROM user_bank WHERE phone = ? \", [phone]);\n  const [telegram_ctv] = await connection.query(\"SELECT `telegram` FROM point_list WHERE phone = ? \", [userInfo.ctv]);\n  const [ng_moi] = await connection.query(\"SELECT `phone` FROM users WHERE code = ? \", [userInfo.invite]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: user,\n    total_r: recharge,\n    total_w: withdraw,\n    f1: f1s.length,\n    f2: f2,\n    f3: f3,\n    f4: f4,\n    bank_user: bank_user,\n    telegram: telegram_ctv[0],\n    ng_moi: ng_moi[0],\n    daily: userInfo.ctv\n  });\n};\nconst recharge = async (req, res) => {\n  let auth = req.cookies.auth;\n  if (!auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const limit = req.query.limit ? parseInt(req.query.limit) : 10;\n  const page = req.query.page ? parseInt(req.query.page) : 1;\n  const offset = (page - 1) * limit;\n  const [recharge] = await connection.query(`SELECT * FROM recharge WHERE status = 0 ORDER BY id DESC LIMIT ? OFFSET ?`, [limit, offset]);\n  const [rechargeTotalCount] = await connection.query(`SELECT COUNT(*) as totalCount FROM recharge WHERE status = 0`);\n  const [recharge2] = await connection.query(`SELECT * FROM recharge WHERE status != 0 ORDER BY id DESC LIMIT ? OFFSET ?`, [limit, offset]);\n  const [recharge2TotalCount] = await connection.query(`SELECT COUNT(*) as totalCount FROM recharge WHERE status != 0`);\n  const [withdraw] = await connection.query(`SELECT * FROM withdraw WHERE status = 0 ORDER BY id DESC LIMIT ? OFFSET ?`, [limit, offset]);\n  const [withdrawTotalCount] = await connection.query(`SELECT COUNT(*) as totalCount FROM withdraw WHERE status = 0`);\n  const [withdraw2] = await connection.query(`SELECT * FROM withdraw WHERE status != 0 ORDER BY id DESC LIMIT ? OFFSET ?`, [limit, offset]);\n  const [withdraw2TotalCount] = await connection.query(`SELECT COUNT(*) as totalCount FROM withdraw WHERE status != 0`);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: recharge,\n    datas2: recharge2,\n    datas3: withdraw,\n    datas4: withdraw2,\n    count: [rechargeTotalCount, recharge2TotalCount, withdrawTotalCount, withdraw2TotalCount]\n  });\n};\nconst settingGet = async (req, res) => {\n  try {\n    let auth = req.cookies.auth;\n    if (!auth) {\n      return res.status(200).json({\n        message: \"Failed\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    const [bank_recharge] = await connection.query(\"SELECT * FROM bank_recharge\");\n    const [bank_recharge_momo] = await connection.query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\n    const [settings] = await connection.query(\"SELECT * FROM admin \");\n    let bank_recharge_momo_data;\n    if (bank_recharge_momo.length) {\n      bank_recharge_momo_data = bank_recharge_momo[0];\n    }\n    return res.status(200).json({\n      message: \"Success\",\n      status: true,\n      settings: settings,\n      datas: bank_recharge,\n      momo: {\n        bank_name: bank_recharge_momo_data?.name_bank || \"\",\n        username: bank_recharge_momo_data?.name_user || \"\",\n        upi_id: bank_recharge_momo_data?.stk || \"\",\n        usdt_wallet_address: bank_recharge_momo_data?.qr_code_image || \"\"\n      }\n    });\n  } catch (error) {\n    console.log(error);\n    return res.status(500).json({\n      message: \"Failed\",\n      status: false\n    });\n  }\n};\nconst rechargeDuyet = async (req, res) => {\n  let auth = req.cookies.auth;\n  let id = req.body.id;\n  let type = req.body.type;\n  if (!auth || !id || !type) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  if (type == \"confirm\") {\n    const [info] = await connection.query(`SELECT * FROM recharge WHERE id = ?`, [id]);\n    const user = await getUserDataByPhone(info?.[0]?.phone);\n    console.log(user, \"user information \");\n    addUserAccountBalance({\n      money: info[0].money,\n      win_wallet: info[0].money,\n      phone: user.phone,\n      invite: user.invite,\n      id\n    });\n    if (info[0].money == 1499 && user.extra === null) {\n      console.log(\"hello world haahaha\");\n      // await connection.query(`UPDATE users SET extra = true, ekyc = false WHERE phone = ?`, [user.phone]);\n      await connection.query(\"UPDATE users SET extra = ? WHERE phone = ? AND extra IS NULL\", [false, user.phone]);\n    }\n    await connection.query(`UPDATE users SET first_recharge = true WHERE Phone = ? AND first_recharge IS NULL`, [user.phone]);\n    if (info[0].money == 699 && user.ekyc === 0) {\n      await connection.query(`UPDATE users SET extra = true, ekyc = true WHERE phone = ?`, [user.phone]);\n    }\n    return res.status(200).json({\n      message: \"Successful application confirmation\",\n      status: true,\n      datas: recharge\n    });\n  }\n  if (type == \"delete\") {\n    await connection.query(`UPDATE recharge SET status = 2 WHERE id = ?`, [id]);\n    return res.status(200).json({\n      message: \"Cancellation successful\",\n      status: true,\n      datas: recharge\n    });\n  }\n};\nconst getUserDataByPhone = async phone => {\n  let [users] = await connection.query(\"SELECT `phone`, `code`,`name_user`,`invite`,`extra`,`ekyc` FROM users WHERE `phone` = ? \", [phone]);\n  const user = users?.[0];\n  if (user === undefined || user === null) {\n    throw Error(\"Unable to get user data!\");\n  }\n  return {\n    phone: user.phone,\n    code: user.code,\n    username: user.name_user,\n    invite: user.invite,\n    extra: user.extra,\n    ekyc: user.ekyc\n  };\n};\nconst addUserAccountBalance = async ({\n  money,\n  phone,\n  invite,\n  id\n}) => {\n  const [recharge] = await connection.execute('SELECT * FROM recharge WHERE phone = ? AND status = ?', [phone, 1]);\n  if (recharge.length == 0) {\n    let bonus = 0;\n    if (money >= 5000) {\n      bonus = 0;\n    } else if (money >= 2000) {\n      bonus = 0;\n    } else if (money >= 1000) {\n      bonus = 0;\n    } else if (money >= 500) {\n      bonus = 0;\n    } else if (money >= 300) {\n      bonus = 0;\n    } else if (money >= 200) {\n      bonus = 0;\n    }\n    await connection.query(\"UPDATE users SET money = money + ?, total_money = total_money + ?,win_wallet = win_wallet + ? WHERE `phone` = ?\", [money + bonus, money + bonus, money, phone]);\n    console.log(\"sucessfully updated hahaha\");\n  } else {\n    let bonus = 0;\n    // if(money>=500){\n    //    bonus = money*0.3;\n    // }\n    // await connection.query(\"UPDATE users SET money = money + ?, total_money = total_money + ? WHERE `phone` = ?\", [money+bonus,money+bonus,phone])\n    await connection.query(\"UPDATE users SET money = money + ?, total_money = total_money + ?, win_wallet = win_wallet + ? WHERE phone = ?\", [money + bonus, money + bonus, money + bonus, phone]);\n  }\n  await connection.query(`UPDATE recharge SET status = 1 WHERE id = ?`, [id]);\n\n  //    const [user] = await connection.execute(\n  //       'SELECT * FROM users WHERE phone = ? AND FROM_UNIXTIME(time / 1000) >= NOW() - INTERVAL 10 DAY',\n  //       [phone]\n  // );\n\n  // if(user[0]){\n  //    const [recharge1] = await connection.execute(\n  //       'SELECT * FROM recharge WHERE phone = ? AND status = ? AND FROM_UNIXTIME(time / 1000) >= NOW() - INTERVAL 10 DAY ORDER BY time ASC',\n  //       [phone, 1]\n  //     );\n\n  //     let first_recharge = recharge[0];\n  //     let second_recharge = recharge[1];\n  //     let third_recharge = recharge[2];\n  //     let bonus1 = 0 ;\n\n  //     if(user[0].partner_reward1===0 && first_recharge){\n\n  //        if(total_recharge>=25000 && first_recharge>=5000){\n  //         bonus1 = 600;\n  //        }\n\n  //        else if(total_recharge>=12500 && first_recharge>=2500){\n  //          bonus1 = 300;\n  //        }\n\n  //        else if(total_recharge>=2500 && first_recharge>=500){\n  //          bonus1 = 130;\n  //        }\n\n  //        else if(total_recharge>=1000 && first_recharge>=200){\n  //          bonus1 = 60;\n  //        }\n  //     }\n\n  // }\n\n  // const total_recharge = recharge1.reduce((acc,val)=>val.money,0);\n};\nconst updateLevel = async (req, res) => {\n  try {\n    let id = req.body.id;\n    let f1 = req.body.f1;\n    let f2 = req.body.f2;\n    let f3 = req.body.f3;\n    let f4 = req.body.f4;\n    console.log(\"level : \" + id, f1, f2, f3, f4);\n    await connection.query(\"UPDATE `level` SET `f1`= ? ,`f2`= ? ,`f3`= ? ,`f4`= ?  WHERE `id` = ?\", [f1, f2, f3, f4, id]);\n\n    // Send a success response to the client\n    res.status(200).json({\n      message: \"Update successful\",\n      status: true\n    });\n  } catch (error) {\n    console.error(\"Error updating level:\", error);\n\n    // Send an error response to the client\n    res.status(500).json({\n      message: \"Update failed\",\n      status: false,\n      error: error.message\n    });\n  }\n};\nconst handlWithdraw = async (req, res) => {\n  let auth = req.cookies.auth;\n  let id = req.body.id;\n  let type = req.body.type;\n  if (!auth || !id || !type) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  if (type == \"confirm\") {\n    await connection.query(`UPDATE withdraw SET status = 1 WHERE id = ?`, [id]);\n    const [info] = await connection.query(`SELECT * FROM withdraw WHERE id = ?`, [id]);\n    const phone = info[0].phone;\n    const [userinfo] = await connection.query(`SELECT * FROM users WHERE phone = ?`, [phone]);\n    let user = userinfo[0];\n    if (user.extra == 0 && user.ekyc == null) {\n      await connection.query(`UPDATE users SET ekyc = false WHERE phone = ? AND ekyc IS NULL`, [user.phone]);\n    }\n    return res.status(200).json({\n      message: \"Successful application confirmation\",\n      status: true,\n      datas: recharge\n    });\n  }\n  if (type == \"delete\") {\n    await connection.query(`UPDATE withdraw SET status = 2 WHERE id = ?`, [id]);\n    const [info] = await connection.query(`SELECT * FROM withdraw WHERE id = ?`, [id]);\n    await connection.query(\"UPDATE users SET money = money + ? WHERE phone = ? \", [info[0].money, info[0].phone]);\n    return res.status(200).json({\n      message: \"Cancel successfully\",\n      status: true,\n      datas: recharge\n    });\n  }\n};\nconst settingBank = async (req, res) => {\n  try {\n    let auth = req.cookies.auth;\n    let name_bank = req.body.name_bank;\n    let name = req.body.name;\n    let info = req.body.info;\n    let qr = req.body.qr;\n    let typer = req.body.typer;\n    if (!auth || !typer) {\n      return res.status(200).json({\n        message: \"Failed\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    if (typer == \"bank\") {\n      await connection.query(`UPDATE bank_recharge SET name_bank = ?, name_user = ?, stk = ? WHERE type = 'bank'`, [name_bank, name, info]);\n      return res.status(200).json({\n        message: \"Successful change\",\n        status: true,\n        datas: recharge\n      });\n    }\n    if (typer == \"momo\") {\n      const [bank_recharge] = await connection.query(`SELECT * FROM bank_recharge WHERE type = 'momo'`);\n      const deleteRechargeQueries = bank_recharge.map(recharge => {\n        return deleteBankRechargeById(recharge.id);\n      });\n      await Promise.all(deleteRechargeQueries);\n\n      // await connection.query(`UPDATE bank_recharge SET name_bank = ?, name_user = ?, stk = ?, qr_code_image = ? WHERE type = 'upi'`, [name_bank, name, info, qr]);\n\n      const bankName = req.body.bank_name;\n      const username = req.body.username;\n      const upiId = req.body.upi_id;\n      const usdtWalletAddress = req.body.usdt_wallet_address;\n      await connection.query(\"INSERT INTO bank_recharge SET name_bank = ?, name_user = ?, stk = ?, qr_code_image = ?, type = 'momo'\", [bankName, username, upiId, usdtWalletAddress]);\n      return res.status(200).json({\n        message: \"Successfully changed\",\n        status: true,\n        datas: recharge\n      });\n    }\n  } catch (error) {\n    console.log(error);\n    return res.status(500).json({\n      message: \"Something went wrong!\",\n      status: false\n    });\n  }\n};\nconst deleteBankRechargeById = async id => {\n  const [recharge] = await connection.query(\"DELETE FROM bank_recharge WHERE type = 'momo' AND id = ?\", [id]);\n  return recharge;\n};\nconst settingCskh = async (req, res) => {\n  let auth = req.cookies.auth;\n  let telegram = req.body.telegram;\n  let cskh = req.body.cskh;\n  let myapp_web = req.body.myapp_web;\n  if (!auth || !cskh || !telegram) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  await connection.query(`UPDATE admin SET telegram = ?, cskh = ?, app = ?`, [telegram, cskh, myapp_web]);\n  return res.status(200).json({\n    message: \"Successful change\",\n    status: true\n  });\n};\nconst banned = async (req, res) => {\n  let auth = req.cookies.auth;\n  let id = req.body.id;\n  let type = req.body.type;\n  if (!auth || !id) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  if (type == \"open\") {\n    await connection.query(`UPDATE users SET status = 1 WHERE id = ?`, [id]);\n  }\n  if (type == \"close\") {\n    await connection.query(`UPDATE users SET status = 2 WHERE id = ?`, [id]);\n  }\n  return res.status(200).json({\n    message: \"Successful change\",\n    status: true\n  });\n};\nconst createBonus = async (req, res) => {\n  const randomString = length => {\n    var result = \"\";\n    var characters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n  function timerJoin(params = \"\", addHours = 0) {\n    let date = \"\";\n    if (params) {\n      date = new Date(Number(params));\n    } else {\n      date = new Date();\n    }\n    date.setHours(date.getHours() + addHours);\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n    return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n  }\n  const d = new Date();\n  const time = d.getTime();\n  let auth = req.cookies.auth;\n  let money = req.body.money;\n  let type = req.body.type;\n  let numberOfUsers = req.body.numberOfUsers;\n  if (!money || !auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let userInfo = user[0];\n  if (type == \"all\") {\n    let select = req.body.select;\n    if (select == \"1\") {\n      await connection.query(`UPDATE point_list SET money = money + ? WHERE level = 2`, [money]);\n    } else {\n      await connection.query(`UPDATE point_list SET money = money - ? WHERE level = 2`, [money]);\n    }\n    return res.status(200).json({\n      message: \"successful change\",\n      status: true\n    });\n  }\n  if (type == \"two\") {\n    let select = req.body.select;\n    if (select == \"1\") {\n      await connection.query(`UPDATE point_list SET money_us = money_us + ? WHERE level = 2`, [money]);\n    } else {\n      await connection.query(`UPDATE point_list SET money_us = money_us - ? WHERE level = 2`, [money]);\n    }\n    return res.status(200).json({\n      message: \"successful change\",\n      status: true\n    });\n  }\n  if (type == \"one\") {\n    let select = req.body.select;\n    let phone = req.body.phone;\n    const [user] = await connection.query(\"SELECT * FROM point_list WHERE phone = ? \", [phone]);\n    if (user.length == 0) {\n      return res.status(200).json({\n        message: \"Failed\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    if (select == \"1\") {\n      await connection.query(`UPDATE point_list SET money = money + ? WHERE level = 2 and phone = ?`, [money, phone]);\n    } else {\n      await connection.query(`UPDATE point_list SET money = money - ? WHERE level = 2 and phone = ?`, [money, phone]);\n    }\n    return res.status(200).json({\n      message: \"successful change\",\n      status: true\n    });\n  }\n  if (type == \"three\") {\n    let select = req.body.select;\n    let phone = req.body.phone;\n    const [user] = await connection.query(\"SELECT * FROM point_list WHERE phone = ? \", [phone]);\n    if (user.length == 0) {\n      return res.status(200).json({\n        message: \"account does not exist\",\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    if (select == \"1\") {\n      await connection.query(`UPDATE point_list SET money_us = money_us + ? WHERE level = 2 and phone = ?`, [money, phone]);\n    } else {\n      await connection.query(`UPDATE point_list SET money_us = money_us - ? WHERE level = 2 and phone = ?`, [money, phone]);\n    }\n    return res.status(200).json({\n      message: \"successful change\",\n      status: true\n    });\n  }\n  if (!type) {\n    let id_redenvelops = randomString(16);\n    let sql = `INSERT INTO redenvelopes SET id_redenvelope = ?, phone = ?, money = ?, used = ?, amount = ?, status = ?, time = ?`;\n    await connection.query(sql, [id_redenvelops, userInfo.phone, money, numberOfUsers, 1, 0, time]);\n    return res.status(200).json({\n      message: \"Successful change\",\n      status: true,\n      id: id_redenvelops\n    });\n  }\n};\nconst listRedenvelops = async (req, res) => {\n  let auth = req.cookies.auth;\n  const [redenvelopes] = await connection.query(\"SELECT * FROM redenvelopes ORDER BY time DESC\");\n  return res.status(200).json({\n    message: \"Successful change\",\n    status: true,\n    redenvelopes: redenvelopes\n  });\n};\nconst settingbuff = async (req, res) => {\n  let auth = req.cookies.auth;\n  let id_user = req.body.id_user;\n  let buff_acc = req.body.buff_acc;\n  let money_value = req.body.money_value;\n  if (!id_user || !buff_acc || !money_value) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user_id] = await connection.query(`SELECT * FROM users WHERE id_user = ?`, [id_user]);\n  if (user_id.length > 0) {\n    if (buff_acc == \"1\") {\n      await connection.query(`UPDATE users SET money = money + ? WHERE id_user = ?`, [money_value, id_user]);\n    }\n    if (buff_acc == \"2\") {\n      await connection.query(`UPDATE users SET money = money - ? WHERE id_user = ?`, [money_value, id_user]);\n    }\n    return res.status(200).json({\n      message: \"Successful change\",\n      status: true\n    });\n  } else {\n    return res.status(200).json({\n      message: \"Successful change\",\n      status: false\n    });\n  }\n};\nconst randomNumber = (min, max) => {\n  return String(Math.floor(Math.random() * (max - min + 1)) + min);\n};\nconst randomString = length => {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\nconst ipAddress = req => {\n  let ip = \"\";\n  if (req.headers[\"x-forwarded-for\"]) {\n    ip = req.headers[\"x-forwarded-for\"].split(\",\")[0];\n  } else if (req.connection && req.connection.remoteAddress) {\n    ip = req.connection.remoteAddress;\n  } else {\n    ip = req.ip;\n  }\n  return ip;\n};\nconst timeCreate = () => {\n  const d = new Date();\n  const time = d.getTime();\n  return time;\n};\nconst register = async (req, res) => {\n  let {\n    username,\n    password,\n    invitecode\n  } = req.body;\n  let id_user = randomNumber(10000, 99999);\n  let name_user = \"Member\" + randomNumber(10000, 99999);\n  let code = randomString(5) + randomNumber(10000, 99999);\n  let ip = ipAddress(req);\n  let time = timeCreate();\n  invitecode = \"vpIgg59711\";\n  if (!username || !password || !invitecode) {\n    return res.status(200).json({\n      message: \"ERROR!!!\",\n      status: false\n    });\n  }\n  if (!username) {\n    return res.status(200).json({\n      message: \"phone error\",\n      status: false\n    });\n  }\n  try {\n    const [check_u] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [username]);\n    if (check_u.length == 1) {\n      return res.status(200).json({\n        message: \"register account\",\n        //Sá» Äiá»n thoáº¡i ÄÃ£ ÄÆ°á»£c ÄÄng kÃ½\n        status: false\n      });\n    } else {\n      const sql = `INSERT INTO users SET \n            id_user = ?,\n            phone = ?,\n            name_user = ?,\n            password = ?,\n            money = ?,\n            level = ?,\n            code = ?,\n            invite = ?,\n            veri = ?,\n            ip_address = ?,\n            status = ?,\n            time = ?`;\n      await connection.execute(sql, [id_user, username, name_user, md5(password), 0, 2, code, invitecode, 1, ip, 1, time]);\n      await connection.execute(\"INSERT INTO point_list SET phone = ?, level = 2\", [username]);\n      return res.status(200).json({\n        message: \"registration success\",\n        //Register Sucess\n        status: true\n      });\n    }\n  } catch (error) {\n    if (error) console.log(error);\n  }\n};\nconst registerPartner = async (req, res) => {\n  let {\n    username,\n    password,\n    invitecode\n  } = req.body;\n  let id_user = randomNumber(10000, 99999);\n  let name_user = \"Member\" + randomNumber(10000, 99999);\n  let code = randomString(5) + randomNumber(10000, 99999);\n  let ip = ipAddress(req);\n  let time = timeCreate();\n  invitecode = \"vpIgg59711\";\n  if (!username || !password || !invitecode) {\n    return res.status(200).json({\n      message: \"ERROR!!!\",\n      status: false\n    });\n  }\n  if (!username) {\n    return res.status(200).json({\n      message: \"phone error\",\n      status: false\n    });\n  }\n  try {\n    const [check_u] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [username]);\n    if (check_u.length == 1) {\n      return res.status(200).json({\n        message: \"register account\",\n        //Sá» Äiá»n thoáº¡i ÄÃ£ ÄÆ°á»£c ÄÄng kÃ½\n        status: false\n      });\n    } else {\n      const sql = `INSERT INTO users SET \n            id_user = ?,\n            phone = ?,\n            name_user = ?,\n            password = ?,\n            money = ?,\n            level = ?,\n            code = ?,\n            invite = ?,\n            veri = ?,\n            ip_address = ?,\n            status = ?,\n            time = ?`;\n      await connection.execute(sql, [id_user, username, name_user, md5(password), 0, 3, code, invitecode, 1, ip, 1, time]);\n      await connection.execute(\"INSERT INTO point_list SET phone = ?, level = 2\", [username]);\n      return res.status(200).json({\n        message: \"registration success\",\n        //Register Sucess\n        status: true\n      });\n    }\n  } catch (error) {\n    if (error) console.log(error);\n  }\n};\nconst profileUser = async (req, res) => {\n  let phone = req.body.phone;\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Phone Error\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let [user] = await connection.query(`SELECT * FROM users WHERE phone = ?`, [phone]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Phone Error\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let [recharge] = await connection.query(`SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT 10`, [phone]);\n  let [withdraw] = await connection.query(`SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT 10`, [phone]);\n  return res.status(200).json({\n    message: \"Get success\",\n    status: true,\n    recharge: recharge,\n    withdraw: withdraw\n  });\n};\nconst infoCtv = async (req, res) => {\n  const phone = req.body.phone;\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Phone Error\",\n      status: false\n    });\n  }\n  let userInfo = user[0];\n  // cáº¥p dÆ°á»i trá»±c tiáº¿p all\n  const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code]);\n\n  // cáº¥p dÆ°á»i trá»±c tiáº¿p hÃ´m nay\n  let f1_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_time = f1s[i].time; // MÃ£ giá»i thiá»u f1\n    let check = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check) {\n      f1_today += 1;\n    }\n  }\n\n  // táº¥t cáº£ cáº¥p dÆ°á»i hÃ´m nay\n  let f_all_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const f1_time = f1s[i].time; // time f1\n    let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check_f1) f_all_today += 1;\n    // tá»ng f1 má»i Äc hÃ´m nay\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code; // MÃ£ giá»i thiá»u f2\n      const f2_time = f2s[i].time; // time f2\n      let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n      if (check_f2) f_all_today += 1;\n      // tá»ng f2 má»i Äc hÃ´m nay\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code; // MÃ£ giá»i thiá»u f3\n        const f3_time = f3s[i].time; // time f3\n        let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n        if (check_f3) f_all_today += 1;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code]);\n        // tá»ng f3 má»i Äc hÃ´m nay\n        for (let i = 0; i < f4s.length; i++) {\n          const f4_code = f4s[i].code; // MÃ£ giá»i thiá»u f4\n          const f4_time = f4s[i].time; // time f4\n          let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n          if (check_f4) f_all_today += 1;\n          // tá»ng f3 má»i Äc hÃ´m nay\n        }\n      }\n    }\n  }\n\n  // Tá»ng sá» f2\n  let f2 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    f2 += f2s.length;\n  }\n\n  // Tá»ng sá» f3\n  let f3 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      if (f3s.length > 0) f3 += f3s.length;\n    }\n  }\n\n  // Tá»ng sá» f4\n  let f4 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code]);\n        if (f4s.length > 0) f4 += f4s.length;\n      }\n    }\n  }\n  const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone]);\n  const [list_mem_baned] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 2 AND veri = 1 \", [phone]);\n  let total_recharge = 0;\n  let total_withdraw = 0;\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [recharge] = await connection.query(\"SELECT SUM(money) as money FROM recharge WHERE phone = ? AND status = 1 \", [phone]);\n    const [withdraw] = await connection.query(\"SELECT SUM(money) as money FROM withdraw WHERE phone = ? AND status = 1 \", [phone]);\n    if (recharge[0].money) {\n      total_recharge += Number(recharge[0].money);\n    }\n    if (withdraw[0].money) {\n      total_withdraw += Number(withdraw[0].money);\n    }\n  }\n  let total_recharge_today = 0;\n  let total_withdraw_today = 0;\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [recharge_today] = await connection.query(\"SELECT `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone]);\n    const [withdraw_today] = await connection.query(\"SELECT `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone]);\n    for (let i = 0; i < recharge_today.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(recharge_today[i].time);\n      if (time == today) {\n        total_recharge_today += recharge_today[i].money;\n      }\n    }\n    for (let i = 0; i < withdraw_today.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(withdraw_today[i].time);\n      if (time == today) {\n        total_withdraw_today += withdraw_today[i].money;\n      }\n    }\n  }\n  let win = 0;\n  let loss = 0;\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [wins] = await connection.query(\"SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 1 \", [phone]);\n    const [losses] = await connection.query(\"SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 2 \", [phone]);\n    for (let i = 0; i < wins.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(wins[i].time);\n      if (time == today) {\n        win += wins[i].money;\n      }\n    }\n    for (let i = 0; i < losses.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(losses[i].time);\n      if (time == today) {\n        loss += losses[i].money;\n      }\n    }\n  }\n  let list_mems = [];\n  const [list_mem_today] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone]);\n  for (let i = 0; i < list_mem_today.length; i++) {\n    let today = timerJoin();\n    let time = timerJoin(list_mem_today[i].time);\n    if (time == today) {\n      list_mems.push(list_mem_today[i]);\n    }\n  }\n  const [point_list] = await connection.query(\"SELECT * FROM point_list WHERE phone = ? \", [phone]);\n  let moneyCTV = point_list[0].money;\n  let list_recharge_news = [];\n  let list_withdraw_news = [];\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [recharge_today] = await connection.query(\"SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone]);\n    const [withdraw_today] = await connection.query(\"SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone]);\n    for (let i = 0; i < recharge_today.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(recharge_today[i].time);\n      if (time == today) {\n        list_recharge_news.push(recharge_today[i]);\n      }\n    }\n    for (let i = 0; i < withdraw_today.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(withdraw_today[i].time);\n      if (time == today) {\n        list_withdraw_news.push(withdraw_today[i]);\n      }\n    }\n  }\n  const [redenvelopes_used] = await connection.query(\"SELECT * FROM redenvelopes_used WHERE phone = ? \", [phone]);\n  let redenvelopes_used_today = [];\n  for (let i = 0; i < redenvelopes_used.length; i++) {\n    let today = timerJoin();\n    let time = timerJoin(redenvelopes_used[i].time);\n    if (time == today) {\n      redenvelopes_used_today.push(redenvelopes_used[i]);\n    }\n  }\n  const [financial_details] = await connection.query(\"SELECT * FROM financial_details WHERE phone = ? \", [phone]);\n  let financial_details_today = [];\n  for (let i = 0; i < financial_details.length; i++) {\n    let today = timerJoin();\n    let time = timerJoin(financial_details[i].time);\n    if (time == today) {\n      financial_details_today.push(financial_details[i]);\n    }\n  }\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: user,\n    f1: f1s.length,\n    f2: f2,\n    f3: f3,\n    f4: f4,\n    list_mems: list_mems,\n    total_recharge: total_recharge,\n    total_withdraw: total_withdraw,\n    total_recharge_today: total_recharge_today,\n    total_withdraw_today: total_withdraw_today,\n    list_mem_baned: list_mem_baned.length,\n    win: win,\n    loss: loss,\n    list_recharge_news: list_recharge_news,\n    list_withdraw_news: list_withdraw_news,\n    moneyCTV: moneyCTV,\n    redenvelopes_used: redenvelopes_used_today,\n    financial_details_today: financial_details_today\n  });\n};\nconst infoCtv2 = async (req, res) => {\n  const phone = req.body.phone;\n  const timeDate = req.body.timeDate;\n  function timerJoin(params = \"\", addHours = 0) {\n    let date = \"\";\n    if (params) {\n      date = new Date(Number(params));\n    } else {\n      date = new Date();\n    }\n    date.setHours(date.getHours() + addHours);\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n    return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Phone Error\",\n      status: false\n    });\n  }\n  let userInfo = user[0];\n  const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone]);\n  let list_mems = [];\n  const [list_mem_today] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone]);\n  for (let i = 0; i < list_mem_today.length; i++) {\n    let today = timeDate;\n    let time = timerJoin(list_mem_today[i].time);\n    if (time == today) {\n      list_mems.push(list_mem_today[i]);\n    }\n  }\n  let list_recharge_news = [];\n  let list_withdraw_news = [];\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [recharge_today] = await connection.query(\"SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone]);\n    const [withdraw_today] = await connection.query(\"SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone]);\n    for (let i = 0; i < recharge_today.length; i++) {\n      let today = timeDate;\n      let time = timerJoin(recharge_today[i].time);\n      if (time == today) {\n        list_recharge_news.push(recharge_today[i]);\n      }\n    }\n    for (let i = 0; i < withdraw_today.length; i++) {\n      let today = timeDate;\n      let time = timerJoin(withdraw_today[i].time);\n      if (time == today) {\n        list_withdraw_news.push(withdraw_today[i]);\n      }\n    }\n  }\n  const [redenvelopes_used] = await connection.query(\"SELECT * FROM redenvelopes_used WHERE phone = ? \", [phone]);\n  let redenvelopes_used_today = [];\n  for (let i = 0; i < redenvelopes_used.length; i++) {\n    let today = timeDate;\n    let time = timerJoin(redenvelopes_used[i].time);\n    if (time == today) {\n      redenvelopes_used_today.push(redenvelopes_used[i]);\n    }\n  }\n  const [financial_details] = await connection.query(\"SELECT * FROM financial_details WHERE phone = ? \", [phone]);\n  let financial_details_today = [];\n  for (let i = 0; i < financial_details.length; i++) {\n    let today = timeDate;\n    let time = timerJoin(financial_details[i].time);\n    if (time == today) {\n      financial_details_today.push(financial_details[i]);\n    }\n  }\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: user,\n    list_mems: list_mems,\n    list_recharge_news: list_recharge_news,\n    list_withdraw_news: list_withdraw_news,\n    redenvelopes_used: redenvelopes_used_today,\n    financial_details_today: financial_details_today\n  });\n};\nconst listRechargeMem = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.params.phone;\n  let {\n    pageno,\n    limit\n  } = req.body;\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0 || auths.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let {\n    token,\n    password,\n    otp,\n    level,\n    ...userInfo\n  } = user[0];\n  const [recharge] = await connection.query(`SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n  const [total_users] = await connection.query(`SELECT * FROM recharge WHERE phone = ?`, [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: recharge,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\nconst listWithdrawMem = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.params.phone;\n  let {\n    pageno,\n    limit\n  } = req.body;\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0 || auths.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let {\n    token,\n    password,\n    otp,\n    level,\n    ...userInfo\n  } = user[0];\n  const [withdraw] = await connection.query(`SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n  const [total_users] = await connection.query(`SELECT * FROM withdraw WHERE phone = ?`, [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: withdraw,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\nconst listRedenvelope = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.params.phone;\n  let {\n    pageno,\n    limit\n  } = req.body;\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0 || auths.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let {\n    token,\n    password,\n    otp,\n    level,\n    ...userInfo\n  } = user[0];\n  const [redenvelopes_used] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n  const [total_users] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ?`, [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: redenvelopes_used,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\n// Level Setting get\n\nconst getLevelInfo = async (req, res) => {\n  const [rows] = await connection.query(\"SELECT * FROM `level`\");\n  if (!rows) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false\n    });\n  }\n  console.log(\"asdasdasd : \" + rows);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    data: {},\n    rows: rows\n  });\n\n  // const [recharge] = await connection.query('SELECT * FROM recharge WHERE `phone` = ? AND status = 1', [rows[0].phone]);\n  // let totalRecharge = 0;\n  // recharge.forEach((data) => {\n  //     totalRecharge += data.money;\n  // });\n  // const [withdraw] = await connection.query('SELECT * FROM withdraw WHERE `phone` = ? AND status = 1', [rows[0].phone]);\n  // let totalWithdraw = 0;\n  // withdraw.forEach((data) => {\n  //     totalWithdraw += data.money;\n  // });\n\n  // const { id, password, ip, veri, ip_address, status, time, token, ...others } = rows[0];\n  // return res.status(200).json({\n  //     message: 'Success',\n  //     status: true,\n  //     data: {\n  //         code: others.code,\n  //         id_user: others.id_user,\n  //         name_user: others.name_user,\n  //         phone_user: others.phone,\n  //         money_user: others.money,\n  //     },\n  //     totalRecharge: totalRecharge,\n  //     totalWithdraw: totalWithdraw,\n  //     timeStamp: timeNow,\n  // });\n};\nconst listBet = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.params.phone;\n  let {\n    pageno,\n    limit\n  } = req.body;\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0 || auths.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let {\n    token,\n    password,\n    otp,\n    level,\n    ...userInfo\n  } = user[0];\n  const [listBet] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0 ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n  const [total_users] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0`, [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: listBet,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\nconst listBetAviator = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.params.phone;\n  let {\n    pageno,\n    limit\n  } = req.body;\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0 || auths.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let {\n    token,\n    password,\n    otp,\n    level,\n    ...userInfo\n  } = user[0];\n\n  // const [listBet] = await connection.query(`SELECT * FROM aviator_result WHERE phone = ? AND status != 0 ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone])\n  const [listBet] = await connection.execute(`SELECT ar.*, \n              ar.status AS ar_status,  -- Ensure status is taken from aviator_result\n              DATE_FORMAT(ar.time, '%Y-%m-%d %H:%i:%s') AS formatted_time,\n              a.result\n       FROM aviator_result ar\n       JOIN aviator a ON ar.period = a.id\n       WHERE ar.phone = ?\n       ORDER BY ar.period DESC\n       LIMIT ?, ?`,\n  // Reverse order by period\n  [phone, pageno, limit]);\n  const [total_users] = await connection.query(`SELECT * FROM aviator_result WHERE phone = ? AND status != 0`, [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: listBet,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\nconst listOrderOld = async (req, res) => {\n  let {\n    gameJoin\n  } = req.body;\n  let checkGame = [\"1\", \"3\", \"5\", \"10\"].includes(String(gameJoin));\n  if (!checkGame) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  let game = Number(gameJoin);\n  let join = \"\";\n  if (game == 1) join = \"k5d\";\n  if (game == 3) join = \"k5d3\";\n  if (game == 5) join = \"k5d5\";\n  if (game == 10) join = \"k5d10\";\n  const [k5d] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 10 `);\n  const [period] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n  const [waiting] = await connection.query(`SELECT phone, money, price, amount, bet FROM result_5d WHERE status = 0 AND level = 0 AND game = '${game}' ORDER BY id ASC `);\n  const [settings] = await connection.query(`SELECT ${join} FROM admin`);\n  if (k5d.length == 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!k5d[0] || !period[0]) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: false\n    });\n  }\n  return res.status(200).json({\n    code: 0,\n    msg: \"Get success\",\n    data: {\n      gameslist: k5d\n    },\n    bet: waiting,\n    settings: settings,\n    join: join,\n    period: period[0].period,\n    status: true\n  });\n};\nconst listOrderOldK3 = async (req, res) => {\n  let {\n    gameJoin\n  } = req.body;\n  let checkGame = [\"1\", \"3\", \"5\", \"10\"].includes(String(gameJoin));\n  if (!checkGame) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  let game = Number(gameJoin);\n  let join = \"\";\n  if (game == 1) join = \"k3d\";\n  if (game == 3) join = \"k3d3\";\n  if (game == 5) join = \"k3d5\";\n  if (game == 10) join = \"k3d10\";\n  const [k5d] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 10 `);\n  const [period] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n  const [waiting] = await connection.query(`SELECT phone, money, price, typeGame, amount, bet FROM result_k3 WHERE status = 0 AND level = 0 AND game = '${game}' ORDER BY id ASC `);\n  const [settings] = await connection.query(`SELECT ${join} FROM admin`);\n  if (k5d.length == 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!k5d[0] || !period[0]) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: false\n    });\n  }\n  return res.status(200).json({\n    code: 0,\n    msg: \"Get Success\",\n    data: {\n      gameslist: k5d\n    },\n    bet: waiting,\n    settings: settings,\n    join: join,\n    period: period[0].period,\n    status: true\n  });\n};\nconst editResult = async (req, res) => {\n  let {\n    game,\n    list\n  } = req.body;\n  if (!list || !game) {\n    return res.status(200).json({\n      message: \"ERROR!!!\",\n      status: false\n    });\n  }\n  let join = \"\";\n  if (game == 1) join = \"k5d\";\n  if (game == 3) join = \"k5d3\";\n  if (game == 5) join = \"k5d5\";\n  if (game == 10) join = \"k5d10\";\n  const sql = `UPDATE admin SET ${join} = ?`;\n  await connection.execute(sql, [list]);\n  return res.status(200).json({\n    message: \"Editing is successful\",\n    //Register Sucess\n    status: true\n  });\n};\nconst editResult2 = async (req, res) => {\n  let {\n    game,\n    list\n  } = req.body;\n  if (!list || !game) {\n    return res.status(200).json({\n      message: \"ERROR!!!\",\n      status: false\n    });\n  }\n  let join = \"\";\n  if (game == 1) join = \"k3d\";\n  if (game == 3) join = \"k3d3\";\n  if (game == 5) join = \"k3d5\";\n  if (game == 10) join = \"k3d10\";\n  const sql = `UPDATE admin SET ${join} = ?`;\n  await connection.execute(sql, [list]);\n  return res.status(200).json({\n    message: \"Editing is successful\",\n    //Register Sucess\n    status: true\n  });\n};\nconst CreatedSalary = async (req, res) => {\n  try {\n    const phone = req.body.phone;\n    const amount = req.body.amount;\n    const type = req.body.type;\n    const now = new Date();\n    const formattedTime = now.toLocaleString(\"en-US\", {\n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      hour12: true\n    });\n\n    // Check if the phone number is a 10-digit number\n    if (!/^\\d{10}$/.test(phone)) {\n      return res.status(400).json({\n        message: \"ERROR!!! Invalid phone number. Please provide a 10-digit phone number.\",\n        status: false\n      });\n    }\n\n    // Check if user with the given phone number exists\n    const checkUserQuery = \"SELECT * FROM `users` WHERE phone = ?\";\n    const [existingUser] = await connection.execute(checkUserQuery, [phone]);\n    if (existingUser.length === 0) {\n      // If user doesn't exist, return an error\n      return res.status(400).json({\n        message: \"ERROR!!! User with the provided phone number does not exist.\",\n        status: false\n      });\n    }\n\n    // If user exists, update the 'users' table\n    const updateUserQuery = \"UPDATE `users` SET `money` = `money` + ? WHERE phone = ?\";\n    await connection.execute(updateUserQuery, [amount, phone]);\n\n    // Insert record into 'salary' table\n    const insertSalaryQuery = \"INSERT INTO salary (phone, amount, type, time) VALUES (?, ?, ?, ?)\";\n    await connection.execute(insertSalaryQuery, [phone, amount, type, formattedTime]);\n    res.status(200).json({\n      message: \"Salary record created successfully\"\n    });\n  } catch (error) {\n    console.error(error);\n    res.status(500).json({\n      error: \"Internal server error\"\n    });\n  }\n};\nconst getSalary = async (req, res) => {\n  const [rows] = await connection.query(`SELECT * FROM salary ORDER BY time DESC`);\n  if (!rows) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false\n    });\n  }\n  console.log(\"asdasdasd : \" + rows);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    data: {},\n    rows: rows\n  });\n};\nconst getWingoBatingAmountOfOptions = async (req, res) => {\n  try {\n    let gameTime = parseInt(req.query.gameTime);\n    if ([1, 3, 5, 10].indexOf(gameTime) == -1) {\n      return res.status(400).json({\n        message: \"Invalid game time\",\n        status: false\n      });\n    }\n    let gameName;\n    if (gameTime == 1) gameName = \"wingo\";\n    if (gameTime == 3) gameName = \"wingo3\";\n    if (gameTime == 5) gameName = \"wingo5\";\n    if (gameTime == 10) gameName = \"wingo10\";\n    const betForNumbersOptions = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"];\n    const betForColorsOptions = [{\n      label: \"red\",\n      value: \"d\"\n    }, {\n      label: \"voilet\",\n      value: \"t\"\n    }, {\n      label: \"green\",\n      value: \"x\"\n    }];\n    const betForBigSmallOptions = [{\n      label: \"big\",\n      value: \"l\"\n    }, {\n      label: \"small\",\n      value: \"n\"\n    }];\n    let amountByNumberList = [];\n    let amountByColorsList = [];\n    let amountByBigSmallList = [];\n    for (const bet of betForNumbersOptions) {\n      const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM minutes_1 WHERE bet = '${bet}' AND game = '${gameName}' AND status = 0`);\n      const totalMoney = result[0].totalMoney;\n      amountByNumberList.push({\n        bet: bet,\n        totalMoney: totalMoney || 0\n      });\n    }\n    for (const bet of betForColorsOptions) {\n      const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM minutes_1 WHERE bet = '${bet.value}' AND game = '${gameName}' AND status = 0`);\n      const totalMoney = result[0].totalMoney;\n      amountByColorsList.push({\n        bet: bet.label,\n        totalMoney: totalMoney || 0\n      });\n    }\n    for (const bet of betForBigSmallOptions) {\n      const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM minutes_1 WHERE bet = '${bet.value}' AND game = '${gameName}' AND status = 0`);\n      const totalMoney = result[0].totalMoney;\n      amountByBigSmallList.push({\n        bet: bet.label,\n        totalMoney: totalMoney || 0\n      });\n    }\n    return res.status(200).json({\n      message: \"Success\",\n      status: true,\n      data: {\n        amountByNumberList: amountByNumberList,\n        amountByColorsList: amountByColorsList,\n        amountByBigSmallList: amountByBigSmallList\n      }\n    });\n  } catch (error) {\n    console.log(error);\n    return res.status(500).json({\n      message: \"Internal server error\",\n      status: false\n    });\n  }\n};\nconst getK3BatingAmountOfOptions = async (req, res) => {\n  try {\n    let gameTime = parseInt(req.query.gameTime);\n    if ([1, 3, 5, 10].indexOf(gameTime) == -1) {\n      return res.status(400).json({\n        message: \"Invalid game time\",\n        status: false\n      });\n    }\n    let gameName;\n    if (gameTime == 1) gameName = \"1\";\n    if (gameTime == 3) gameName = \"3\";\n    if (gameTime == 5) gameName = \"5\";\n    if (gameTime == 10) gameName = \"10\";\n    const betForNumbersOptions = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18];\n    const betForGroupOptions = [{\n      label: \"big\",\n      value: \"b\"\n    }, {\n      label: \"small\",\n      value: \"s\"\n    }, {\n      label: \"odd\",\n      value: \"l\"\n    }, {\n      label: \"even\",\n      value: \"c\"\n    }];\n    const betFor2SameOptions = [{\n      label: \"11\",\n      value: \"11\"\n    }, {\n      label: \"22\",\n      value: \"22\"\n    }, {\n      label: \"33\",\n      value: \"33\"\n    }, {\n      label: \"44\",\n      value: \"44\"\n    }, {\n      label: \"55\",\n      value: \"55\"\n    }, {\n      label: \"66\",\n      value: \"66\"\n    }];\n    const betFor3SameOptions = [{\n      label: \"111\",\n      value: \"111\"\n    }, {\n      label: \"222\",\n      value: \"222\"\n    }, {\n      label: \"333\",\n      value: \"333\"\n    }, {\n      label: \"444\",\n      value: \"444\"\n    }, {\n      label: \"555\",\n      value: \"555\"\n    }, {\n      label: \"666\",\n      value: \"666\"\n    }];\n    let amountByNumberTotalList = [];\n    let amountByGroupTotalList = [];\n    let amountBy2SameList = [];\n    let amountBy3SameList = [];\n    for (const bet of betForNumbersOptions) {\n      const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_k3 WHERE bet LIKE '%${bet}%' AND game = '${gameName}' AND status = 0 AND typeGame = 'total'`);\n      const totalMoney = result[0].totalMoney;\n      amountByNumberTotalList.push({\n        bet: bet,\n        totalMoney: totalMoney || 0\n      });\n    }\n    for (const bet of betForGroupOptions) {\n      const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_k3 WHERE bet LIKE '%${bet.value}%' AND game = '${gameName}' AND status = 0 AND typeGame = 'total'`);\n      const totalMoney = result[0].totalMoney;\n      amountByGroupTotalList.push({\n        bet: bet.label,\n        totalMoney: totalMoney || 0\n      });\n    }\n    for (const bet of betFor2SameOptions) {\n      const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_k3 WHERE bet LIKE '%${bet.value}%' AND game = '${gameName}' AND status = 0 AND typeGame = 'two-same'`);\n      const totalMoney = result[0].totalMoney;\n      amountBy2SameList.push({\n        bet: bet.label,\n        totalMoney: totalMoney || 0\n      });\n    }\n    for (const bet of betFor3SameOptions) {\n      const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_k3 WHERE bet LIKE '%${bet.value}%' AND game = '${gameName}' AND status = 0 AND typeGame = 'three-same'`);\n      const totalMoney = result[0].totalMoney;\n      amountBy3SameList.push({\n        bet: bet.label,\n        totalMoney: totalMoney || 0\n      });\n    }\n    return res.status(200).json({\n      message: \"Success\",\n      status: true,\n      data: {\n        amountByNumberTotalList: amountByNumberTotalList,\n        amountByGroupTotalList: amountByGroupTotalList,\n        amountBy2SameList: amountBy2SameList,\n        amountBy3SameList: amountBy3SameList\n      }\n    });\n  } catch (error) {\n    console.log(error);\n    return res.status(500).json({\n      message: \"Internal server error\",\n      status: false\n    });\n  }\n};\nconst get5dBatingAmountOfOptions = async (req, res) => {\n  try {\n    let gameTime = parseInt(req.query.gameTime);\n    if ([1, 3, 5, 10].indexOf(gameTime) == -1) {\n      return res.status(400).json({\n        message: \"Invalid game time\",\n        status: false\n      });\n    }\n    let gameName;\n    if (gameTime == 1) gameName = \"1\";\n    if (gameTime == 3) gameName = \"3\";\n    if (gameTime == 5) gameName = \"5\";\n    if (gameTime == 10) gameName = \"10\";\n    const counterPositionList = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n    const posibleNumberList = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    const posibleNumberTypeList = [{\n      label: \"big\",\n      value: \"b\"\n    }, {\n      label: \"small\",\n      value: \"s\"\n    }, {\n      label: \"odd\",\n      value: \"l\"\n    }, {\n      label: \"even\",\n      value: \"c\"\n    }];\n    let data = [];\n    for (const position of counterPositionList) {\n      for (const posibleNumber of posibleNumberList) {\n        const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_5d WHERE bet LIKE '%${posibleNumber}%' AND game = '${gameName}' AND status = 0 AND join_bet = '${position}'`);\n        const totalMoney = result[0].totalMoney;\n        data.push({\n          position: position,\n          bet: posibleNumber,\n          totalMoney: totalMoney || 0\n        });\n      }\n      for (const posibleNumberType of posibleNumberTypeList) {\n        const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_5d WHERE bet = '${posibleNumberType.value}' AND game = '${gameName}' AND status = 0 AND join_bet = '${position}'`);\n        const totalMoney = result[0].totalMoney;\n        data.push({\n          position: position,\n          bet: posibleNumberType.label,\n          totalMoney: totalMoney || 0\n        });\n      }\n    }\n    for (const posibleNumberType of posibleNumberTypeList) {\n      const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_5d WHERE bet = '${posibleNumberType.value}' AND game = '${gameName}' AND status = 0 AND join_bet = 'total'`);\n      const totalMoney = result[0].totalMoney;\n      data.push({\n        position: \"total\",\n        bet: posibleNumberType.label,\n        totalMoney: totalMoney || 0\n      });\n    }\n    return res.status(200).json({\n      message: \"Success\",\n      status: true,\n      data: data\n    });\n  } catch (error) {\n    console.log(error);\n    return res.status(500).json({\n      message: \"Internal server error\",\n      status: false\n    });\n  }\n};\nconst addNotification = async (req, res) => {\n  const {\n    title,\n    message\n  } = req.body;\n  if (!title || !message) {\n    return res.status(200).json({\n      message: \"Please Enter Valid Data\",\n      status: false\n    });\n  }\n  try {\n    await connection.execute('INSERT INTO notification SET title = ?,message = ?', [title, message]);\n    return res.status(200).json({\n      message: \"Success\",\n      status: true\n    });\n  } catch (error) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: false\n    });\n  }\n};\nconst getPool = async (req, res) => {\n  const [pool] = await connection.execute('select total_pool from admin');\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    data: pool[0].total_pool\n  });\n};\nconst updatePool = async (req, res) => {\n  const {\n    amount\n  } = req.body;\n  if (!amount) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: false\n    });\n  }\n  try {\n    await connection.execute('update admin set total_pool = ?', [parseFloat(amount)]);\n    const [pool] = await connection.execute('select total_pool from admin');\n    return res.status(200).json({\n      message: \"Success\",\n      status: true,\n      data: pool[0].total_pool\n    });\n  } catch (error) {\n    return res.status(200).json({\n      message: \"Error!\",\n      status: false\n    });\n  }\n};\nconst increaseWallet = async (req, res) => {\n  const {\n    amount,\n    phone\n  } = req.body;\n  if (!amount || !phone) {\n    return res.status(200).json({\n      message: \"Please Enter Details!\",\n      status: false\n    });\n  }\n  const [user] = await connection.execute('select * from users where phone = ?', [phone]);\n  if (!user[0] || !user) {\n    return res.status(200).json({\n      message: \"Incorrect phone number\",\n      status: false\n    });\n  }\n  try {\n    await connection.execute('update users set money = money + ? where phone = ?', [amount, phone]);\n    return res.status(200).json({\n      message: \"Success\",\n      status: true\n    });\n  } catch (error) {\n    return res.status(200).json({\n      message: \"Incorrect phone number\",\n      status: false\n    });\n  }\n};\nconst adminPageAviator = async (req, res) => {\n  return res.render('manage/aviator.ejs');\n};\nconst aviatorResult = async (req, res) => {\n  const {\n    value\n  } = req.body;\n  const floatValue = parseFloat(value);\n  if (isNaN(floatValue) || !isFinite(floatValue)) {\n    return res.json({\n      error: \"Invalid number value\",\n      status: false\n    });\n  }\n  await connection.execute('UPDATE admin SET aviator = ?', [floatValue]);\n  return res.json({\n    status: true,\n    message: 'SUCCESS'\n  });\n};\nconst bulkSmsPage = async (req, res) => {\n  return res.render('manage/bulkMsg.ejs');\n};\nconst filteredUser = async (req, res) => {\n  let {\n    recharge,\n    start,\n    end\n  } = req.body;\n  console.log(recharge, start, end, 'data before');\n  if (!start) {\n    start = null;\n  } else {\n    start = new Date(start).getTime();\n  }\n  if (!end) {\n    end = null;\n  } else {\n    end = new Date(end).getTime();\n  }\n  recharge = recharge && !isNaN(Number(recharge)) ? Number(recharge) : null;\n  console.log(recharge, start, end, 'data');\n\n  // Build query with parameter placeholders\n  let query = `SELECT * FROM users WHERE 1=1`;\n  let queryParams = [];\n\n  // Add the recharge filter if recharge is provided (and is a valid number)\n  if (recharge !== null) {\n    query += ` AND total_money <= ?`;\n    queryParams.push(recharge);\n  }\n\n  // Add the time range filters based on start and end\n  if (start && end) {\n    query += ` AND time BETWEEN ? AND ?`;\n    queryParams.push(start, end);\n  } else if (start) {\n    query += ` AND time >= ?`;\n    queryParams.push(start);\n  } else if (end) {\n    query += ` AND time <= ?`;\n    queryParams.push(end);\n  }\n  console.log(query, queryParams, 'hello');\n  try {\n    const [users] = await connection.execute(query, queryParams);\n    return res.json({\n      status: true,\n      data: users\n    });\n  } catch (error) {\n    console.error(error);\n    return res.json({\n      status: false,\n      message: 'Invalid Data'\n    });\n  }\n};\nmodule.exports = {\n  adminPage,\n  adminPage3,\n  adminPage5,\n  adminPage10,\n  totalJoin,\n  middlewareAdminController,\n  changeAdmin,\n  membersPage,\n  listMember,\n  infoMember,\n  userInfo,\n  statistical,\n  statistical2,\n  rechargePage,\n  recharge,\n  rechargeDuyet,\n  rechargeRecord,\n  withdrawRecord,\n  withdraw,\n  levelSetting,\n  handlWithdraw,\n  settings,\n  editResult2,\n  settingBank,\n  settingGet,\n  settingCskh,\n  settingbuff,\n  register,\n  ctvPage,\n  listCTV,\n  profileUser,\n  ctvProfilePage,\n  infoCtv,\n  infoCtv2,\n  giftPage,\n  createBonus,\n  listRedenvelops,\n  banned,\n  listRechargeMem,\n  listWithdrawMem,\n  getLevelInfo,\n  listRedenvelope,\n  listBet,\n  adminPage5d,\n  listOrderOld,\n  listOrderOldK3,\n  editResult,\n  adminPageK3,\n  updateLevel,\n  CreatedSalaryRecord,\n  CreatedSalary,\n  getSalary,\n  getWingoBatingAmountOfOptions,\n  getK3BatingAmountOfOptions,\n  get5dBatingAmountOfOptions,\n  addNotification,\n  getPool,\n  updatePool,\n  increaseWallet,\n  listBetAviator,\n  adminPageAviator,\n  aviatorResult,\n  bulkSmsPage,\n  filteredUser,\n  registerPartner\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["connection","require","jwt","md5","config","timeNow","Date","now","adminPage","req","res","render","adminPage3","adminPage5","adminPage10","adminPage5d","adminPageK3","ctvProfilePage","phone","params","giftPage","membersPage","ctvPage","infoMember","id","statistical","rechargePage","rechargeRecord","withdraw","levelSetting","CreatedSalaryRecord","withdrawRecord","settings","partner","middlewareAdminController","next","auth","cookies","redirect","rows","execute","token","status","level","locals","includes","path","error","totalJoin","typeid","body","json","message","timeStamp","game","query","length","wingoall","winGo1","winGo10","setting","datas","lotterys","list_orders","listMember","pageno","limit","code","msg","data","gameslist","users","total_users","page_total","Math","ceil","listCTV","pageto","wingo","formateT2","result","timerJoin2","addHours","date","Number","setHours","getHours","years","formateT","getFullYear","months","getMonth","days","getDate","hours","ampm","minutes","getMinutes","seconds","getSeconds","statistical2","wingo2","users2","recharge","recharge_today","withdraw_today","win","total","loss","usersOnline","usersOffline","recharges","withdraws","rechargeToday","withdrawToday","changeAdmin","value","type","bs","timerJoin","userInfo","user","f1s","f1_today","i","f1_time","time","check","f_all_today","f1_code","check_f1","f2s","f2_code","f2_time","check_f2","f3s","f3_code","f3_time","check_f3","f4s","f4_code","f4_time","check_f4","f2","f3","f4","bank_user","telegram_ctv","ctv","ng_moi","invite","total_r","total_w","f1","telegram","daily","parseInt","page","offset","rechargeTotalCount","recharge2","recharge2TotalCount","withdrawTotalCount","withdraw2","withdraw2TotalCount","datas2","datas3","datas4","count","settingGet","bank_recharge","bank_recharge_momo","bank_recharge_momo_data","momo","bank_name","name_bank","username","name_user","upi_id","stk","usdt_wallet_address","qr_code_image","console","log","rechargeDuyet","info","getUserDataByPhone","addUserAccountBalance","money","win_wallet","extra","ekyc","undefined","Error","bonus","updateLevel","handlWithdraw","userinfo","settingBank","name","qr","typer","deleteRechargeQueries","map","deleteBankRechargeById","Promise","all","bankName","upiId","usdtWalletAddress","settingCskh","cskh","myapp_web","banned","createBonus","randomString","characters","charactersLength","charAt","floor","random","d","getTime","numberOfUsers","select","id_redenvelops","sql","listRedenvelops","redenvelopes","settingbuff","id_user","buff_acc","money_value","user_id","randomNumber","min","max","String","ipAddress","ip","headers","split","remoteAddress","timeCreate","register","password","invitecode","check_u","registerPartner","profileUser","infoCtv","list_mem","list_mem_baned","total_recharge","total_withdraw","total_recharge_today","total_withdraw_today","today","wins","losses","list_mems","list_mem_today","push","point_list","moneyCTV","list_recharge_news","list_withdraw_news","redenvelopes_used","redenvelopes_used_today","financial_details","financial_details_today","infoCtv2","timeDate","listRechargeMem","auths","otp","listWithdrawMem","listRedenvelope","getLevelInfo","listBet","listBetAviator","listOrderOld","gameJoin","checkGame","join","k5d","period","waiting","bet","listOrderOldK3","editResult","list","editResult2","CreatedSalary","amount","formattedTime","toLocaleString","year","month","day","hour","minute","second","hour12","test","checkUserQuery","existingUser","updateUserQuery","insertSalaryQuery","getSalary","getWingoBatingAmountOfOptions","gameTime","indexOf","gameName","betForNumbersOptions","betForColorsOptions","label","betForBigSmallOptions","amountByNumberList","amountByColorsList","amountByBigSmallList","totalMoney","getK3BatingAmountOfOptions","betForGroupOptions","betFor2SameOptions","betFor3SameOptions","amountByNumberTotalList","amountByGroupTotalList","amountBy2SameList","amountBy3SameList","get5dBatingAmountOfOptions","counterPositionList","posibleNumberList","posibleNumberTypeList","position","posibleNumber","posibleNumberType","addNotification","title","getPool","pool","total_pool","updatePool","parseFloat","increaseWallet","adminPageAviator","aviatorResult","floatValue","isNaN","isFinite","bulkSmsPage","filteredUser","start","end","queryParams","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["adminController.js"],"sourcesContent":["const connection= require(\"../config/connectDB\")\r\nconst jwt= require(\"jsonwebtoken\")\r\nconst md5= require(\"md5\")\r\nrequire(\"dotenv\").config()\r\n\r\nlet timeNow = Date.now()\r\n\r\nconst adminPage = async (req, res) => {\r\n   return res.render(\"manage/index.ejs\")\r\n}\r\n\r\nconst adminPage3 = async (req, res) => {\r\n   return res.render(\"manage/a-index-bet/index3.ejs\")\r\n}\r\n\r\nconst adminPage5 = async (req, res) => {\r\n   return res.render(\"manage/a-index-bet/index5.ejs\")\r\n}\r\n\r\nconst adminPage10 = async (req, res) => {\r\n   return res.render(\"manage/a-index-bet/index10.ejs\")\r\n}\r\n\r\nconst adminPage5d = async (req, res) => {\r\n   return res.render(\"manage/5d.ejs\")\r\n}\r\n\r\nconst adminPageK3 = async (req, res) => {\r\n   return res.render(\"manage/k3.ejs\")\r\n}\r\n\r\nconst ctvProfilePage = async (req, res) => {\r\n   var phone = req.params.phone\r\n   return res.render(\"manage/profileCTV.ejs\", { phone })\r\n}\r\n\r\nconst giftPage = async (req, res) => {\r\n   return res.render(\"manage/giftPage.ejs\")\r\n}\r\n\r\nconst membersPage = async (req, res) => {\r\n   return res.render(\"manage/members.ejs\")\r\n}\r\n\r\nconst ctvPage = async (req, res) => {\r\n   return res.render(\"manage/ctv.ejs\")\r\n}\r\n\r\nconst infoMember = async (req, res) => {\r\n   let phone = req.params.id\r\n   return res.render(\"manage/profileMember.ejs\", { phone })\r\n}\r\n\r\nconst statistical = async (req, res) => {\r\n   return res.render(\"manage/statistical.ejs\")\r\n}\r\n\r\nconst rechargePage = async (req, res) => {\r\n   return res.render(\"manage/recharge.ejs\")\r\n}\r\n\r\nconst rechargeRecord = async (req, res) => {\r\n   return res.render(\"manage/rechargeRecord.ejs\")\r\n}\r\n\r\nconst withdraw = async (req, res) => {\r\n   return res.render(\"manage/withdraw.ejs\")\r\n}\r\n\r\nconst levelSetting = async (req, res) => {\r\n   return res.render(\"manage/levelSetting.ejs\")\r\n}\r\n\r\nconst CreatedSalaryRecord = async (req, res) => {\r\n   return res.render(\"manage/CreatedSalaryRecord.ejs\")\r\n}\r\n\r\nconst withdrawRecord = async (req, res) => {\r\n   return res.render(\"manage/withdrawRecord.ejs\")\r\n}\r\nconst settings = async (req, res) => {\r\n   return res.render(\"manage/settings.ejs\")\r\n}\r\n\r\nconst partner = ['/admin/manager/index','/admin/manager/index/3','/admin/manager/index/5','/admin/manager/index/10','/admin/manager/5d','/admin/manager/k3','/admin/manager/aviator','/api/webapi/admin/wingo/money_stats','/api/webapi/admin/totalJoin','/api/webapi/admin/change','/api/webapi/admin/5d/listOrders','/api/webapi/admin/5d/editResult','/api/webapi/admin/k3/editResult','/api/webapi/admin/k3/listOrders','/admin/aviatorResult'];\r\n// xÃ¡c nháº­n admin\r\nconst middlewareAdminController = async (req, res, next) => {\r\n   // xÃ¡c nháº­n token\r\n   const auth = req.cookies.auth\r\n   if (!auth) {\r\n      return res.redirect(\"/login\")\r\n   }\r\n   const [rows] = await connection.execute(\"SELECT `token`,`level`, `status` FROM `users` WHERE `token` = ? AND veri = 1\", [auth])\r\n   if (!rows) {\r\n      return res.redirect(\"/login\")\r\n   }\r\n   try {\r\n      if (auth == rows[0].token && rows[0].status == 1) {\r\n         if (rows[0].level == 1) {\r\n            res.locals.level = 1;\r\n            next()\r\n         } \r\n         else if(rows[0].level == 3){\r\n            if (partner.includes(req.path)) {\r\n               res.locals.level = 3;\r\n               next();  // User has permission to access the route\r\n             } else {\r\n               return res.redirect(\"/home\")\r\n             }\r\n         }\r\n         else {\r\n            return res.redirect(\"/home\")\r\n         }\r\n      } else {\r\n         return res.redirect(\"/login\")\r\n      }\r\n   } catch (error) {\r\n      return res.redirect(\"/login\")\r\n   }\r\n}\r\n\r\nconst totalJoin = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let typeid = req.body.typeid\r\n   if (!typeid) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let game = \"\"\r\n   if (typeid == \"1\") game = \"wingo\"\r\n   if (typeid == \"2\") game = \"wingo3\"\r\n   if (typeid == \"3\") game = \"wingo5\"\r\n   if (typeid == \"4\") game = \"wingo10\"\r\n\r\n   const [rows] = await connection.query(\"SELECT * FROM users WHERE `token` = ? \", [auth])\r\n\r\n   if (rows.length > 0) {\r\n      const [wingoall] = await connection.query(`SELECT * FROM minutes_1 WHERE game = \"${game}\" AND status = 0 AND level = 0 ORDER BY id ASC `, [auth])\r\n      const [winGo1] = await connection.execute(`SELECT * FROM wingo WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `, [])\r\n      const [winGo10] = await connection.execute(`SELECT * FROM wingo WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 10 `, [])\r\n      const [setting] = await connection.execute(`SELECT * FROM admin `, [])\r\n\r\n      return res.status(200).json({\r\n         message: \"Success\",\r\n         status: true,\r\n         datas: wingoall,\r\n         lotterys: winGo1,\r\n         list_orders: winGo10,\r\n         setting: setting,\r\n         timeStamp: timeNow,\r\n      })\r\n   } else {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n}\r\n\r\nconst listMember = async (req, res) => {\r\n   let { pageno, limit } = req.body\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n   const [users] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level != 2 ORDER BY id DESC LIMIT ${pageno}, ${limit} `)\r\n   const [total_users] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level != 2`)\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: users,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n\r\nconst listCTV = async (req, res) => {\r\n   let { pageno, pageto } = req.body\r\n\r\n   if (!pageno || !pageto) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || pageto < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n   const [wingo] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level = 2 ORDER BY id DESC LIMIT ${pageno}, ${pageto} `)\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: wingo,\r\n   })\r\n}\r\n\r\nfunction formateT2(params) {\r\n   let result = params < 10 ? \"0\" + params : params\r\n   return result\r\n}\r\n\r\nfunction timerJoin2(params = \"\", addHours = 0) {\r\n   let date = \"\"\r\n   if (params) {\r\n      date = new Date(Number(params))\r\n   } else {\r\n      date = new Date()\r\n   }\r\n\r\n   date.setHours(date.getHours() + addHours)\r\n\r\n   let years = formateT(date.getFullYear())\r\n   let months = formateT(date.getMonth() + 1)\r\n   let days = formateT(date.getDate())\r\n\r\n   let hours = date.getHours() % 12\r\n   hours = hours === 0 ? 12 : hours\r\n   let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\r\n\r\n   let minutes = formateT(date.getMinutes())\r\n   let seconds = formateT(date.getSeconds())\r\n\r\n   return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\r\n}\r\n\r\nconst statistical2 = async (req, res) => {\r\n   const [wingo] = await connection.query(`SELECT SUM(money) as total FROM minutes_1 WHERE status = 1 `)\r\n   const [wingo2] = await connection.query(`SELECT SUM(money) as total FROM minutes_1 WHERE status = 2 `)\r\n   const [users] = await connection.query(`SELECT COUNT(id) as total FROM users WHERE status = 1 `)\r\n   const [users2] = await connection.query(`SELECT COUNT(id) as total FROM users WHERE status = 0 `)\r\n   const [recharge] = await connection.query(`SELECT SUM(money) as total FROM recharge WHERE status = 1 `)\r\n   const [withdraw] = await connection.query(`SELECT SUM(money) as total FROM withdraw WHERE status = 1 `)\r\n\r\n   const [recharge_today] = await connection.query(`SELECT SUM(money) as total FROM recharge WHERE status = 1 AND today = ?`, [timerJoin2()])\r\n   const [withdraw_today] = await connection.query(`SELECT SUM(money) as total FROM withdraw WHERE status = 1 AND today = ?`, [timerJoin2()])\r\n\r\n   let win = wingo[0].total\r\n   let loss = wingo2[0].total\r\n   let usersOnline = users[0].total\r\n   let usersOffline = users2[0].total\r\n   let recharges = recharge[0].total\r\n   let withdraws = withdraw[0].total\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      win: win,\r\n      loss: loss,\r\n      usersOnline: usersOnline,\r\n      usersOffline: usersOffline,\r\n      recharges: recharges,\r\n      withdraws: withdraws,\r\n      rechargeToday: recharge_today[0].total,\r\n      withdrawToday: withdraw_today[0].total,\r\n   })\r\n}\r\n\r\nconst changeAdmin = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let value = req.body.value\r\n   let type = req.body.type\r\n   let typeid = req.body.typeid\r\n\r\n   if (!value || !type || !typeid)\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   let game = \"\"\r\n   let bs = \"\"\r\n   if (typeid == \"1\") {\r\n      game = \"wingo1\"\r\n      bs = \"bs1\"\r\n   }\r\n   if (typeid == \"2\") {\r\n      game = \"wingo3\"\r\n      bs = \"bs3\"\r\n   }\r\n   if (typeid == \"3\") {\r\n      game = \"wingo5\"\r\n      bs = \"bs5\"\r\n   }\r\n   if (typeid == \"4\") {\r\n      game = \"wingo10\"\r\n      bs = \"bs10\"\r\n   }\r\n   switch (type) {\r\n      case \"change-wingo1\":\r\n         await connection.query(`UPDATE admin SET ${game} = ? `, [value])\r\n         return res.status(200).json({\r\n            message: \"Editing results successfully\",\r\n            status: true,\r\n            timeStamp: timeNow,\r\n         })\r\n         break\r\n      case \"change-win_rate\":\r\n         await connection.query(`UPDATE admin SET ${bs} = ? `, [value])\r\n         return res.status(200).json({\r\n            message: \"Editing win rate successfully\",\r\n            status: true,\r\n            timeStamp: timeNow,\r\n         })\r\n         break\r\n\r\n      default:\r\n         return res.status(200).json({\r\n            message: \"Failed\",\r\n            status: false,\r\n            timeStamp: timeNow,\r\n         })\r\n         break\r\n   }\r\n}\r\n\r\nfunction formateT(params) {\r\n   let result = params < 10 ? \"0\" + params : params\r\n   return result\r\n}\r\n\r\nfunction timerJoin(params = \"\", addHours = 0) {\r\n   let date = \"\"\r\n   if (params) {\r\n      date = new Date(Number(params))\r\n   } else {\r\n      date = new Date()\r\n   }\r\n\r\n   date.setHours(date.getHours() + addHours)\r\n\r\n   let years = formateT(date.getFullYear())\r\n   let months = formateT(date.getMonth() + 1)\r\n   let days = formateT(date.getDate())\r\n\r\n   let hours = date.getHours() % 12\r\n   hours = hours === 0 ? 12 : hours\r\n   let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\r\n\r\n   let minutes = formateT(date.getMinutes())\r\n   let seconds = formateT(date.getSeconds())\r\n\r\n   return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\r\n}\r\n\r\nconst userInfo = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.body.phone\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let userInfo = user[0]\r\n   // direct subordinate all\r\n   const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code])\r\n\r\n   // cáº¥p dÆ°á»i trá»±c tiáº¿p hÃ´m nay\r\n   let f1_today = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_time = f1s[i].time // MÃ£ giá»i thiá»u f1\r\n      let check = timerJoin(f1_time) == timerJoin() ? true : false\r\n      if (check) {\r\n         f1_today += 1\r\n      }\r\n   }\r\n\r\n   // táº¥t cáº£ cáº¥p dÆ°á»i hÃ´m nay\r\n   let f_all_today = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const f1_time = f1s[i].time // time f1\r\n      let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false\r\n      if (check_f1) f_all_today += 1\r\n      // tá»ng f1 má»i Äc hÃ´m nay\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code // MÃ£ giá»i thiá»u f2\r\n         const f2_time = f2s[i].time // time f2\r\n         let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false\r\n         if (check_f2) f_all_today += 1\r\n         // tá»ng f2 má»i Äc hÃ´m nay\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code])\r\n         for (let i = 0; i < f3s.length; i++) {\r\n            const f3_code = f3s[i].code // MÃ£ giá»i thiá»u f3\r\n            const f3_time = f3s[i].time // time f3\r\n            let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false\r\n            if (check_f3) f_all_today += 1\r\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code])\r\n            // tá»ng f3 má»i Äc hÃ´m nay\r\n            for (let i = 0; i < f4s.length; i++) {\r\n               const f4_code = f4s[i].code // MÃ£ giá»i thiá»u f4\r\n               const f4_time = f4s[i].time // time f4\r\n               let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false\r\n               if (check_f4) f_all_today += 1\r\n               // tá»ng f3 má»i Äc hÃ´m nay\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // Tá»ng sá» f2\r\n   let f2 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      f2 += f2s.length\r\n   }\r\n\r\n   // Tá»ng sá» f3\r\n   let f3 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\r\n         if (f3s.length > 0) f3 += f3s.length\r\n      }\r\n   }\r\n\r\n   // Tá»ng sá» f4\r\n   let f4 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\r\n         for (let i = 0; i < f3s.length; i++) {\r\n            const f3_code = f3s[i].code\r\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code])\r\n            if (f4s.length > 0) f4 += f4s.length\r\n         }\r\n      }\r\n   }\r\n   // console.log(\"TOTAL_F_TODAY:\" + f_all_today);\r\n   // console.log(\"F1: \" + f1s.length);\r\n   // console.log(\"F2: \" + f2);\r\n   // console.log(\"F3: \" + f3);\r\n   // console.log(\"F4: \" + f4);\r\n\r\n   const [recharge] = await connection.query(\"SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 \", [phone])\r\n   const [withdraw] = await connection.query(\"SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 \", [phone])\r\n   const [bank_user] = await connection.query(\"SELECT * FROM user_bank WHERE phone = ? \", [phone])\r\n   const [telegram_ctv] = await connection.query(\"SELECT `telegram` FROM point_list WHERE phone = ? \", [userInfo.ctv])\r\n   const [ng_moi] = await connection.query(\"SELECT `phone` FROM users WHERE code = ? \", [userInfo.invite])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: user,\r\n      total_r: recharge,\r\n      total_w: withdraw,\r\n      f1: f1s.length,\r\n      f2: f2,\r\n      f3: f3,\r\n      f4: f4,\r\n      bank_user: bank_user,\r\n      telegram: telegram_ctv[0],\r\n      ng_moi: ng_moi[0],\r\n      daily: userInfo.ctv,\r\n   })\r\n}\r\n\r\nconst recharge = async (req, res) => {\r\n\r\n   let auth = req.cookies.auth\r\n   if (!auth) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\nconst limit = req.query.limit ? parseInt(req.query.limit) : 10;  \r\nconst page = req.query.page ? parseInt(req.query.page) : 1; \r\nconst offset = (page - 1) * limit;\r\n\r\n   const [recharge] = await connection.query(\r\n      `SELECT * FROM recharge WHERE status = 0 ORDER BY id DESC LIMIT ? OFFSET ?`, [limit, offset]\r\n    );\r\n    const [rechargeTotalCount] = await connection.query(\r\n      `SELECT COUNT(*) as totalCount FROM recharge WHERE status = 0`\r\n    );\r\n    \r\n    const [recharge2] = await connection.query(\r\n      `SELECT * FROM recharge WHERE status != 0 ORDER BY id DESC LIMIT ? OFFSET ?`, [limit, offset]\r\n    );\r\n    const [recharge2TotalCount] = await connection.query(\r\n      `SELECT COUNT(*) as totalCount FROM recharge WHERE status != 0`\r\n    );\r\n    \r\n    const [withdraw] = await connection.query(\r\n      `SELECT * FROM withdraw WHERE status = 0 ORDER BY id DESC LIMIT ? OFFSET ?`, [limit, offset]\r\n    );\r\n    const [withdrawTotalCount] = await connection.query(\r\n      `SELECT COUNT(*) as totalCount FROM withdraw WHERE status = 0`\r\n    );\r\n    \r\n    const [withdraw2] = await connection.query(\r\n      `SELECT * FROM withdraw WHERE status != 0 ORDER BY id DESC LIMIT ? OFFSET ?`, [limit, offset]\r\n    );\r\n    const [withdraw2TotalCount] = await connection.query(\r\n      `SELECT COUNT(*) as totalCount FROM withdraw WHERE status != 0`\r\n    );\r\n    \r\n\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: recharge,\r\n      datas2: recharge2,\r\n      datas3: withdraw,\r\n      datas4: withdraw2,\r\n      count:[rechargeTotalCount,recharge2TotalCount,withdrawTotalCount,withdraw2TotalCount]\r\n   })\r\n}\r\n\r\nconst settingGet = async (req, res) => {\r\n   try {\r\n      let auth = req.cookies.auth\r\n      if (!auth) {\r\n         return res.status(200).json({\r\n            message: \"Failed\",\r\n            status: false,\r\n            timeStamp: timeNow,\r\n         })\r\n      }\r\n\r\n      const [bank_recharge] = await connection.query(\"SELECT * FROM bank_recharge\")\r\n      const [bank_recharge_momo] = await connection.query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\")\r\n      const [settings] = await connection.query(\"SELECT * FROM admin \")\r\n\r\n      let bank_recharge_momo_data\r\n      if (bank_recharge_momo.length) {\r\n         bank_recharge_momo_data = bank_recharge_momo[0]\r\n      }\r\n      return res.status(200).json({\r\n         message: \"Success\",\r\n         status: true,\r\n         settings: settings,\r\n         datas: bank_recharge,\r\n         momo: {\r\n            bank_name: bank_recharge_momo_data?.name_bank || \"\",\r\n            username: bank_recharge_momo_data?.name_user || \"\",\r\n            upi_id: bank_recharge_momo_data?.stk || \"\",\r\n            usdt_wallet_address: bank_recharge_momo_data?.qr_code_image || \"\",\r\n         },\r\n      })\r\n   } catch (error) {\r\n      console.log(error)\r\n      return res.status(500).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n      })\r\n   }\r\n}\r\n\r\nconst rechargeDuyet = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let id = req.body.id\r\n   let type = req.body.type\r\n   if (!auth || !id || !type) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   if (type == \"confirm\") {\r\n     \r\n\r\n      const [info] = await connection.query(`SELECT * FROM recharge WHERE id = ?`, [id])\r\n\r\n      const user = await getUserDataByPhone(info?.[0]?.phone)\r\n         console.log(user,\"user information \")\r\n     \r\n      addUserAccountBalance({\r\n         money: info[0].money,\r\n         win_wallet:info[0].money,\r\n         phone: user.phone,\r\n         invite: user.invite,\r\n         id\r\n      })\r\n       \r\n\r\n\r\n\r\n      \r\n\r\n\r\n      if (info[0].money == 1499 && user.extra === null) {\r\n         console.log (\"hello world haahaha\")\r\n         // await connection.query(`UPDATE users SET extra = true, ekyc = false WHERE phone = ?`, [user.phone]);\r\n         await connection.query(\r\n            \"UPDATE users SET extra = ? WHERE phone = ? AND extra IS NULL\",\r\n            [false, user.phone]\r\n          );\r\n     }\r\n     await connection.query(\r\n      `UPDATE users SET first_recharge = true WHERE Phone = ? AND first_recharge IS NULL`,\r\n      [user.phone]  \r\n    );\r\n\r\n    \r\n    \r\n\r\n\r\n     if (info[0].money == 699 && user.ekyc === 0) {\r\n      await connection.query(`UPDATE users SET extra = true, ekyc = true WHERE phone = ?`, [user.phone]);\r\n     } \r\n\r\n\r\n      return res.status(200).json({\r\n         message: \"Successful application confirmation\",\r\n         status: true,\r\n         datas: recharge,\r\n      })\r\n   }\r\n   if (type == \"delete\") {\r\n      await connection.query(`UPDATE recharge SET status = 2 WHERE id = ?`, [id])\r\n\r\n      return res.status(200).json({\r\n         message: \"Cancellation successful\",\r\n         status: true,\r\n         datas: recharge,\r\n      })\r\n   }\r\n}\r\n\r\nconst getUserDataByPhone = async phone => {\r\n   let [users] = await connection.query(\"SELECT `phone`, `code`,`name_user`,`invite`,`extra`,`ekyc` FROM users WHERE `phone` = ? \", [phone])\r\n   const user = users?.[0]\r\n\r\n   if (user === undefined || user === null) {\r\n      throw Error(\"Unable to get user data!\")\r\n   }\r\n\r\n   return {\r\n      phone: user.phone,\r\n      code: user.code,\r\n      username: user.name_user,\r\n      invite: user.invite,\r\n      extra:user.extra,\r\n      ekyc:user.ekyc\r\n   }\r\n}\r\n\r\n\r\n\r\nconst addUserAccountBalance = async ({ money, phone,invite,id }) => {\r\n\r\n   const [recharge] = await connection.execute('SELECT * FROM recharge WHERE phone = ? AND status = ?',[phone,1]);\r\n\r\n   if(recharge.length==0){\r\n      let bonus = 0;\r\n      if(money>=5000){\r\n         bonus = 0\r\n      }\r\n      else if(money>=2000){\r\n         bonus = 0\r\n      }\r\n      else if(money>=1000){\r\n         bonus = 0\r\n      }\r\n      else if(money>=500){\r\n         bonus = 0\r\n      }\r\n      else if(money>=300){\r\n         bonus = 0\r\n      }\r\n      else if(money>=200){\r\n         bonus = 0\r\n      }\r\n\r\n      await connection.query(\"UPDATE users SET money = money + ?, total_money = total_money + ?,win_wallet = win_wallet + ? WHERE `phone` = ?\", [money+bonus,money+bonus,money,phone])\r\n      console.log(\"sucessfully updated hahaha\")\r\n    \r\n   }\r\n\r\n   else{\r\n      let bonus = 0 ;\r\n      // if(money>=500){\r\n      //    bonus = money*0.3;\r\n      // }\r\n      // await connection.query(\"UPDATE users SET money = money + ?, total_money = total_money + ? WHERE `phone` = ?\", [money+bonus,money+bonus,phone])\r\n      await connection.query(\r\n         \"UPDATE users SET money = money + ?, total_money = total_money + ?, win_wallet = win_wallet + ? WHERE phone = ?\",\r\n         [money + bonus, money + bonus, money + bonus, phone]\r\n       );\r\n       \r\n   }\r\n\r\n   await connection.query(`UPDATE recharge SET status = 1 WHERE id = ?`, [id])\r\n\r\n//    const [user] = await connection.execute(\r\n//       'SELECT * FROM users WHERE phone = ? AND FROM_UNIXTIME(time / 1000) >= NOW() - INTERVAL 10 DAY',\r\n//       [phone]\r\n// );\r\n\r\n// if(user[0]){\r\n//    const [recharge1] = await connection.execute(\r\n//       'SELECT * FROM recharge WHERE phone = ? AND status = ? AND FROM_UNIXTIME(time / 1000) >= NOW() - INTERVAL 10 DAY ORDER BY time ASC',\r\n//       [phone, 1]\r\n//     );\r\n\r\n//     let first_recharge = recharge[0];\r\n//     let second_recharge = recharge[1];\r\n//     let third_recharge = recharge[2];\r\n//     let bonus1 = 0 ;\r\n\r\n//     if(user[0].partner_reward1===0 && first_recharge){\r\n      \r\n//        if(total_recharge>=25000 && first_recharge>=5000){\r\n//         bonus1 = 600;\r\n//        }\r\n\r\n//        else if(total_recharge>=12500 && first_recharge>=2500){\r\n//          bonus1 = 300;\r\n//        }\r\n\r\n//        else if(total_recharge>=2500 && first_recharge>=500){\r\n//          bonus1 = 130;\r\n//        }\r\n\r\n//        else if(total_recharge>=1000 && first_recharge>=200){\r\n//          bonus1 = 60;\r\n//        }\r\n//     }\r\n\r\n\r\n// }\r\n\r\n\r\n\r\n// const total_recharge = recharge1.reduce((acc,val)=>val.money,0);\r\n\r\n\r\n\r\n\r\n \r\n}\r\n\r\nconst updateLevel = async (req, res) => {\r\n   try {\r\n      let id = req.body.id\r\n      let f1 = req.body.f1\r\n      let f2 = req.body.f2\r\n      let f3 = req.body.f3\r\n      let f4 = req.body.f4\r\n\r\n      console.log(\"level : \" + id, f1, f2, f3, f4)\r\n\r\n      await connection.query(\"UPDATE `level` SET `f1`= ? ,`f2`= ? ,`f3`= ? ,`f4`= ?  WHERE `id` = ?\", [f1, f2, f3, f4, id])\r\n\r\n      // Send a success response to the client\r\n      res.status(200).json({\r\n         message: \"Update successful\",\r\n         status: true,\r\n      })\r\n   } catch (error) {\r\n      console.error(\"Error updating level:\", error)\r\n\r\n      // Send an error response to the client\r\n      res.status(500).json({\r\n         message: \"Update failed\",\r\n         status: false,\r\n         error: error.message,\r\n      })\r\n   }\r\n}\r\n\r\nconst handlWithdraw = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let id = req.body.id\r\n   let type = req.body.type\r\n   if (!auth || !id || !type) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   if (type == \"confirm\") {\r\n      await connection.query(`UPDATE withdraw SET status = 1 WHERE id = ?`, [id])\r\n      \r\n      const [info] = await connection.query(`SELECT * FROM withdraw WHERE id = ?`, [id])\r\n      const phone = info[0].phone;\r\n      const [userinfo] = await connection.query(`SELECT * FROM users WHERE phone = ?`, [phone])\r\n      let user = userinfo[0];\r\n      if(user.extra == 0 && user.ekyc == null){\r\n         await connection.query(\r\n            `UPDATE users SET ekyc = false WHERE phone = ? AND ekyc IS NULL`,\r\n            [user.phone]\r\n          );\r\n       }\r\n\r\n      return res.status(200).json({\r\n         message: \"Successful application confirmation\",\r\n         status: true,\r\n         datas: recharge,\r\n      })\r\n   }\r\n   if (type == \"delete\") {\r\n      await connection.query(`UPDATE withdraw SET status = 2 WHERE id = ?`, [id])\r\n      const [info] = await connection.query(`SELECT * FROM withdraw WHERE id = ?`, [id])\r\n      await connection.query(\"UPDATE users SET money = money + ? WHERE phone = ? \", [info[0].money, info[0].phone])\r\n      return res.status(200).json({\r\n         message: \"Cancel successfully\",\r\n         status: true,\r\n         datas: recharge,\r\n      })\r\n   }\r\n}\r\n\r\nconst settingBank = async (req, res) => {\r\n   try {\r\n      let auth = req.cookies.auth\r\n      let name_bank = req.body.name_bank\r\n      let name = req.body.name\r\n      let info = req.body.info\r\n      let qr = req.body.qr\r\n      let typer = req.body.typer\r\n\r\n      if (!auth || !typer) {\r\n         return res.status(200).json({\r\n            message: \"Failed\",\r\n            status: false,\r\n            timeStamp: timeNow,\r\n         })\r\n      }\r\n      if (typer == \"bank\") {\r\n         await connection.query(`UPDATE bank_recharge SET name_bank = ?, name_user = ?, stk = ? WHERE type = 'bank'`, [name_bank, name, info])\r\n         return res.status(200).json({\r\n            message: \"Successful change\",\r\n            status: true,\r\n            datas: recharge,\r\n         })\r\n      }\r\n\r\n      if (typer == \"momo\") {\r\n         const [bank_recharge] = await connection.query(`SELECT * FROM bank_recharge WHERE type = 'momo'`)\r\n\r\n         const deleteRechargeQueries = bank_recharge.map(recharge => {\r\n            return deleteBankRechargeById(recharge.id)\r\n         })\r\n\r\n         await Promise.all(deleteRechargeQueries)\r\n\r\n         // await connection.query(`UPDATE bank_recharge SET name_bank = ?, name_user = ?, stk = ?, qr_code_image = ? WHERE type = 'upi'`, [name_bank, name, info, qr]);\r\n\r\n         const bankName = req.body.bank_name\r\n         const username = req.body.username\r\n         const upiId = req.body.upi_id\r\n         const usdtWalletAddress = req.body.usdt_wallet_address\r\n\r\n         await connection.query(\"INSERT INTO bank_recharge SET name_bank = ?, name_user = ?, stk = ?, qr_code_image = ?, type = 'momo'\", [bankName, username, upiId, usdtWalletAddress])\r\n\r\n         return res.status(200).json({\r\n            message: \"Successfully changed\",\r\n            status: true,\r\n            datas: recharge,\r\n         })\r\n      }\r\n   } catch (error) {\r\n      console.log(error)\r\n      return res.status(500).json({\r\n         message: \"Something went wrong!\",\r\n         status: false,\r\n      })\r\n   }\r\n}\r\n\r\nconst deleteBankRechargeById = async id => {\r\n   const [recharge] = await connection.query(\"DELETE FROM bank_recharge WHERE type = 'momo' AND id = ?\", [id])\r\n\r\n   return recharge\r\n}\r\n\r\nconst settingCskh = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let telegram = req.body.telegram\r\n   let cskh = req.body.cskh\r\n   let myapp_web = req.body.myapp_web\r\n   if (!auth || !cskh || !telegram) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   await connection.query(`UPDATE admin SET telegram = ?, cskh = ?, app = ?`, [telegram, cskh, myapp_web])\r\n   return res.status(200).json({\r\n      message: \"Successful change\",\r\n      status: true,\r\n   })\r\n}\r\n\r\nconst banned = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let id = req.body.id\r\n   let type = req.body.type\r\n   if (!auth || !id) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   if (type == \"open\") {\r\n      await connection.query(`UPDATE users SET status = 1 WHERE id = ?`, [id])\r\n   }\r\n   if (type == \"close\") {\r\n      await connection.query(`UPDATE users SET status = 2 WHERE id = ?`, [id])\r\n   }\r\n   return res.status(200).json({\r\n      message: \"Successful change\",\r\n      status: true,\r\n   })\r\n}\r\n\r\nconst createBonus = async (req, res) => {\r\n   const randomString = length => {\r\n      var result = \"\"\r\n      var characters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n      var charactersLength = characters.length\r\n      for (var i = 0; i < length; i++) {\r\n         result += characters.charAt(Math.floor(Math.random() * charactersLength))\r\n      }\r\n      return result\r\n   }\r\n\r\n   function timerJoin(params = \"\", addHours = 0) {\r\n      let date = \"\"\r\n      if (params) {\r\n         date = new Date(Number(params))\r\n      } else {\r\n         date = new Date()\r\n      }\r\n\r\n      date.setHours(date.getHours() + addHours)\r\n\r\n      let years = formateT(date.getFullYear())\r\n      let months = formateT(date.getMonth() + 1)\r\n      let days = formateT(date.getDate())\r\n\r\n      let hours = date.getHours() % 12\r\n      hours = hours === 0 ? 12 : hours\r\n      let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\r\n\r\n      let minutes = formateT(date.getMinutes())\r\n      let seconds = formateT(date.getSeconds())\r\n\r\n      return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\r\n   }\r\n\r\n   const d = new Date()\r\n   const time = d.getTime()\r\n\r\n   let auth = req.cookies.auth\r\n   let money = req.body.money\r\n   let type = req.body.type\r\n   let numberOfUsers = req.body.numberOfUsers\r\n\r\n   if (!money || !auth) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   let userInfo = user[0]\r\n\r\n   if (type == \"all\") {\r\n      let select = req.body.select\r\n      if (select == \"1\") {\r\n         await connection.query(`UPDATE point_list SET money = money + ? WHERE level = 2`, [money])\r\n      } else {\r\n         await connection.query(`UPDATE point_list SET money = money - ? WHERE level = 2`, [money])\r\n      }\r\n      return res.status(200).json({\r\n         message: \"successful change\",\r\n         status: true,\r\n      })\r\n   }\r\n\r\n   if (type == \"two\") {\r\n      let select = req.body.select\r\n      if (select == \"1\") {\r\n         await connection.query(`UPDATE point_list SET money_us = money_us + ? WHERE level = 2`, [money])\r\n      } else {\r\n         await connection.query(`UPDATE point_list SET money_us = money_us - ? WHERE level = 2`, [money])\r\n      }\r\n      return res.status(200).json({\r\n         message: \"successful change\",\r\n         status: true,\r\n      })\r\n   }\r\n\r\n   if (type == \"one\") {\r\n      let select = req.body.select\r\n      let phone = req.body.phone\r\n      const [user] = await connection.query(\"SELECT * FROM point_list WHERE phone = ? \", [phone])\r\n      if (user.length == 0) {\r\n         return res.status(200).json({\r\n            message: \"Failed\",\r\n            status: false,\r\n            timeStamp: timeNow,\r\n         })\r\n      }\r\n      if (select == \"1\") {\r\n         await connection.query(`UPDATE point_list SET money = money + ? WHERE level = 2 and phone = ?`, [money, phone])\r\n      } else {\r\n         await connection.query(`UPDATE point_list SET money = money - ? WHERE level = 2 and phone = ?`, [money, phone])\r\n      }\r\n      return res.status(200).json({\r\n         message: \"successful change\",\r\n         status: true,\r\n      })\r\n   }\r\n\r\n   if (type == \"three\") {\r\n      let select = req.body.select\r\n      let phone = req.body.phone\r\n      const [user] = await connection.query(\"SELECT * FROM point_list WHERE phone = ? \", [phone])\r\n      if (user.length == 0) {\r\n         return res.status(200).json({\r\n            message: \"account does not exist\",\r\n            status: false,\r\n            timeStamp: timeNow,\r\n         })\r\n      }\r\n      if (select == \"1\") {\r\n         await connection.query(`UPDATE point_list SET money_us = money_us + ? WHERE level = 2 and phone = ?`, [money, phone])\r\n      } else {\r\n         await connection.query(`UPDATE point_list SET money_us = money_us - ? WHERE level = 2 and phone = ?`, [money, phone])\r\n      }\r\n      return res.status(200).json({\r\n         message: \"successful change\",\r\n         status: true,\r\n      })\r\n   }\r\n\r\n   if (!type) {\r\n      let id_redenvelops = randomString(16)\r\n      let sql = `INSERT INTO redenvelopes SET id_redenvelope = ?, phone = ?, money = ?, used = ?, amount = ?, status = ?, time = ?`\r\n      await connection.query(sql, [id_redenvelops, userInfo.phone, money, numberOfUsers, 1, 0, time])\r\n      return res.status(200).json({\r\n         message: \"Successful change\",\r\n         status: true,\r\n         id: id_redenvelops,\r\n      })\r\n   }\r\n}\r\n\r\nconst listRedenvelops = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   const [redenvelopes] = await connection.query(\"SELECT * FROM redenvelopes ORDER BY time DESC\")\r\n\r\n   return res.status(200).json({\r\n      message: \"Successful change\",\r\n      status: true,\r\n      redenvelopes: redenvelopes,\r\n   })\r\n}\r\n\r\nconst settingbuff = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let id_user = req.body.id_user\r\n   let buff_acc = req.body.buff_acc\r\n   let money_value = req.body.money_value\r\n   if (!id_user || !buff_acc || !money_value) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   const [user_id] = await connection.query(`SELECT * FROM users WHERE id_user = ?`, [id_user])\r\n\r\n   if (user_id.length > 0) {\r\n      if (buff_acc == \"1\") {\r\n         await connection.query(`UPDATE users SET money = money + ? WHERE id_user = ?`, [money_value, id_user])\r\n      }\r\n      if (buff_acc == \"2\") {\r\n         await connection.query(`UPDATE users SET money = money - ? WHERE id_user = ?`, [money_value, id_user])\r\n      }\r\n      return res.status(200).json({\r\n         message: \"Successful change\",\r\n         status: true,\r\n      })\r\n   } else {\r\n      return res.status(200).json({\r\n         message: \"Successful change\",\r\n         status: false,\r\n      })\r\n   }\r\n}\r\nconst randomNumber = (min, max) => {\r\n   return String(Math.floor(Math.random() * (max - min + 1)) + min)\r\n}\r\n\r\nconst randomString = length => {\r\n   var result = \"\"\r\n   var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\r\n   var charactersLength = characters.length\r\n   for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength))\r\n   }\r\n   return result\r\n}\r\n\r\nconst ipAddress = req => {\r\n   let ip = \"\"\r\n   if (req.headers[\"x-forwarded-for\"]) {\r\n      ip = req.headers[\"x-forwarded-for\"].split(\",\")[0]\r\n   } else if (req.connection && req.connection.remoteAddress) {\r\n      ip = req.connection.remoteAddress\r\n   } else {\r\n      ip = req.ip\r\n   }\r\n   return ip\r\n}\r\n\r\nconst timeCreate = () => {\r\n   const d = new Date()\r\n   const time = d.getTime()\r\n   return time\r\n}\r\n\r\nconst register = async (req, res) => {\r\n   let { username, password, invitecode } = req.body\r\n   let id_user = randomNumber(10000, 99999)\r\n   let name_user = \"Member\" + randomNumber(10000, 99999)\r\n   let code = randomString(5) + randomNumber(10000, 99999)\r\n   let ip = ipAddress(req)\r\n   let time = timeCreate()\r\n\r\n   invitecode = \"vpIgg59711\"\r\n\r\n   if (!username || !password || !invitecode) {\r\n      return res.status(200).json({\r\n         message: \"ERROR!!!\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!username) {\r\n      return res.status(200).json({\r\n         message: \"phone error\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   try {\r\n      const [check_u] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [username])\r\n      if (check_u.length == 1) {\r\n         return res.status(200).json({\r\n            message: \"register account\", //Sá» Äiá»n thoáº¡i ÄÃ£ ÄÆ°á»£c ÄÄng kÃ½\r\n            status: false,\r\n         })\r\n      } else {\r\n         const sql = `INSERT INTO users SET \r\n            id_user = ?,\r\n            phone = ?,\r\n            name_user = ?,\r\n            password = ?,\r\n            money = ?,\r\n            level = ?,\r\n            code = ?,\r\n            invite = ?,\r\n            veri = ?,\r\n            ip_address = ?,\r\n            status = ?,\r\n            time = ?`\r\n         await connection.execute(sql, [id_user, username, name_user, md5(password), 0, 2, code, invitecode, 1, ip, 1, time])\r\n         await connection.execute(\"INSERT INTO point_list SET phone = ?, level = 2\", [username])\r\n         return res.status(200).json({\r\n            message: \"registration success\", //Register Sucess\r\n            status: true,\r\n         })\r\n      }\r\n   } catch (error) {\r\n      if (error) console.log(error)\r\n   }\r\n}\r\n\r\n\r\nconst registerPartner = async (req, res) => {\r\n   let { username, password, invitecode } = req.body\r\n   let id_user = randomNumber(10000, 99999)\r\n   let name_user = \"Member\" + randomNumber(10000, 99999)\r\n   let code = randomString(5) + randomNumber(10000, 99999)\r\n   let ip = ipAddress(req)\r\n   let time = timeCreate()\r\n\r\n   invitecode = \"vpIgg59711\"\r\n\r\n   if (!username || !password || !invitecode) {\r\n      return res.status(200).json({\r\n         message: \"ERROR!!!\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!username) {\r\n      return res.status(200).json({\r\n         message: \"phone error\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   try {\r\n      const [check_u] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [username])\r\n      if (check_u.length == 1) {\r\n         return res.status(200).json({\r\n            message: \"register account\", //Sá» Äiá»n thoáº¡i ÄÃ£ ÄÆ°á»£c ÄÄng kÃ½\r\n            status: false,\r\n         })\r\n      } else {\r\n         const sql = `INSERT INTO users SET \r\n            id_user = ?,\r\n            phone = ?,\r\n            name_user = ?,\r\n            password = ?,\r\n            money = ?,\r\n            level = ?,\r\n            code = ?,\r\n            invite = ?,\r\n            veri = ?,\r\n            ip_address = ?,\r\n            status = ?,\r\n            time = ?`\r\n         await connection.execute(sql, [id_user, username, name_user, md5(password), 0, 3, code, invitecode, 1, ip, 1, time])\r\n         await connection.execute(\"INSERT INTO point_list SET phone = ?, level = 2\", [username])\r\n         return res.status(200).json({\r\n            message: \"registration success\", //Register Sucess\r\n            status: true,\r\n         })\r\n      }\r\n   } catch (error) {\r\n      if (error) console.log(error)\r\n   }\r\n}\r\n\r\nconst profileUser = async (req, res) => {\r\n   let phone = req.body.phone\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Phone Error\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let [user] = await connection.query(`SELECT * FROM users WHERE phone = ?`, [phone])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Phone Error\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let [recharge] = await connection.query(`SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT 10`, [phone])\r\n   let [withdraw] = await connection.query(`SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT 10`, [phone])\r\n   return res.status(200).json({\r\n      message: \"Get success\",\r\n      status: true,\r\n      recharge: recharge,\r\n      withdraw: withdraw,\r\n   })\r\n}\r\n\r\nconst infoCtv = async (req, res) => {\r\n   const phone = req.body.phone\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Phone Error\",\r\n         status: false,\r\n      })\r\n   }\r\n   let userInfo = user[0]\r\n   // cáº¥p dÆ°á»i trá»±c tiáº¿p all\r\n   const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code])\r\n\r\n   // cáº¥p dÆ°á»i trá»±c tiáº¿p hÃ´m nay\r\n   let f1_today = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_time = f1s[i].time // MÃ£ giá»i thiá»u f1\r\n      let check = timerJoin(f1_time) == timerJoin() ? true : false\r\n      if (check) {\r\n         f1_today += 1\r\n      }\r\n   }\r\n\r\n   // táº¥t cáº£ cáº¥p dÆ°á»i hÃ´m nay\r\n   let f_all_today = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const f1_time = f1s[i].time // time f1\r\n      let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false\r\n      if (check_f1) f_all_today += 1\r\n      // tá»ng f1 má»i Äc hÃ´m nay\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code // MÃ£ giá»i thiá»u f2\r\n         const f2_time = f2s[i].time // time f2\r\n         let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false\r\n         if (check_f2) f_all_today += 1\r\n         // tá»ng f2 má»i Äc hÃ´m nay\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code])\r\n         for (let i = 0; i < f3s.length; i++) {\r\n            const f3_code = f3s[i].code // MÃ£ giá»i thiá»u f3\r\n            const f3_time = f3s[i].time // time f3\r\n            let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false\r\n            if (check_f3) f_all_today += 1\r\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code])\r\n            // tá»ng f3 má»i Äc hÃ´m nay\r\n            for (let i = 0; i < f4s.length; i++) {\r\n               const f4_code = f4s[i].code // MÃ£ giá»i thiá»u f4\r\n               const f4_time = f4s[i].time // time f4\r\n               let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false\r\n               if (check_f4) f_all_today += 1\r\n               // tá»ng f3 má»i Äc hÃ´m nay\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // Tá»ng sá» f2\r\n   let f2 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      f2 += f2s.length\r\n   }\r\n\r\n   // Tá»ng sá» f3\r\n   let f3 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\r\n         if (f3s.length > 0) f3 += f3s.length\r\n      }\r\n   }\r\n\r\n   // Tá»ng sá» f4\r\n   let f4 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\r\n         for (let i = 0; i < f3s.length; i++) {\r\n            const f3_code = f3s[i].code\r\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code])\r\n            if (f4s.length > 0) f4 += f4s.length\r\n         }\r\n      }\r\n   }\r\n\r\n   const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone])\r\n   const [list_mem_baned] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 2 AND veri = 1 \", [phone])\r\n   let total_recharge = 0\r\n   let total_withdraw = 0\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [recharge] = await connection.query(\"SELECT SUM(money) as money FROM recharge WHERE phone = ? AND status = 1 \", [phone])\r\n      const [withdraw] = await connection.query(\"SELECT SUM(money) as money FROM withdraw WHERE phone = ? AND status = 1 \", [phone])\r\n      if (recharge[0].money) {\r\n         total_recharge += Number(recharge[0].money)\r\n      }\r\n      if (withdraw[0].money) {\r\n         total_withdraw += Number(withdraw[0].money)\r\n      }\r\n   }\r\n\r\n   let total_recharge_today = 0\r\n   let total_withdraw_today = 0\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [recharge_today] = await connection.query(\"SELECT `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone])\r\n      const [withdraw_today] = await connection.query(\"SELECT `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone])\r\n      for (let i = 0; i < recharge_today.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(recharge_today[i].time)\r\n         if (time == today) {\r\n            total_recharge_today += recharge_today[i].money\r\n         }\r\n      }\r\n      for (let i = 0; i < withdraw_today.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(withdraw_today[i].time)\r\n         if (time == today) {\r\n            total_withdraw_today += withdraw_today[i].money\r\n         }\r\n      }\r\n   }\r\n\r\n   let win = 0\r\n   let loss = 0\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [wins] = await connection.query(\"SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 1 \", [phone])\r\n      const [losses] = await connection.query(\"SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 2 \", [phone])\r\n      for (let i = 0; i < wins.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(wins[i].time)\r\n         if (time == today) {\r\n            win += wins[i].money\r\n         }\r\n      }\r\n      for (let i = 0; i < losses.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(losses[i].time)\r\n         if (time == today) {\r\n            loss += losses[i].money\r\n         }\r\n      }\r\n   }\r\n   let list_mems = []\r\n   const [list_mem_today] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone])\r\n   for (let i = 0; i < list_mem_today.length; i++) {\r\n      let today = timerJoin()\r\n      let time = timerJoin(list_mem_today[i].time)\r\n      if (time == today) {\r\n         list_mems.push(list_mem_today[i])\r\n      }\r\n   }\r\n\r\n   const [point_list] = await connection.query(\"SELECT * FROM point_list WHERE phone = ? \", [phone])\r\n   let moneyCTV = point_list[0].money\r\n\r\n   let list_recharge_news = []\r\n   let list_withdraw_news = []\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [recharge_today] = await connection.query(\"SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone])\r\n      const [withdraw_today] = await connection.query(\"SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone])\r\n      for (let i = 0; i < recharge_today.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(recharge_today[i].time)\r\n         if (time == today) {\r\n            list_recharge_news.push(recharge_today[i])\r\n         }\r\n      }\r\n      for (let i = 0; i < withdraw_today.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(withdraw_today[i].time)\r\n         if (time == today) {\r\n            list_withdraw_news.push(withdraw_today[i])\r\n         }\r\n      }\r\n   }\r\n\r\n   const [redenvelopes_used] = await connection.query(\"SELECT * FROM redenvelopes_used WHERE phone = ? \", [phone])\r\n   let redenvelopes_used_today = []\r\n   for (let i = 0; i < redenvelopes_used.length; i++) {\r\n      let today = timerJoin()\r\n      let time = timerJoin(redenvelopes_used[i].time)\r\n      if (time == today) {\r\n         redenvelopes_used_today.push(redenvelopes_used[i])\r\n      }\r\n   }\r\n\r\n   const [financial_details] = await connection.query(\"SELECT * FROM financial_details WHERE phone = ? \", [phone])\r\n   let financial_details_today = []\r\n   for (let i = 0; i < financial_details.length; i++) {\r\n      let today = timerJoin()\r\n      let time = timerJoin(financial_details[i].time)\r\n      if (time == today) {\r\n         financial_details_today.push(financial_details[i])\r\n      }\r\n   }\r\n\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: user,\r\n      f1: f1s.length,\r\n      f2: f2,\r\n      f3: f3,\r\n      f4: f4,\r\n      list_mems: list_mems,\r\n      total_recharge: total_recharge,\r\n      total_withdraw: total_withdraw,\r\n      total_recharge_today: total_recharge_today,\r\n      total_withdraw_today: total_withdraw_today,\r\n      list_mem_baned: list_mem_baned.length,\r\n      win: win,\r\n      loss: loss,\r\n      list_recharge_news: list_recharge_news,\r\n      list_withdraw_news: list_withdraw_news,\r\n      moneyCTV: moneyCTV,\r\n      redenvelopes_used: redenvelopes_used_today,\r\n      financial_details_today: financial_details_today,\r\n   })\r\n}\r\n\r\nconst infoCtv2 = async (req, res) => {\r\n   const phone = req.body.phone\r\n   const timeDate = req.body.timeDate\r\n\r\n   function timerJoin(params = \"\", addHours = 0) {\r\n      let date = \"\"\r\n      if (params) {\r\n         date = new Date(Number(params))\r\n      } else {\r\n         date = new Date()\r\n      }\r\n\r\n      date.setHours(date.getHours() + addHours)\r\n\r\n      let years = formateT(date.getFullYear())\r\n      let months = formateT(date.getMonth() + 1)\r\n      let days = formateT(date.getDate())\r\n\r\n      let hours = date.getHours() % 12\r\n      hours = hours === 0 ? 12 : hours\r\n      let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\r\n\r\n      let minutes = formateT(date.getMinutes())\r\n      let seconds = formateT(date.getSeconds())\r\n\r\n      return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Phone Error\",\r\n         status: false,\r\n      })\r\n   }\r\n   let userInfo = user[0]\r\n   const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone])\r\n\r\n   let list_mems = []\r\n   const [list_mem_today] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone])\r\n   for (let i = 0; i < list_mem_today.length; i++) {\r\n      let today = timeDate\r\n      let time = timerJoin(list_mem_today[i].time)\r\n      if (time == today) {\r\n         list_mems.push(list_mem_today[i])\r\n      }\r\n   }\r\n\r\n   let list_recharge_news = []\r\n   let list_withdraw_news = []\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [recharge_today] = await connection.query(\"SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone])\r\n      const [withdraw_today] = await connection.query(\"SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone])\r\n      for (let i = 0; i < recharge_today.length; i++) {\r\n         let today = timeDate\r\n         let time = timerJoin(recharge_today[i].time)\r\n         if (time == today) {\r\n            list_recharge_news.push(recharge_today[i])\r\n         }\r\n      }\r\n      for (let i = 0; i < withdraw_today.length; i++) {\r\n         let today = timeDate\r\n         let time = timerJoin(withdraw_today[i].time)\r\n         if (time == today) {\r\n            list_withdraw_news.push(withdraw_today[i])\r\n         }\r\n      }\r\n   }\r\n\r\n   const [redenvelopes_used] = await connection.query(\"SELECT * FROM redenvelopes_used WHERE phone = ? \", [phone])\r\n   let redenvelopes_used_today = []\r\n   for (let i = 0; i < redenvelopes_used.length; i++) {\r\n      let today = timeDate\r\n      let time = timerJoin(redenvelopes_used[i].time)\r\n      if (time == today) {\r\n         redenvelopes_used_today.push(redenvelopes_used[i])\r\n      }\r\n   }\r\n\r\n   const [financial_details] = await connection.query(\"SELECT * FROM financial_details WHERE phone = ? \", [phone])\r\n   let financial_details_today = []\r\n   for (let i = 0; i < financial_details.length; i++) {\r\n      let today = timeDate\r\n      let time = timerJoin(financial_details[i].time)\r\n      if (time == today) {\r\n         financial_details_today.push(financial_details[i])\r\n      }\r\n   }\r\n\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: user,\r\n      list_mems: list_mems,\r\n      list_recharge_news: list_recharge_news,\r\n      list_withdraw_news: list_withdraw_news,\r\n      redenvelopes_used: redenvelopes_used_today,\r\n      financial_details_today: financial_details_today,\r\n   })\r\n}\r\n\r\nconst listRechargeMem = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.params.phone\r\n   let { pageno, limit } = req.body\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0 || auths.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let { token, password, otp, level, ...userInfo } = user[0]\r\n\r\n   const [recharge] = await connection.query(`SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone])\r\n   const [total_users] = await connection.query(`SELECT * FROM recharge WHERE phone = ?`, [phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: recharge,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n\r\nconst listWithdrawMem = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.params.phone\r\n   let { pageno, limit } = req.body\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0 || auths.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let { token, password, otp, level, ...userInfo } = user[0]\r\n\r\n   const [withdraw] = await connection.query(`SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone])\r\n   const [total_users] = await connection.query(`SELECT * FROM withdraw WHERE phone = ?`, [phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: withdraw,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n\r\nconst listRedenvelope = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.params.phone\r\n   let { pageno, limit } = req.body\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0 || auths.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let { token, password, otp, level, ...userInfo } = user[0]\r\n\r\n   const [redenvelopes_used] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone])\r\n   const [total_users] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ?`, [phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: redenvelopes_used,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n// Level Setting get\r\n\r\nconst getLevelInfo = async (req, res) => {\r\n   const [rows] = await connection.query(\"SELECT * FROM `level`\")\r\n\r\n   if (!rows) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n      })\r\n   }\r\n   console.log(\"asdasdasd : \" + rows)\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      data: {},\r\n      rows: rows,\r\n   })\r\n\r\n   // const [recharge] = await connection.query('SELECT * FROM recharge WHERE `phone` = ? AND status = 1', [rows[0].phone]);\r\n   // let totalRecharge = 0;\r\n   // recharge.forEach((data) => {\r\n   //     totalRecharge += data.money;\r\n   // });\r\n   // const [withdraw] = await connection.query('SELECT * FROM withdraw WHERE `phone` = ? AND status = 1', [rows[0].phone]);\r\n   // let totalWithdraw = 0;\r\n   // withdraw.forEach((data) => {\r\n   //     totalWithdraw += data.money;\r\n   // });\r\n\r\n   // const { id, password, ip, veri, ip_address, status, time, token, ...others } = rows[0];\r\n   // return res.status(200).json({\r\n   //     message: 'Success',\r\n   //     status: true,\r\n   //     data: {\r\n   //         code: others.code,\r\n   //         id_user: others.id_user,\r\n   //         name_user: others.name_user,\r\n   //         phone_user: others.phone,\r\n   //         money_user: others.money,\r\n   //     },\r\n   //     totalRecharge: totalRecharge,\r\n   //     totalWithdraw: totalWithdraw,\r\n   //     timeStamp: timeNow,\r\n   // });\r\n}\r\n\r\nconst listBet = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.params.phone\r\n   let { pageno, limit } = req.body\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0 || auths.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let { token, password, otp, level, ...userInfo } = user[0]\r\n\r\n   const [listBet] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0 ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone])\r\n   const [total_users] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0`, [phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: listBet,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n\r\n\r\nconst listBetAviator = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.params.phone\r\n   let { pageno, limit } = req.body\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0 || auths.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let { token, password, otp, level, ...userInfo } = user[0]\r\n\r\n   // const [listBet] = await connection.query(`SELECT * FROM aviator_result WHERE phone = ? AND status != 0 ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone])\r\n   const [listBet] = await connection.execute(\r\n      `SELECT ar.*, \r\n              ar.status AS ar_status,  -- Ensure status is taken from aviator_result\r\n              DATE_FORMAT(ar.time, '%Y-%m-%d %H:%i:%s') AS formatted_time,\r\n              a.result\r\n       FROM aviator_result ar\r\n       JOIN aviator a ON ar.period = a.id\r\n       WHERE ar.phone = ?\r\n       ORDER BY ar.period DESC\r\n       LIMIT ?, ?`,  // Reverse order by period\r\n      [phone, pageno, limit]\r\n    );\r\n    \r\n    \r\n   const [total_users] = await connection.query(`SELECT * FROM aviator_result WHERE phone = ? AND status != 0`, [phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: listBet,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n\r\n\r\nconst listOrderOld = async (req, res) => {\r\n   let { gameJoin } = req.body\r\n\r\n   let checkGame = [\"1\", \"3\", \"5\", \"10\"].includes(String(gameJoin))\r\n   if (!checkGame) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n   let game = Number(gameJoin)\r\n\r\n   let join = \"\"\r\n   if (game == 1) join = \"k5d\"\r\n   if (game == 3) join = \"k5d3\"\r\n   if (game == 5) join = \"k5d5\"\r\n   if (game == 10) join = \"k5d10\"\r\n\r\n   const [k5d] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 10 `)\r\n   const [period] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `)\r\n   const [waiting] = await connection.query(`SELECT phone, money, price, amount, bet FROM result_5d WHERE status = 0 AND level = 0 AND game = '${game}' ORDER BY id ASC `)\r\n   const [settings] = await connection.query(`SELECT ${join} FROM admin`)\r\n   if (k5d.length == 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n   if (!k5d[0] || !period[0]) {\r\n      return res.status(200).json({\r\n         message: \"Error!\",\r\n         status: false,\r\n      })\r\n   }\r\n   return res.status(200).json({\r\n      code: 0,\r\n      msg: \"Get success\",\r\n      data: {\r\n         gameslist: k5d,\r\n      },\r\n      bet: waiting,\r\n      settings: settings,\r\n      join: join,\r\n      period: period[0].period,\r\n      status: true,\r\n   })\r\n}\r\n\r\nconst listOrderOldK3 = async (req, res) => {\r\n   let { gameJoin } = req.body\r\n\r\n   let checkGame = [\"1\", \"3\", \"5\", \"10\"].includes(String(gameJoin))\r\n   if (!checkGame) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n   let game = Number(gameJoin)\r\n\r\n   let join = \"\"\r\n   if (game == 1) join = \"k3d\"\r\n   if (game == 3) join = \"k3d3\"\r\n   if (game == 5) join = \"k3d5\"\r\n   if (game == 10) join = \"k3d10\"\r\n\r\n   const [k5d] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT 10 `)\r\n   const [period] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `)\r\n   const [waiting] = await connection.query(`SELECT phone, money, price, typeGame, amount, bet FROM result_k3 WHERE status = 0 AND level = 0 AND game = '${game}' ORDER BY id ASC `)\r\n   const [settings] = await connection.query(`SELECT ${join} FROM admin`)\r\n   if (k5d.length == 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n   if (!k5d[0] || !period[0]) {\r\n      return res.status(200).json({\r\n         message: \"Error!\",\r\n         status: false,\r\n      })\r\n   }\r\n   return res.status(200).json({\r\n      code: 0,\r\n      msg: \"Get Success\",\r\n      data: {\r\n         gameslist: k5d,\r\n      },\r\n      bet: waiting,\r\n      settings: settings,\r\n      join: join,\r\n      period: period[0].period,\r\n      status: true,\r\n   })\r\n}\r\n\r\nconst editResult = async (req, res) => {\r\n   let { game, list } = req.body\r\n\r\n   if (!list || !game) {\r\n      return res.status(200).json({\r\n         message: \"ERROR!!!\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   let join = \"\"\r\n   if (game == 1) join = \"k5d\"\r\n   if (game == 3) join = \"k5d3\"\r\n   if (game == 5) join = \"k5d5\"\r\n   if (game == 10) join = \"k5d10\"\r\n\r\n   const sql = `UPDATE admin SET ${join} = ?`\r\n   await connection.execute(sql, [list])\r\n   return res.status(200).json({\r\n      message: \"Editing is successful\", //Register Sucess\r\n      status: true,\r\n   })\r\n}\r\n\r\nconst editResult2 = async (req, res) => {\r\n   let { game, list } = req.body\r\n\r\n   if (!list || !game) {\r\n      return res.status(200).json({\r\n         message: \"ERROR!!!\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   let join = \"\"\r\n   if (game == 1) join = \"k3d\"\r\n   if (game == 3) join = \"k3d3\"\r\n   if (game == 5) join = \"k3d5\"\r\n   if (game == 10) join = \"k3d10\"\r\n\r\n   const sql = `UPDATE admin SET ${join} = ?`\r\n   await connection.execute(sql, [list])\r\n   return res.status(200).json({\r\n      message: \"Editing is successful\", //Register Sucess\r\n      status: true,\r\n   })\r\n}\r\n\r\nconst CreatedSalary = async (req, res) => {\r\n   try {\r\n      const phone = req.body.phone\r\n      const amount = req.body.amount\r\n      const type = req.body.type\r\n      const now = new Date()\r\n      const formattedTime = now.toLocaleString(\"en-US\", {\r\n         year: \"numeric\",\r\n         month: \"2-digit\",\r\n         day: \"2-digit\",\r\n         hour: \"2-digit\",\r\n         minute: \"2-digit\",\r\n         second: \"2-digit\",\r\n         hour12: true,\r\n      })\r\n\r\n      // Check if the phone number is a 10-digit number\r\n      if (!/^\\d{10}$/.test(phone)) {\r\n         return res.status(400).json({\r\n            message: \"ERROR!!! Invalid phone number. Please provide a 10-digit phone number.\",\r\n            status: false,\r\n         })\r\n      }\r\n\r\n      // Check if user with the given phone number exists\r\n      const checkUserQuery = \"SELECT * FROM `users` WHERE phone = ?\"\r\n      const [existingUser] = await connection.execute(checkUserQuery, [phone])\r\n\r\n      if (existingUser.length === 0) {\r\n         // If user doesn't exist, return an error\r\n         return res.status(400).json({\r\n            message: \"ERROR!!! User with the provided phone number does not exist.\",\r\n            status: false,\r\n         })\r\n      }\r\n\r\n      // If user exists, update the 'users' table\r\n      const updateUserQuery = \"UPDATE `users` SET `money` = `money` + ? WHERE phone = ?\"\r\n      await connection.execute(updateUserQuery, [amount, phone])\r\n\r\n      // Insert record into 'salary' table\r\n      const insertSalaryQuery = \"INSERT INTO salary (phone, amount, type, time) VALUES (?, ?, ?, ?)\"\r\n      await connection.execute(insertSalaryQuery, [phone, amount, type, formattedTime])\r\n\r\n      res.status(200).json({ message: \"Salary record created successfully\" })\r\n   } catch (error) {\r\n      console.error(error)\r\n      res.status(500).json({ error: \"Internal server error\" })\r\n   }\r\n}\r\n\r\nconst getSalary = async (req, res) => {\r\n   const [rows] = await connection.query(`SELECT * FROM salary ORDER BY time DESC`)\r\n\r\n   if (!rows) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n      })\r\n   }\r\n   console.log(\"asdasdasd : \" + rows)\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      data: {},\r\n      rows: rows,\r\n   })\r\n}\r\n\r\nconst getWingoBatingAmountOfOptions = async (req, res) => {\r\n   try {\r\n      let gameTime = parseInt(req.query.gameTime)\r\n\r\n      if ([1, 3, 5, 10].indexOf(gameTime) == -1) {\r\n         return res.status(400).json({\r\n            message: \"Invalid game time\",\r\n            status: false,\r\n         })\r\n      }\r\n\r\n      let gameName\r\n\r\n      if (gameTime == 1) gameName = \"wingo\"\r\n      if (gameTime == 3) gameName = \"wingo3\"\r\n      if (gameTime == 5) gameName = \"wingo5\"\r\n      if (gameTime == 10) gameName = \"wingo10\"\r\n\r\n      const betForNumbersOptions = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\"]\r\n      const betForColorsOptions = [\r\n         {\r\n            label: \"red\",\r\n            value: \"d\",\r\n         },\r\n         {\r\n            label: \"voilet\",\r\n            value: \"t\",\r\n         },\r\n         {\r\n            label: \"green\",\r\n            value: \"x\",\r\n         },\r\n      ]\r\n      const betForBigSmallOptions = [\r\n         {\r\n            label: \"big\",\r\n            value: \"l\",\r\n         },\r\n         {\r\n            label: \"small\",\r\n            value: \"n\",\r\n         },\r\n      ]\r\n\r\n      let amountByNumberList = []\r\n      let amountByColorsList = []\r\n      let amountByBigSmallList = []\r\n\r\n      for (const bet of betForNumbersOptions) {\r\n         const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM minutes_1 WHERE bet = '${bet}' AND game = '${gameName}' AND status = 0`)\r\n         const totalMoney = result[0].totalMoney\r\n         amountByNumberList.push({ bet: bet, totalMoney: totalMoney || 0 })\r\n      }\r\n\r\n      for (const bet of betForColorsOptions) {\r\n         const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM minutes_1 WHERE bet = '${bet.value}' AND game = '${gameName}' AND status = 0`)\r\n         const totalMoney = result[0].totalMoney\r\n         amountByColorsList.push({ bet: bet.label, totalMoney: totalMoney || 0 })\r\n      }\r\n\r\n      for (const bet of betForBigSmallOptions) {\r\n         const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM minutes_1 WHERE bet = '${bet.value}' AND game = '${gameName}' AND status = 0`)\r\n         const totalMoney = result[0].totalMoney\r\n         amountByBigSmallList.push({ bet: bet.label, totalMoney: totalMoney || 0 })\r\n      }\r\n\r\n      return res.status(200).json({\r\n         message: \"Success\",\r\n         status: true,\r\n         data: {\r\n            amountByNumberList: amountByNumberList,\r\n            amountByColorsList: amountByColorsList,\r\n            amountByBigSmallList: amountByBigSmallList,\r\n         },\r\n      })\r\n   } catch (error) {\r\n      console.log(error)\r\n      return res.status(500).json({\r\n         message: \"Internal server error\",\r\n         status: false,\r\n      })\r\n   }\r\n}\r\n\r\nconst getK3BatingAmountOfOptions = async (req, res) => {\r\n   try {\r\n      let gameTime = parseInt(req.query.gameTime)\r\n\r\n      if ([1, 3, 5, 10].indexOf(gameTime) == -1) {\r\n         return res.status(400).json({\r\n            message: \"Invalid game time\",\r\n            status: false,\r\n         })\r\n      }\r\n\r\n      let gameName\r\n\r\n      if (gameTime == 1) gameName = \"1\"\r\n      if (gameTime == 3) gameName = \"3\"\r\n      if (gameTime == 5) gameName = \"5\"\r\n      if (gameTime == 10) gameName = \"10\"\r\n\r\n      const betForNumbersOptions = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]\r\n      const betForGroupOptions = [\r\n         {\r\n            label: \"big\",\r\n            value: \"b\",\r\n         },\r\n         {\r\n            label: \"small\",\r\n            value: \"s\",\r\n         },\r\n         {\r\n            label: \"odd\",\r\n            value: \"l\",\r\n         },\r\n         {\r\n            label: \"even\",\r\n            value: \"c\",\r\n         },\r\n      ]\r\n      const betFor2SameOptions = [\r\n         {\r\n            label: \"11\",\r\n            value: \"11\",\r\n         },\r\n         {\r\n            label: \"22\",\r\n            value: \"22\",\r\n         },\r\n         {\r\n            label: \"33\",\r\n            value: \"33\",\r\n         },\r\n         {\r\n            label: \"44\",\r\n            value: \"44\",\r\n         },\r\n         {\r\n            label: \"55\",\r\n            value: \"55\",\r\n         },\r\n         {\r\n            label: \"66\",\r\n            value: \"66\",\r\n         },\r\n      ]\r\n      const betFor3SameOptions = [\r\n         {\r\n            label: \"111\",\r\n            value: \"111\",\r\n         },\r\n         {\r\n            label: \"222\",\r\n            value: \"222\",\r\n         },\r\n         {\r\n            label: \"333\",\r\n            value: \"333\",\r\n         },\r\n         {\r\n            label: \"444\",\r\n            value: \"444\",\r\n         },\r\n         {\r\n            label: \"555\",\r\n            value: \"555\",\r\n         },\r\n         {\r\n            label: \"666\",\r\n            value: \"666\",\r\n         },\r\n      ]\r\n\r\n      let amountByNumberTotalList = []\r\n      let amountByGroupTotalList = []\r\n      let amountBy2SameList = []\r\n      let amountBy3SameList = []\r\n\r\n      for (const bet of betForNumbersOptions) {\r\n         const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_k3 WHERE bet LIKE '%${bet}%' AND game = '${gameName}' AND status = 0 AND typeGame = 'total'`)\r\n         const totalMoney = result[0].totalMoney\r\n         amountByNumberTotalList.push({ bet: bet, totalMoney: totalMoney || 0 })\r\n      }\r\n\r\n      for (const bet of betForGroupOptions) {\r\n         const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_k3 WHERE bet LIKE '%${bet.value}%' AND game = '${gameName}' AND status = 0 AND typeGame = 'total'`)\r\n         const totalMoney = result[0].totalMoney\r\n         amountByGroupTotalList.push({ bet: bet.label, totalMoney: totalMoney || 0 })\r\n      }\r\n\r\n      for (const bet of betFor2SameOptions) {\r\n         const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_k3 WHERE bet LIKE '%${bet.value}%' AND game = '${gameName}' AND status = 0 AND typeGame = 'two-same'`)\r\n         const totalMoney = result[0].totalMoney\r\n         amountBy2SameList.push({ bet: bet.label, totalMoney: totalMoney || 0 })\r\n      }\r\n\r\n      for (const bet of betFor3SameOptions) {\r\n         const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_k3 WHERE bet LIKE '%${bet.value}%' AND game = '${gameName}' AND status = 0 AND typeGame = 'three-same'`)\r\n         const totalMoney = result[0].totalMoney\r\n         amountBy3SameList.push({ bet: bet.label, totalMoney: totalMoney || 0 })\r\n      }\r\n\r\n      return res.status(200).json({\r\n         message: \"Success\",\r\n         status: true,\r\n         data: {\r\n            amountByNumberTotalList: amountByNumberTotalList,\r\n            amountByGroupTotalList: amountByGroupTotalList,\r\n            amountBy2SameList: amountBy2SameList,\r\n            amountBy3SameList: amountBy3SameList,\r\n         },\r\n      })\r\n   } catch (error) {\r\n      console.log(error)\r\n      return res.status(500).json({\r\n         message: \"Internal server error\",\r\n         status: false,\r\n      })\r\n   }\r\n}\r\n\r\nconst get5dBatingAmountOfOptions = async (req, res) => {\r\n   try {\r\n      let gameTime = parseInt(req.query.gameTime)\r\n\r\n      if ([1, 3, 5, 10].indexOf(gameTime) == -1) {\r\n         return res.status(400).json({\r\n            message: \"Invalid game time\",\r\n            status: false,\r\n         })\r\n      }\r\n\r\n      let gameName\r\n\r\n      if (gameTime == 1) gameName = \"1\"\r\n      if (gameTime == 3) gameName = \"3\"\r\n      if (gameTime == 5) gameName = \"5\"\r\n      if (gameTime == 10) gameName = \"10\"\r\n\r\n      const counterPositionList = [\"a\", \"b\", \"c\", \"d\", \"e\"]\r\n      const posibleNumberList = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\r\n      const posibleNumberTypeList = [\r\n         {\r\n            label: \"big\",\r\n            value: \"b\",\r\n         },\r\n         {\r\n            label: \"small\",\r\n            value: \"s\",\r\n         },\r\n         {\r\n            label: \"odd\",\r\n            value: \"l\",\r\n         },\r\n         {\r\n            label: \"even\",\r\n            value: \"c\",\r\n         },\r\n      ]\r\n\r\n      let data = []\r\n\r\n      for (const position of counterPositionList) {\r\n         for (const posibleNumber of posibleNumberList) {\r\n            const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_5d WHERE bet LIKE '%${posibleNumber}%' AND game = '${gameName}' AND status = 0 AND join_bet = '${position}'`)\r\n            const totalMoney = result[0].totalMoney\r\n            data.push({ position: position, bet: posibleNumber, totalMoney: totalMoney || 0 })\r\n         }\r\n         for (const posibleNumberType of posibleNumberTypeList) {\r\n            const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_5d WHERE bet = '${posibleNumberType.value}' AND game = '${gameName}' AND status = 0 AND join_bet = '${position}'`)\r\n            const totalMoney = result[0].totalMoney\r\n            data.push({ position: position, bet: posibleNumberType.label, totalMoney: totalMoney || 0 })\r\n         }\r\n      }\r\n\r\n      for (const posibleNumberType of posibleNumberTypeList) {\r\n         const [result] = await connection.query(`SELECT SUM(money) AS totalMoney FROM result_5d WHERE bet = '${posibleNumberType.value}' AND game = '${gameName}' AND status = 0 AND join_bet = 'total'`)\r\n         const totalMoney = result[0].totalMoney\r\n         data.push({ position: \"total\", bet: posibleNumberType.label, totalMoney: totalMoney || 0 })\r\n      }\r\n\r\n      return res.status(200).json({\r\n         message: \"Success\",\r\n         status: true,\r\n         data: data,\r\n      })\r\n   } catch (error) {\r\n      console.log(error)\r\n      return res.status(500).json({\r\n         message: \"Internal server error\",\r\n         status: false,\r\n      })\r\n   }\r\n}\r\n\r\nconst addNotification = async (req,res)=>{\r\n   const {title,message} = req.body;\r\n\r\n   if(!title || !message){\r\n      return res.status(200).json({\r\n         message: \"Please Enter Valid Data\",\r\n         status: false,\r\n      }) \r\n   }\r\n\r\n   try {\r\n      await connection.execute('INSERT INTO notification SET title = ?,message = ?',[title,message]);\r\n      return res.status(200).json({\r\n         message: \"Success\",\r\n         status: true,\r\n      }) \r\n   } catch (error) {\r\n      return res.status(200).json({\r\n         message: \"Error!\",\r\n         status: false,\r\n      }) \r\n   }\r\n}\r\n\r\nconst getPool = async (req,res)=>{\r\n   const [pool] = await connection.execute('select total_pool from admin');\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      data:pool[0].total_pool\r\n   }) \r\n\r\n}\r\n\r\nconst updatePool = async (req,res)=>{\r\n   const {amount} = req.body;\r\n   if(!amount){\r\n      return res.status(200).json({\r\n         message: \"Error!\",\r\n         status: false,\r\n      }) \r\n   }\r\n\r\n   try {\r\n      await connection.execute('update admin set total_pool = ?',[parseFloat(amount)]);\r\n      const [pool] = await connection.execute('select total_pool from admin');\r\n      return res.status(200).json({\r\n         message: \"Success\",\r\n         status: true,\r\n         data:pool[0].total_pool\r\n      }) \r\n\r\n   } catch (error) {\r\n      return res.status(200).json({\r\n         message: \"Error!\",\r\n         status: false,\r\n      }) \r\n   }\r\n  \r\n}\r\n\r\nconst increaseWallet = async (req,res)=>{\r\n   const {amount,phone} = req.body;\r\n\r\n   if(!amount || !phone){\r\n      return res.status(200).json({\r\n         message: \"Please Enter Details!\",\r\n         status: false,\r\n      }) \r\n   }\r\n\r\n   const [user] = await connection.execute('select * from users where phone = ?',[phone]);\r\n\r\n   if(!user[0] || !user){\r\n      return res.status(200).json({\r\n         message: \"Incorrect phone number\",\r\n         status: false,\r\n      }) \r\n   }\r\ntry {\r\n   await connection.execute('update users set money = money + ? where phone = ?',[amount,phone]);\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n   }) \r\n} catch (error) {\r\n   return res.status(200).json({\r\n      message: \"Incorrect phone number\",\r\n      status: false,\r\n   }) \r\n}\r\n}\r\n\r\nconst adminPageAviator = async (req,res)=>{\r\n   return res.render('manage/aviator.ejs')\r\n}\r\n\r\nconst aviatorResult =  async (req,res)=>{\r\n   const {value} = req.body;\r\n   const floatValue = parseFloat(value);\r\n\r\n   if (isNaN(floatValue) || !isFinite(floatValue)) {\r\n      return res.json({ error: \"Invalid number value\",status:false});\r\n  }\r\n\r\n  await connection.execute('UPDATE admin SET aviator = ?',[floatValue]);\r\n\r\n  return res.json({status:true,message:'SUCCESS'});\r\n\r\n}\r\n\r\nconst bulkSmsPage = async (req,res)=>{\r\n   return res.render('manage/bulkMsg.ejs');\r\n}\r\n\r\nconst filteredUser = async (req,res)=>{\r\n   let {recharge,start,end} = req.body;\r\n   console.log(recharge,start,end,'data before');\r\n\r\n   if(!start){\r\n      start = null;\r\n   }\r\n   else{\r\n   start = new Date(start).getTime();\r\n   }\r\n\r\n   if(!end){\r\n      end = null;\r\n   }\r\n   else{\r\n      end = new Date(end).getTime();\r\n   }\r\n\r\n   recharge = recharge && !isNaN(Number(recharge)) ? Number(recharge) : null;\r\nconsole.log(recharge,start,end,'data')\r\n\r\n// Build query with parameter placeholders\r\nlet query = `SELECT * FROM users WHERE 1=1`;\r\nlet queryParams = [];\r\n\r\n// Add the recharge filter if recharge is provided (and is a valid number)\r\nif (recharge !== null) {\r\n    query += ` AND total_money <= ?`;\r\n    queryParams.push(recharge);\r\n}\r\n\r\n// Add the time range filters based on start and end\r\nif (start && end) {\r\n    query += ` AND time BETWEEN ? AND ?`;\r\n    queryParams.push(start, end);\r\n} else if (start) {\r\n    query += ` AND time >= ?`;\r\n    queryParams.push(start);\r\n} else if (end) {\r\n    query += ` AND time <= ?`;\r\n    queryParams.push(end);\r\n}\r\n\r\nconsole.log(query,queryParams,'hello')\r\n\r\ntry {\r\n   const [users] = await connection.execute(query,queryParams);\r\n   return res.json({status:true,data:users});\r\n} catch (error) {\r\n   console.error(error);\r\n   return res.json({status:false,message:'Invalid Data'});\r\n}\r\n\r\n}\r\n\r\nmodule.exports = {\r\n   adminPage,\r\n   adminPage3,\r\n   adminPage5,\r\n   adminPage10,\r\n   totalJoin,\r\n   middlewareAdminController,\r\n   changeAdmin,\r\n   membersPage,\r\n   listMember,\r\n   infoMember,\r\n   userInfo,\r\n   statistical,\r\n   statistical2,\r\n   rechargePage,\r\n   recharge,\r\n   rechargeDuyet,\r\n   rechargeRecord,\r\n   withdrawRecord,\r\n   withdraw,\r\n   levelSetting,\r\n   handlWithdraw,\r\n   settings,\r\n   editResult2,\r\n   settingBank,\r\n   settingGet,\r\n   settingCskh,\r\n   settingbuff,\r\n   register,\r\n   ctvPage,\r\n   listCTV,\r\n   profileUser,\r\n   ctvProfilePage,\r\n   infoCtv,\r\n   infoCtv2,\r\n   giftPage,\r\n   createBonus,\r\n   listRedenvelops,\r\n   banned,\r\n   listRechargeMem,\r\n   listWithdrawMem,\r\n   getLevelInfo,\r\n   listRedenvelope,\r\n   listBet,\r\n   adminPage5d,\r\n   listOrderOld,\r\n   listOrderOldK3,\r\n   editResult,\r\n   adminPageK3,\r\n   updateLevel,\r\n   CreatedSalaryRecord,\r\n   CreatedSalary,\r\n   getSalary,\r\n   getWingoBatingAmountOfOptions,\r\n   getK3BatingAmountOfOptions,\r\n   get5dBatingAmountOfOptions,\r\n   addNotification,\r\n   getPool,\r\n   updatePool,\r\n   increaseWallet,\r\n   listBetAviator,\r\n   adminPageAviator,\r\n   aviatorResult,\r\n   bulkSmsPage,\r\n   filteredUser,\r\n   registerPartner\r\n}\r\n"],"mappings":"AAAA,MAAMA,UAAU,GAAEC,OAAO,CAAC,qBAAqB,CAAC;AAChD,MAAMC,GAAG,GAAED,OAAO,CAAC,cAAc,CAAC;AAClC,MAAME,GAAG,GAAEF,OAAO,CAAC,KAAK,CAAC;AACzBA,OAAO,CAAC,QAAQ,CAAC,CAACG,MAAM,CAAC,CAAC;AAE1B,IAAIC,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;AAExB,MAAMC,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,GAAG,KAAK;EACnC,OAAOA,GAAG,CAACC,MAAM,CAAC,kBAAkB,CAAC;AACxC,CAAC;AAED,MAAMC,UAAU,GAAG,MAAAA,CAAOH,GAAG,EAAEC,GAAG,KAAK;EACpC,OAAOA,GAAG,CAACC,MAAM,CAAC,+BAA+B,CAAC;AACrD,CAAC;AAED,MAAME,UAAU,GAAG,MAAAA,CAAOJ,GAAG,EAAEC,GAAG,KAAK;EACpC,OAAOA,GAAG,CAACC,MAAM,CAAC,+BAA+B,CAAC;AACrD,CAAC;AAED,MAAMG,WAAW,GAAG,MAAAA,CAAOL,GAAG,EAAEC,GAAG,KAAK;EACrC,OAAOA,GAAG,CAACC,MAAM,CAAC,gCAAgC,CAAC;AACtD,CAAC;AAED,MAAMI,WAAW,GAAG,MAAAA,CAAON,GAAG,EAAEC,GAAG,KAAK;EACrC,OAAOA,GAAG,CAACC,MAAM,CAAC,eAAe,CAAC;AACrC,CAAC;AAED,MAAMK,WAAW,GAAG,MAAAA,CAAOP,GAAG,EAAEC,GAAG,KAAK;EACrC,OAAOA,GAAG,CAACC,MAAM,CAAC,eAAe,CAAC;AACrC,CAAC;AAED,MAAMM,cAAc,GAAG,MAAAA,CAAOR,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAIQ,KAAK,GAAGT,GAAG,CAACU,MAAM,CAACD,KAAK;EAC5B,OAAOR,GAAG,CAACC,MAAM,CAAC,uBAAuB,EAAE;IAAEO;EAAM,CAAC,CAAC;AACxD,CAAC;AAED,MAAME,QAAQ,GAAG,MAAAA,CAAOX,GAAG,EAAEC,GAAG,KAAK;EAClC,OAAOA,GAAG,CAACC,MAAM,CAAC,qBAAqB,CAAC;AAC3C,CAAC;AAED,MAAMU,WAAW,GAAG,MAAAA,CAAOZ,GAAG,EAAEC,GAAG,KAAK;EACrC,OAAOA,GAAG,CAACC,MAAM,CAAC,oBAAoB,CAAC;AAC1C,CAAC;AAED,MAAMW,OAAO,GAAG,MAAAA,CAAOb,GAAG,EAAEC,GAAG,KAAK;EACjC,OAAOA,GAAG,CAACC,MAAM,CAAC,gBAAgB,CAAC;AACtC,CAAC;AAED,MAAMY,UAAU,GAAG,MAAAA,CAAOd,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAIQ,KAAK,GAAGT,GAAG,CAACU,MAAM,CAACK,EAAE;EACzB,OAAOd,GAAG,CAACC,MAAM,CAAC,0BAA0B,EAAE;IAAEO;EAAM,CAAC,CAAC;AAC3D,CAAC;AAED,MAAMO,WAAW,GAAG,MAAAA,CAAOhB,GAAG,EAAEC,GAAG,KAAK;EACrC,OAAOA,GAAG,CAACC,MAAM,CAAC,wBAAwB,CAAC;AAC9C,CAAC;AAED,MAAMe,YAAY,GAAG,MAAAA,CAAOjB,GAAG,EAAEC,GAAG,KAAK;EACtC,OAAOA,GAAG,CAACC,MAAM,CAAC,qBAAqB,CAAC;AAC3C,CAAC;AAED,MAAMgB,cAAc,GAAG,MAAAA,CAAOlB,GAAG,EAAEC,GAAG,KAAK;EACxC,OAAOA,GAAG,CAACC,MAAM,CAAC,2BAA2B,CAAC;AACjD,CAAC;AAED,MAAMiB,QAAQ,GAAG,MAAAA,CAAOnB,GAAG,EAAEC,GAAG,KAAK;EAClC,OAAOA,GAAG,CAACC,MAAM,CAAC,qBAAqB,CAAC;AAC3C,CAAC;AAED,MAAMkB,YAAY,GAAG,MAAAA,CAAOpB,GAAG,EAAEC,GAAG,KAAK;EACtC,OAAOA,GAAG,CAACC,MAAM,CAAC,yBAAyB,CAAC;AAC/C,CAAC;AAED,MAAMmB,mBAAmB,GAAG,MAAAA,CAAOrB,GAAG,EAAEC,GAAG,KAAK;EAC7C,OAAOA,GAAG,CAACC,MAAM,CAAC,gCAAgC,CAAC;AACtD,CAAC;AAED,MAAMoB,cAAc,GAAG,MAAAA,CAAOtB,GAAG,EAAEC,GAAG,KAAK;EACxC,OAAOA,GAAG,CAACC,MAAM,CAAC,2BAA2B,CAAC;AACjD,CAAC;AACD,MAAMqB,QAAQ,GAAG,MAAAA,CAAOvB,GAAG,EAAEC,GAAG,KAAK;EAClC,OAAOA,GAAG,CAACC,MAAM,CAAC,qBAAqB,CAAC;AAC3C,CAAC;AAED,MAAMsB,OAAO,GAAG,CAAC,sBAAsB,EAAC,wBAAwB,EAAC,wBAAwB,EAAC,yBAAyB,EAAC,mBAAmB,EAAC,mBAAmB,EAAC,wBAAwB,EAAC,qCAAqC,EAAC,6BAA6B,EAAC,0BAA0B,EAAC,iCAAiC,EAAC,iCAAiC,EAAC,iCAAiC,EAAC,iCAAiC,EAAC,sBAAsB,CAAC;AACnb;AACA,MAAMC,yBAAyB,GAAG,MAAAA,CAAOzB,GAAG,EAAEC,GAAG,EAAEyB,IAAI,KAAK;EACzD;EACA,MAAMC,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC7B,IAAI,CAACA,IAAI,EAAE;IACR,OAAO1B,GAAG,CAAC4B,QAAQ,CAAC,QAAQ,CAAC;EAChC;EACA,MAAM,CAACC,IAAI,CAAC,GAAG,MAAMvC,UAAU,CAACwC,OAAO,CAAC,8EAA8E,EAAE,CAACJ,IAAI,CAAC,CAAC;EAC/H,IAAI,CAACG,IAAI,EAAE;IACR,OAAO7B,GAAG,CAAC4B,QAAQ,CAAC,QAAQ,CAAC;EAChC;EACA,IAAI;IACD,IAAIF,IAAI,IAAIG,IAAI,CAAC,CAAC,CAAC,CAACE,KAAK,IAAIF,IAAI,CAAC,CAAC,CAAC,CAACG,MAAM,IAAI,CAAC,EAAE;MAC/C,IAAIH,IAAI,CAAC,CAAC,CAAC,CAACI,KAAK,IAAI,CAAC,EAAE;QACrBjC,GAAG,CAACkC,MAAM,CAACD,KAAK,GAAG,CAAC;QACpBR,IAAI,CAAC,CAAC;MACT,CAAC,MACI,IAAGI,IAAI,CAAC,CAAC,CAAC,CAACI,KAAK,IAAI,CAAC,EAAC;QACxB,IAAIV,OAAO,CAACY,QAAQ,CAACpC,GAAG,CAACqC,IAAI,CAAC,EAAE;UAC7BpC,GAAG,CAACkC,MAAM,CAACD,KAAK,GAAG,CAAC;UACpBR,IAAI,CAAC,CAAC,CAAC,CAAE;QACX,CAAC,MAAM;UACL,OAAOzB,GAAG,CAAC4B,QAAQ,CAAC,OAAO,CAAC;QAC9B;MACJ,CAAC,MACI;QACF,OAAO5B,GAAG,CAAC4B,QAAQ,CAAC,OAAO,CAAC;MAC/B;IACH,CAAC,MAAM;MACJ,OAAO5B,GAAG,CAAC4B,QAAQ,CAAC,QAAQ,CAAC;IAChC;EACH,CAAC,CAAC,OAAOS,KAAK,EAAE;IACb,OAAOrC,GAAG,CAAC4B,QAAQ,CAAC,QAAQ,CAAC;EAChC;AACH,CAAC;AAED,MAAMU,SAAS,GAAG,MAAAA,CAAOvC,GAAG,EAAEC,GAAG,KAAK;EACnC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIa,MAAM,GAAGxC,GAAG,CAACyC,IAAI,CAACD,MAAM;EAC5B,IAAI,CAACA,MAAM,EAAE;IACV,OAAOvC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAIiD,IAAI,GAAG,EAAE;EACb,IAAIL,MAAM,IAAI,GAAG,EAAEK,IAAI,GAAG,OAAO;EACjC,IAAIL,MAAM,IAAI,GAAG,EAAEK,IAAI,GAAG,QAAQ;EAClC,IAAIL,MAAM,IAAI,GAAG,EAAEK,IAAI,GAAG,QAAQ;EAClC,IAAIL,MAAM,IAAI,GAAG,EAAEK,IAAI,GAAG,SAAS;EAEnC,MAAM,CAACf,IAAI,CAAC,GAAG,MAAMvC,UAAU,CAACuD,KAAK,CAAC,wCAAwC,EAAE,CAACnB,IAAI,CAAC,CAAC;EAEvF,IAAIG,IAAI,CAACiB,MAAM,GAAG,CAAC,EAAE;IAClB,MAAM,CAACC,QAAQ,CAAC,GAAG,MAAMzD,UAAU,CAACuD,KAAK,CAAE,yCAAwCD,IAAK,iDAAgD,EAAE,CAAClB,IAAI,CAAC,CAAC;IACjJ,MAAM,CAACsB,MAAM,CAAC,GAAG,MAAM1D,UAAU,CAACwC,OAAO,CAAE,oDAAmDc,IAAK,6BAA4B,EAAE,EAAE,CAAC;IACpI,MAAM,CAACK,OAAO,CAAC,GAAG,MAAM3D,UAAU,CAACwC,OAAO,CAAE,qDAAoDc,IAAK,8BAA6B,EAAE,EAAE,CAAC;IACvI,MAAM,CAACM,OAAO,CAAC,GAAG,MAAM5D,UAAU,CAACwC,OAAO,CAAE,sBAAqB,EAAE,EAAE,CAAC;IAEtE,OAAO9B,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,SAAS;MAClBV,MAAM,EAAE,IAAI;MACZmB,KAAK,EAAEJ,QAAQ;MACfK,QAAQ,EAAEJ,MAAM;MAChBK,WAAW,EAAEJ,OAAO;MACpBC,OAAO,EAAEA,OAAO;MAChBP,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL,CAAC,MAAM;IACJ,OAAOK,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAM2D,UAAU,GAAG,MAAAA,CAAOvD,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAI;IAAEuD,MAAM;IAAEC;EAAM,CAAC,GAAGzD,GAAG,CAACyC,IAAI;EAEhC,IAAI,CAACe,MAAM,IAAI,CAACC,KAAK,EAAE;IACpB,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAIuB,MAAM,GAAG,CAAC,IAAIC,KAAK,GAAG,CAAC,EAAE;IAC1B,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA,MAAM,CAAC6B,KAAK,CAAC,GAAG,MAAMvE,UAAU,CAACuD,KAAK,CAAE,4EAA2EU,MAAO,KAAIC,KAAM,GAAE,CAAC;EACvI,MAAM,CAACM,WAAW,CAAC,GAAG,MAAMxE,UAAU,CAACuD,KAAK,CAAE,mDAAkD,CAAC;EACjG,OAAO7C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAEU,KAAK;IACZE,UAAU,EAAEC,IAAI,CAACC,IAAI,CAACH,WAAW,CAAChB,MAAM,GAAGU,KAAK;EACnD,CAAC,CAAC;AACL,CAAC;AAED,MAAMU,OAAO,GAAG,MAAAA,CAAOnE,GAAG,EAAEC,GAAG,KAAK;EACjC,IAAI;IAAEuD,MAAM;IAAEY;EAAO,CAAC,GAAGpE,GAAG,CAACyC,IAAI;EAEjC,IAAI,CAACe,MAAM,IAAI,CAACY,MAAM,EAAE;IACrB,OAAOnE,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAIuB,MAAM,GAAG,CAAC,IAAIY,MAAM,GAAG,CAAC,EAAE;IAC3B,OAAOnE,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA,MAAM,CAACoC,KAAK,CAAC,GAAG,MAAM9E,UAAU,CAACuD,KAAK,CAAE,2EAA0EU,MAAO,KAAIY,MAAO,GAAE,CAAC;EACvI,OAAOnE,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAEiB;EACV,CAAC,CAAC;AACL,CAAC;AAED,SAASC,SAASA,CAAC5D,MAAM,EAAE;EACxB,IAAI6D,MAAM,GAAG7D,MAAM,GAAG,EAAE,GAAG,GAAG,GAAGA,MAAM,GAAGA,MAAM;EAChD,OAAO6D,MAAM;AAChB;AAEA,SAASC,UAAUA,CAAC9D,MAAM,GAAG,EAAE,EAAE+D,QAAQ,GAAG,CAAC,EAAE;EAC5C,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIhE,MAAM,EAAE;IACTgE,IAAI,GAAG,IAAI7E,IAAI,CAAC8E,MAAM,CAACjE,MAAM,CAAC,CAAC;EAClC,CAAC,MAAM;IACJgE,IAAI,GAAG,IAAI7E,IAAI,CAAC,CAAC;EACpB;EAEA6E,IAAI,CAACE,QAAQ,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAGJ,QAAQ,CAAC;EAEzC,IAAIK,KAAK,GAAGC,QAAQ,CAACL,IAAI,CAACM,WAAW,CAAC,CAAC,CAAC;EACxC,IAAIC,MAAM,GAAGF,QAAQ,CAACL,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1C,IAAIC,IAAI,GAAGJ,QAAQ,CAACL,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC;EAEnC,IAAIC,KAAK,GAAGX,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE;EAChCQ,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;EAChC,IAAIC,IAAI,GAAGZ,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;EAE7C,IAAIU,OAAO,GAAGR,QAAQ,CAACL,IAAI,CAACc,UAAU,CAAC,CAAC,CAAC;EACzC,IAAIC,OAAO,GAAGV,QAAQ,CAACL,IAAI,CAACgB,UAAU,CAAC,CAAC,CAAC;EAEzC,OAAOZ,KAAK,GAAG,GAAG,GAAGG,MAAM,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGH,IAAI;AACtG;AAEA,MAAMK,YAAY,GAAG,MAAAA,CAAO3F,GAAG,EAAEC,GAAG,KAAK;EACtC,MAAM,CAACoE,KAAK,CAAC,GAAG,MAAM9E,UAAU,CAACuD,KAAK,CAAE,6DAA4D,CAAC;EACrG,MAAM,CAAC8C,MAAM,CAAC,GAAG,MAAMrG,UAAU,CAACuD,KAAK,CAAE,6DAA4D,CAAC;EACtG,MAAM,CAACgB,KAAK,CAAC,GAAG,MAAMvE,UAAU,CAACuD,KAAK,CAAE,wDAAuD,CAAC;EAChG,MAAM,CAAC+C,MAAM,CAAC,GAAG,MAAMtG,UAAU,CAACuD,KAAK,CAAE,wDAAuD,CAAC;EACjG,MAAM,CAACgD,QAAQ,CAAC,GAAG,MAAMvG,UAAU,CAACuD,KAAK,CAAE,4DAA2D,CAAC;EACvG,MAAM,CAAC3B,QAAQ,CAAC,GAAG,MAAM5B,UAAU,CAACuD,KAAK,CAAE,4DAA2D,CAAC;EAEvG,MAAM,CAACiD,cAAc,CAAC,GAAG,MAAMxG,UAAU,CAACuD,KAAK,CAAE,yEAAwE,EAAE,CAAC0B,UAAU,CAAC,CAAC,CAAC,CAAC;EAC1I,MAAM,CAACwB,cAAc,CAAC,GAAG,MAAMzG,UAAU,CAACuD,KAAK,CAAE,yEAAwE,EAAE,CAAC0B,UAAU,CAAC,CAAC,CAAC,CAAC;EAE1I,IAAIyB,GAAG,GAAG5B,KAAK,CAAC,CAAC,CAAC,CAAC6B,KAAK;EACxB,IAAIC,IAAI,GAAGP,MAAM,CAAC,CAAC,CAAC,CAACM,KAAK;EAC1B,IAAIE,WAAW,GAAGtC,KAAK,CAAC,CAAC,CAAC,CAACoC,KAAK;EAChC,IAAIG,YAAY,GAAGR,MAAM,CAAC,CAAC,CAAC,CAACK,KAAK;EAClC,IAAII,SAAS,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAACI,KAAK;EACjC,IAAIK,SAAS,GAAGpF,QAAQ,CAAC,CAAC,CAAC,CAAC+E,KAAK;EACjC,OAAOjG,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZgE,GAAG,EAAEA,GAAG;IACRE,IAAI,EAAEA,IAAI;IACVC,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA,YAAY;IAC1BC,SAAS,EAAEA,SAAS;IACpBC,SAAS,EAAEA,SAAS;IACpBC,aAAa,EAAET,cAAc,CAAC,CAAC,CAAC,CAACG,KAAK;IACtCO,aAAa,EAAET,cAAc,CAAC,CAAC,CAAC,CAACE;EACpC,CAAC,CAAC;AACL,CAAC;AAED,MAAMQ,WAAW,GAAG,MAAAA,CAAO1G,GAAG,EAAEC,GAAG,KAAK;EACrC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIgF,KAAK,GAAG3G,GAAG,CAACyC,IAAI,CAACkE,KAAK;EAC1B,IAAIC,IAAI,GAAG5G,GAAG,CAACyC,IAAI,CAACmE,IAAI;EACxB,IAAIpE,MAAM,GAAGxC,GAAG,CAACyC,IAAI,CAACD,MAAM;EAE5B,IAAI,CAACmE,KAAK,IAAI,CAACC,IAAI,IAAI,CAACpE,MAAM,EAC3B,OAAOvC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,QAAQ;IACjBV,MAAM,EAAE,KAAK;IACbW,SAAS,EAAEhD;EACd,CAAC,CAAC;EACL,IAAIiD,IAAI,GAAG,EAAE;EACb,IAAIgE,EAAE,GAAG,EAAE;EACX,IAAIrE,MAAM,IAAI,GAAG,EAAE;IAChBK,IAAI,GAAG,QAAQ;IACfgE,EAAE,GAAG,KAAK;EACb;EACA,IAAIrE,MAAM,IAAI,GAAG,EAAE;IAChBK,IAAI,GAAG,QAAQ;IACfgE,EAAE,GAAG,KAAK;EACb;EACA,IAAIrE,MAAM,IAAI,GAAG,EAAE;IAChBK,IAAI,GAAG,QAAQ;IACfgE,EAAE,GAAG,KAAK;EACb;EACA,IAAIrE,MAAM,IAAI,GAAG,EAAE;IAChBK,IAAI,GAAG,SAAS;IAChBgE,EAAE,GAAG,MAAM;EACd;EACA,QAAQD,IAAI;IACT,KAAK,eAAe;MACjB,MAAMrH,UAAU,CAACuD,KAAK,CAAE,oBAAmBD,IAAK,OAAM,EAAE,CAAC8D,KAAK,CAAC,CAAC;MAChE,OAAO1G,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,8BAA8B;QACvCV,MAAM,EAAE,IAAI;QACZW,SAAS,EAAEhD;MACd,CAAC,CAAC;MACF;IACH,KAAK,iBAAiB;MACnB,MAAML,UAAU,CAACuD,KAAK,CAAE,oBAAmB+D,EAAG,OAAM,EAAE,CAACF,KAAK,CAAC,CAAC;MAC9D,OAAO1G,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,+BAA+B;QACxCV,MAAM,EAAE,IAAI;QACZW,SAAS,EAAEhD;MACd,CAAC,CAAC;MACF;IAEH;MACG,OAAOK,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,QAAQ;QACjBV,MAAM,EAAE,KAAK;QACbW,SAAS,EAAEhD;MACd,CAAC,CAAC;MACF;EACN;AACH,CAAC;AAED,SAASmF,QAAQA,CAACrE,MAAM,EAAE;EACvB,IAAI6D,MAAM,GAAG7D,MAAM,GAAG,EAAE,GAAG,GAAG,GAAGA,MAAM,GAAGA,MAAM;EAChD,OAAO6D,MAAM;AAChB;AAEA,SAASuC,SAASA,CAACpG,MAAM,GAAG,EAAE,EAAE+D,QAAQ,GAAG,CAAC,EAAE;EAC3C,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIhE,MAAM,EAAE;IACTgE,IAAI,GAAG,IAAI7E,IAAI,CAAC8E,MAAM,CAACjE,MAAM,CAAC,CAAC;EAClC,CAAC,MAAM;IACJgE,IAAI,GAAG,IAAI7E,IAAI,CAAC,CAAC;EACpB;EAEA6E,IAAI,CAACE,QAAQ,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAGJ,QAAQ,CAAC;EAEzC,IAAIK,KAAK,GAAGC,QAAQ,CAACL,IAAI,CAACM,WAAW,CAAC,CAAC,CAAC;EACxC,IAAIC,MAAM,GAAGF,QAAQ,CAACL,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1C,IAAIC,IAAI,GAAGJ,QAAQ,CAACL,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC;EAEnC,IAAIC,KAAK,GAAGX,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE;EAChCQ,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;EAChC,IAAIC,IAAI,GAAGZ,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;EAE7C,IAAIU,OAAO,GAAGR,QAAQ,CAACL,IAAI,CAACc,UAAU,CAAC,CAAC,CAAC;EACzC,IAAIC,OAAO,GAAGV,QAAQ,CAACL,IAAI,CAACgB,UAAU,CAAC,CAAC,CAAC;EAEzC,OAAOZ,KAAK,GAAG,GAAG,GAAGG,MAAM,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGH,IAAI;AACtG;AAEA,MAAMyB,QAAQ,GAAG,MAAAA,CAAO/G,GAAG,EAAEC,GAAG,KAAK;EAClC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIlB,KAAK,GAAGT,GAAG,CAACyC,IAAI,CAAChC,KAAK;EAC1B,IAAI,CAACA,KAAK,EAAE;IACT,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EAEA,MAAM,CAACoH,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACrC,KAAK,CAAC,CAAC;EAEtF,IAAIuG,IAAI,CAACjE,MAAM,IAAI,CAAC,EAAE;IACnB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAImH,QAAQ,GAAGC,IAAI,CAAC,CAAC,CAAC;EACtB;EACA,MAAM,CAACC,GAAG,CAAC,GAAG,MAAM1H,UAAU,CAACuD,KAAK,CAAC,wEAAwE,EAAE,CAACiE,QAAQ,CAACrD,IAAI,CAAC,CAAC;;EAE/H;EACA,IAAIwD,QAAQ,GAAG,CAAC;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAClE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAClC,MAAMC,OAAO,GAAGH,GAAG,CAACE,CAAC,CAAC,CAACE,IAAI,EAAC;IAC5B,IAAIC,KAAK,GAAGR,SAAS,CAACM,OAAO,CAAC,IAAIN,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK;IAC5D,IAAIQ,KAAK,EAAE;MACRJ,QAAQ,IAAI,CAAC;IAChB;EACH;;EAEA;EACA,IAAIK,WAAW,GAAG,CAAC;EACnB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAClE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAClC,MAAMK,OAAO,GAAGP,GAAG,CAACE,CAAC,CAAC,CAACzD,IAAI,EAAC;IAC5B,MAAM0D,OAAO,GAAGH,GAAG,CAACE,CAAC,CAAC,CAACE,IAAI,EAAC;IAC5B,IAAII,QAAQ,GAAGX,SAAS,CAACM,OAAO,CAAC,IAAIN,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK;IAC/D,IAAIW,QAAQ,EAAEF,WAAW,IAAI,CAAC;IAC9B;IACA,MAAM,CAACG,GAAG,CAAC,GAAG,MAAMnI,UAAU,CAACuD,KAAK,CAAC,wEAAwE,EAAE,CAAC0E,OAAO,CAAC,CAAC;IACzH,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,GAAG,CAAC3E,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAClC,MAAMQ,OAAO,GAAGD,GAAG,CAACP,CAAC,CAAC,CAACzD,IAAI,EAAC;MAC5B,MAAMkE,OAAO,GAAGF,GAAG,CAACP,CAAC,CAAC,CAACE,IAAI,EAAC;MAC5B,IAAIQ,QAAQ,GAAGf,SAAS,CAACc,OAAO,CAAC,IAAId,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK;MAC/D,IAAIe,QAAQ,EAAEN,WAAW,IAAI,CAAC;MAC9B;MACA,MAAM,CAACO,GAAG,CAAC,GAAG,MAAMvI,UAAU,CAACuD,KAAK,CAAC,wEAAwE,EAAE,CAAC6E,OAAO,CAAC,CAAC;MACzH,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,GAAG,CAAC/E,MAAM,EAAEoE,CAAC,EAAE,EAAE;QAClC,MAAMY,OAAO,GAAGD,GAAG,CAACX,CAAC,CAAC,CAACzD,IAAI,EAAC;QAC5B,MAAMsE,OAAO,GAAGF,GAAG,CAACX,CAAC,CAAC,CAACE,IAAI,EAAC;QAC5B,IAAIY,QAAQ,GAAGnB,SAAS,CAACkB,OAAO,CAAC,IAAIlB,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK;QAC/D,IAAImB,QAAQ,EAAEV,WAAW,IAAI,CAAC;QAC9B,MAAM,CAACW,GAAG,CAAC,GAAG,MAAM3I,UAAU,CAACuD,KAAK,CAAC,wEAAwE,EAAE,CAACiF,OAAO,CAAC,CAAC;QACzH;QACA,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGe,GAAG,CAACnF,MAAM,EAAEoE,CAAC,EAAE,EAAE;UAClC,MAAMgB,OAAO,GAAGD,GAAG,CAACf,CAAC,CAAC,CAACzD,IAAI,EAAC;UAC5B,MAAM0E,OAAO,GAAGF,GAAG,CAACf,CAAC,CAAC,CAACE,IAAI,EAAC;UAC5B,IAAIgB,QAAQ,GAAGvB,SAAS,CAACsB,OAAO,CAAC,IAAItB,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK;UAC/D,IAAIuB,QAAQ,EAAEd,WAAW,IAAI,CAAC;UAC9B;QACH;MACH;IACH;EACH;;EAEA;EACA,IAAIe,EAAE,GAAG,CAAC;EACV,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAClE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAClC,MAAMK,OAAO,GAAGP,GAAG,CAACE,CAAC,CAAC,CAACzD,IAAI,EAAC;IAC5B,MAAM,CAACgE,GAAG,CAAC,GAAG,MAAMnI,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAAC0E,OAAO,CAAC,CAAC;IACjHc,EAAE,IAAIZ,GAAG,CAAC3E,MAAM;EACnB;;EAEA;EACA,IAAIwF,EAAE,GAAG,CAAC;EACV,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAClE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAClC,MAAMK,OAAO,GAAGP,GAAG,CAACE,CAAC,CAAC,CAACzD,IAAI,EAAC;IAC5B,MAAM,CAACgE,GAAG,CAAC,GAAG,MAAMnI,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAAC0E,OAAO,CAAC,CAAC;IACjH,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,GAAG,CAAC3E,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAClC,MAAMQ,OAAO,GAAGD,GAAG,CAACP,CAAC,CAAC,CAACzD,IAAI;MAC3B,MAAM,CAACoE,GAAG,CAAC,GAAG,MAAMvI,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAAC6E,OAAO,CAAC,CAAC;MACjH,IAAIG,GAAG,CAAC/E,MAAM,GAAG,CAAC,EAAEwF,EAAE,IAAIT,GAAG,CAAC/E,MAAM;IACvC;EACH;;EAEA;EACA,IAAIyF,EAAE,GAAG,CAAC;EACV,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAClE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAClC,MAAMK,OAAO,GAAGP,GAAG,CAACE,CAAC,CAAC,CAACzD,IAAI,EAAC;IAC5B,MAAM,CAACgE,GAAG,CAAC,GAAG,MAAMnI,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAAC0E,OAAO,CAAC,CAAC;IACjH,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,GAAG,CAAC3E,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAClC,MAAMQ,OAAO,GAAGD,GAAG,CAACP,CAAC,CAAC,CAACzD,IAAI;MAC3B,MAAM,CAACoE,GAAG,CAAC,GAAG,MAAMvI,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAAC6E,OAAO,CAAC,CAAC;MACjH,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,GAAG,CAAC/E,MAAM,EAAEoE,CAAC,EAAE,EAAE;QAClC,MAAMY,OAAO,GAAGD,GAAG,CAACX,CAAC,CAAC,CAACzD,IAAI;QAC3B,MAAM,CAACwE,GAAG,CAAC,GAAG,MAAM3I,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAACiF,OAAO,CAAC,CAAC;QACjH,IAAIG,GAAG,CAACnF,MAAM,GAAG,CAAC,EAAEyF,EAAE,IAAIN,GAAG,CAACnF,MAAM;MACvC;IACH;EACH;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAAC+C,QAAQ,CAAC,GAAG,MAAMvG,UAAU,CAACuD,KAAK,CAAC,4EAA4E,EAAE,CAACrC,KAAK,CAAC,CAAC;EAChI,MAAM,CAACU,QAAQ,CAAC,GAAG,MAAM5B,UAAU,CAACuD,KAAK,CAAC,4EAA4E,EAAE,CAACrC,KAAK,CAAC,CAAC;EAChI,MAAM,CAACgI,SAAS,CAAC,GAAG,MAAMlJ,UAAU,CAACuD,KAAK,CAAC,0CAA0C,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC/F,MAAM,CAACiI,YAAY,CAAC,GAAG,MAAMnJ,UAAU,CAACuD,KAAK,CAAC,oDAAoD,EAAE,CAACiE,QAAQ,CAAC4B,GAAG,CAAC,CAAC;EACnH,MAAM,CAACC,MAAM,CAAC,GAAG,MAAMrJ,UAAU,CAACuD,KAAK,CAAC,2CAA2C,EAAE,CAACiE,QAAQ,CAAC8B,MAAM,CAAC,CAAC;EACvG,OAAO5I,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAE4D,IAAI;IACX8B,OAAO,EAAEhD,QAAQ;IACjBiD,OAAO,EAAE5H,QAAQ;IACjB6H,EAAE,EAAE/B,GAAG,CAAClE,MAAM;IACduF,EAAE,EAAEA,EAAE;IACNC,EAAE,EAAEA,EAAE;IACNC,EAAE,EAAEA,EAAE;IACNC,SAAS,EAAEA,SAAS;IACpBQ,QAAQ,EAAEP,YAAY,CAAC,CAAC,CAAC;IACzBE,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC;IACjBM,KAAK,EAAEnC,QAAQ,CAAC4B;EACnB,CAAC,CAAC;AACL,CAAC;AAED,MAAM7C,QAAQ,GAAG,MAAAA,CAAO9F,GAAG,EAAEC,GAAG,KAAK;EAElC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAI,CAACA,IAAI,EAAE;IACR,OAAO1B,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EAEH,MAAM6D,KAAK,GAAGzD,GAAG,CAAC8C,KAAK,CAACW,KAAK,GAAG0F,QAAQ,CAACnJ,GAAG,CAAC8C,KAAK,CAACW,KAAK,CAAC,GAAG,EAAE;EAC9D,MAAM2F,IAAI,GAAGpJ,GAAG,CAAC8C,KAAK,CAACsG,IAAI,GAAGD,QAAQ,CAACnJ,GAAG,CAAC8C,KAAK,CAACsG,IAAI,CAAC,GAAG,CAAC;EAC1D,MAAMC,MAAM,GAAG,CAACD,IAAI,GAAG,CAAC,IAAI3F,KAAK;EAE9B,MAAM,CAACqC,QAAQ,CAAC,GAAG,MAAMvG,UAAU,CAACuD,KAAK,CACrC,2EAA0E,EAAE,CAACW,KAAK,EAAE4F,MAAM,CAC7F,CAAC;EACD,MAAM,CAACC,kBAAkB,CAAC,GAAG,MAAM/J,UAAU,CAACuD,KAAK,CAChD,8DACH,CAAC;EAED,MAAM,CAACyG,SAAS,CAAC,GAAG,MAAMhK,UAAU,CAACuD,KAAK,CACvC,4EAA2E,EAAE,CAACW,KAAK,EAAE4F,MAAM,CAC9F,CAAC;EACD,MAAM,CAACG,mBAAmB,CAAC,GAAG,MAAMjK,UAAU,CAACuD,KAAK,CACjD,+DACH,CAAC;EAED,MAAM,CAAC3B,QAAQ,CAAC,GAAG,MAAM5B,UAAU,CAACuD,KAAK,CACtC,2EAA0E,EAAE,CAACW,KAAK,EAAE4F,MAAM,CAC7F,CAAC;EACD,MAAM,CAACI,kBAAkB,CAAC,GAAG,MAAMlK,UAAU,CAACuD,KAAK,CAChD,8DACH,CAAC;EAED,MAAM,CAAC4G,SAAS,CAAC,GAAG,MAAMnK,UAAU,CAACuD,KAAK,CACvC,4EAA2E,EAAE,CAACW,KAAK,EAAE4F,MAAM,CAC9F,CAAC;EACD,MAAM,CAACM,mBAAmB,CAAC,GAAG,MAAMpK,UAAU,CAACuD,KAAK,CACjD,+DACH,CAAC;EAGF,OAAO7C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAE0C,QAAQ;IACf8D,MAAM,EAAEL,SAAS;IACjBM,MAAM,EAAE1I,QAAQ;IAChB2I,MAAM,EAAEJ,SAAS;IACjBK,KAAK,EAAC,CAACT,kBAAkB,EAACE,mBAAmB,EAACC,kBAAkB,EAACE,mBAAmB;EACvF,CAAC,CAAC;AACL,CAAC;AAED,MAAMK,UAAU,GAAG,MAAAA,CAAOhK,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAI;IACD,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;IAC3B,IAAI,CAACA,IAAI,EAAE;MACR,OAAO1B,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,QAAQ;QACjBV,MAAM,EAAE,KAAK;QACbW,SAAS,EAAEhD;MACd,CAAC,CAAC;IACL;IAEA,MAAM,CAACqK,aAAa,CAAC,GAAG,MAAM1K,UAAU,CAACuD,KAAK,CAAC,6BAA6B,CAAC;IAC7E,MAAM,CAACoH,kBAAkB,CAAC,GAAG,MAAM3K,UAAU,CAACuD,KAAK,CAAC,iDAAiD,CAAC;IACtG,MAAM,CAACvB,QAAQ,CAAC,GAAG,MAAMhC,UAAU,CAACuD,KAAK,CAAC,sBAAsB,CAAC;IAEjE,IAAIqH,uBAAuB;IAC3B,IAAID,kBAAkB,CAACnH,MAAM,EAAE;MAC5BoH,uBAAuB,GAAGD,kBAAkB,CAAC,CAAC,CAAC;IAClD;IACA,OAAOjK,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,SAAS;MAClBV,MAAM,EAAE,IAAI;MACZV,QAAQ,EAAEA,QAAQ;MAClB6B,KAAK,EAAE6G,aAAa;MACpBG,IAAI,EAAE;QACHC,SAAS,EAAEF,uBAAuB,EAAEG,SAAS,IAAI,EAAE;QACnDC,QAAQ,EAAEJ,uBAAuB,EAAEK,SAAS,IAAI,EAAE;QAClDC,MAAM,EAAEN,uBAAuB,EAAEO,GAAG,IAAI,EAAE;QAC1CC,mBAAmB,EAAER,uBAAuB,EAAES,aAAa,IAAI;MAClE;IACH,CAAC,CAAC;EACL,CAAC,CAAC,OAAOtI,KAAK,EAAE;IACbuI,OAAO,CAACC,GAAG,CAACxI,KAAK,CAAC;IAClB,OAAOrC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAM8I,aAAa,GAAG,MAAAA,CAAO/K,GAAG,EAAEC,GAAG,KAAK;EACvC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIZ,EAAE,GAAGf,GAAG,CAACyC,IAAI,CAAC1B,EAAE;EACpB,IAAI6F,IAAI,GAAG5G,GAAG,CAACyC,IAAI,CAACmE,IAAI;EACxB,IAAI,CAACjF,IAAI,IAAI,CAACZ,EAAE,IAAI,CAAC6F,IAAI,EAAE;IACxB,OAAO3G,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAIgH,IAAI,IAAI,SAAS,EAAE;IAGpB,MAAM,CAACoE,IAAI,CAAC,GAAG,MAAMzL,UAAU,CAACuD,KAAK,CAAE,qCAAoC,EAAE,CAAC/B,EAAE,CAAC,CAAC;IAElF,MAAMiG,IAAI,GAAG,MAAMiE,kBAAkB,CAACD,IAAI,GAAG,CAAC,CAAC,EAAEvK,KAAK,CAAC;IACpDoK,OAAO,CAACC,GAAG,CAAC9D,IAAI,EAAC,mBAAmB,CAAC;IAExCkE,qBAAqB,CAAC;MACnBC,KAAK,EAAEH,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK;MACpBC,UAAU,EAACJ,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK;MACxB1K,KAAK,EAAEuG,IAAI,CAACvG,KAAK;MACjBoI,MAAM,EAAE7B,IAAI,CAAC6B,MAAM;MACnB9H;IACH,CAAC,CAAC;IAQF,IAAIiK,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK,IAAI,IAAI,IAAInE,IAAI,CAACqE,KAAK,KAAK,IAAI,EAAE;MAC/CR,OAAO,CAACC,GAAG,CAAE,qBAAqB,CAAC;MACnC;MACA,MAAMvL,UAAU,CAACuD,KAAK,CACnB,8DAA8D,EAC9D,CAAC,KAAK,EAAEkE,IAAI,CAACvG,KAAK,CACpB,CAAC;IACN;IACA,MAAMlB,UAAU,CAACuD,KAAK,CACpB,mFAAkF,EACnF,CAACkE,IAAI,CAACvG,KAAK,CACb,CAAC;IAMA,IAAIuK,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK,IAAI,GAAG,IAAInE,IAAI,CAACsE,IAAI,KAAK,CAAC,EAAE;MAC5C,MAAM/L,UAAU,CAACuD,KAAK,CAAE,4DAA2D,EAAE,CAACkE,IAAI,CAACvG,KAAK,CAAC,CAAC;IACnG;IAGC,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,qCAAqC;MAC9CV,MAAM,EAAE,IAAI;MACZmB,KAAK,EAAE0C;IACV,CAAC,CAAC;EACL;EACA,IAAIc,IAAI,IAAI,QAAQ,EAAE;IACnB,MAAMrH,UAAU,CAACuD,KAAK,CAAE,6CAA4C,EAAE,CAAC/B,EAAE,CAAC,CAAC;IAE3E,OAAOd,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,yBAAyB;MAClCV,MAAM,EAAE,IAAI;MACZmB,KAAK,EAAE0C;IACV,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAMmF,kBAAkB,GAAG,MAAMxK,KAAK,IAAI;EACvC,IAAI,CAACqD,KAAK,CAAC,GAAG,MAAMvE,UAAU,CAACuD,KAAK,CAAC,0FAA0F,EAAE,CAACrC,KAAK,CAAC,CAAC;EACzI,MAAMuG,IAAI,GAAGlD,KAAK,GAAG,CAAC,CAAC;EAEvB,IAAIkD,IAAI,KAAKuE,SAAS,IAAIvE,IAAI,KAAK,IAAI,EAAE;IACtC,MAAMwE,KAAK,CAAC,0BAA0B,CAAC;EAC1C;EAEA,OAAO;IACJ/K,KAAK,EAAEuG,IAAI,CAACvG,KAAK;IACjBiD,IAAI,EAAEsD,IAAI,CAACtD,IAAI;IACf6G,QAAQ,EAAEvD,IAAI,CAACwD,SAAS;IACxB3B,MAAM,EAAE7B,IAAI,CAAC6B,MAAM;IACnBwC,KAAK,EAACrE,IAAI,CAACqE,KAAK;IAChBC,IAAI,EAACtE,IAAI,CAACsE;EACb,CAAC;AACJ,CAAC;AAID,MAAMJ,qBAAqB,GAAG,MAAAA,CAAO;EAAEC,KAAK;EAAE1K,KAAK;EAACoI,MAAM;EAAC9H;AAAG,CAAC,KAAK;EAEjE,MAAM,CAAC+E,QAAQ,CAAC,GAAG,MAAMvG,UAAU,CAACwC,OAAO,CAAC,uDAAuD,EAAC,CAACtB,KAAK,EAAC,CAAC,CAAC,CAAC;EAE9G,IAAGqF,QAAQ,CAAC/C,MAAM,IAAE,CAAC,EAAC;IACnB,IAAI0I,KAAK,GAAG,CAAC;IACb,IAAGN,KAAK,IAAE,IAAI,EAAC;MACZM,KAAK,GAAG,CAAC;IACZ,CAAC,MACI,IAAGN,KAAK,IAAE,IAAI,EAAC;MACjBM,KAAK,GAAG,CAAC;IACZ,CAAC,MACI,IAAGN,KAAK,IAAE,IAAI,EAAC;MACjBM,KAAK,GAAG,CAAC;IACZ,CAAC,MACI,IAAGN,KAAK,IAAE,GAAG,EAAC;MAChBM,KAAK,GAAG,CAAC;IACZ,CAAC,MACI,IAAGN,KAAK,IAAE,GAAG,EAAC;MAChBM,KAAK,GAAG,CAAC;IACZ,CAAC,MACI,IAAGN,KAAK,IAAE,GAAG,EAAC;MAChBM,KAAK,GAAG,CAAC;IACZ;IAEA,MAAMlM,UAAU,CAACuD,KAAK,CAAC,iHAAiH,EAAE,CAACqI,KAAK,GAACM,KAAK,EAACN,KAAK,GAACM,KAAK,EAACN,KAAK,EAAC1K,KAAK,CAAC,CAAC;IAChLoK,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAE5C,CAAC,MAEG;IACD,IAAIW,KAAK,GAAG,CAAC;IACb;IACA;IACA;IACA;IACA,MAAMlM,UAAU,CAACuD,KAAK,CACnB,gHAAgH,EAChH,CAACqI,KAAK,GAAGM,KAAK,EAAEN,KAAK,GAAGM,KAAK,EAAEN,KAAK,GAAGM,KAAK,EAAEhL,KAAK,CACrD,CAAC;EAEL;EAEA,MAAMlB,UAAU,CAACuD,KAAK,CAAE,6CAA4C,EAAE,CAAC/B,EAAE,CAAC,CAAC;;EAE9E;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;;EAIA;AAMA,CAAC;AAED,MAAM2K,WAAW,GAAG,MAAAA,CAAO1L,GAAG,EAAEC,GAAG,KAAK;EACrC,IAAI;IACD,IAAIc,EAAE,GAAGf,GAAG,CAACyC,IAAI,CAAC1B,EAAE;IACpB,IAAIiI,EAAE,GAAGhJ,GAAG,CAACyC,IAAI,CAACuG,EAAE;IACpB,IAAIV,EAAE,GAAGtI,GAAG,CAACyC,IAAI,CAAC6F,EAAE;IACpB,IAAIC,EAAE,GAAGvI,GAAG,CAACyC,IAAI,CAAC8F,EAAE;IACpB,IAAIC,EAAE,GAAGxI,GAAG,CAACyC,IAAI,CAAC+F,EAAE;IAEpBqC,OAAO,CAACC,GAAG,CAAC,UAAU,GAAG/J,EAAE,EAAEiI,EAAE,EAAEV,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;IAE5C,MAAMjJ,UAAU,CAACuD,KAAK,CAAC,uEAAuE,EAAE,CAACkG,EAAE,EAAEV,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEzH,EAAE,CAAC,CAAC;;IAErH;IACAd,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MAClBC,OAAO,EAAE,mBAAmB;MAC5BV,MAAM,EAAE;IACX,CAAC,CAAC;EACL,CAAC,CAAC,OAAOK,KAAK,EAAE;IACbuI,OAAO,CAACvI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;;IAE7C;IACArC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MAClBC,OAAO,EAAE,eAAe;MACxBV,MAAM,EAAE,KAAK;MACbK,KAAK,EAAEA,KAAK,CAACK;IAChB,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAMgJ,aAAa,GAAG,MAAAA,CAAO3L,GAAG,EAAEC,GAAG,KAAK;EACvC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIZ,EAAE,GAAGf,GAAG,CAACyC,IAAI,CAAC1B,EAAE;EACpB,IAAI6F,IAAI,GAAG5G,GAAG,CAACyC,IAAI,CAACmE,IAAI;EACxB,IAAI,CAACjF,IAAI,IAAI,CAACZ,EAAE,IAAI,CAAC6F,IAAI,EAAE;IACxB,OAAO3G,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAIgH,IAAI,IAAI,SAAS,EAAE;IACpB,MAAMrH,UAAU,CAACuD,KAAK,CAAE,6CAA4C,EAAE,CAAC/B,EAAE,CAAC,CAAC;IAE3E,MAAM,CAACiK,IAAI,CAAC,GAAG,MAAMzL,UAAU,CAACuD,KAAK,CAAE,qCAAoC,EAAE,CAAC/B,EAAE,CAAC,CAAC;IAClF,MAAMN,KAAK,GAAGuK,IAAI,CAAC,CAAC,CAAC,CAACvK,KAAK;IAC3B,MAAM,CAACmL,QAAQ,CAAC,GAAG,MAAMrM,UAAU,CAACuD,KAAK,CAAE,qCAAoC,EAAE,CAACrC,KAAK,CAAC,CAAC;IACzF,IAAIuG,IAAI,GAAG4E,QAAQ,CAAC,CAAC,CAAC;IACtB,IAAG5E,IAAI,CAACqE,KAAK,IAAI,CAAC,IAAIrE,IAAI,CAACsE,IAAI,IAAI,IAAI,EAAC;MACrC,MAAM/L,UAAU,CAACuD,KAAK,CAClB,gEAA+D,EAChE,CAACkE,IAAI,CAACvG,KAAK,CACb,CAAC;IACJ;IAED,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,qCAAqC;MAC9CV,MAAM,EAAE,IAAI;MACZmB,KAAK,EAAE0C;IACV,CAAC,CAAC;EACL;EACA,IAAIc,IAAI,IAAI,QAAQ,EAAE;IACnB,MAAMrH,UAAU,CAACuD,KAAK,CAAE,6CAA4C,EAAE,CAAC/B,EAAE,CAAC,CAAC;IAC3E,MAAM,CAACiK,IAAI,CAAC,GAAG,MAAMzL,UAAU,CAACuD,KAAK,CAAE,qCAAoC,EAAE,CAAC/B,EAAE,CAAC,CAAC;IAClF,MAAMxB,UAAU,CAACuD,KAAK,CAAC,qDAAqD,EAAE,CAACkI,IAAI,CAAC,CAAC,CAAC,CAACG,KAAK,EAAEH,IAAI,CAAC,CAAC,CAAC,CAACvK,KAAK,CAAC,CAAC;IAC7G,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,qBAAqB;MAC9BV,MAAM,EAAE,IAAI;MACZmB,KAAK,EAAE0C;IACV,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAM+F,WAAW,GAAG,MAAAA,CAAO7L,GAAG,EAAEC,GAAG,KAAK;EACrC,IAAI;IACD,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;IAC3B,IAAI2I,SAAS,GAAGtK,GAAG,CAACyC,IAAI,CAAC6H,SAAS;IAClC,IAAIwB,IAAI,GAAG9L,GAAG,CAACyC,IAAI,CAACqJ,IAAI;IACxB,IAAId,IAAI,GAAGhL,GAAG,CAACyC,IAAI,CAACuI,IAAI;IACxB,IAAIe,EAAE,GAAG/L,GAAG,CAACyC,IAAI,CAACsJ,EAAE;IACpB,IAAIC,KAAK,GAAGhM,GAAG,CAACyC,IAAI,CAACuJ,KAAK;IAE1B,IAAI,CAACrK,IAAI,IAAI,CAACqK,KAAK,EAAE;MAClB,OAAO/L,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,QAAQ;QACjBV,MAAM,EAAE,KAAK;QACbW,SAAS,EAAEhD;MACd,CAAC,CAAC;IACL;IACA,IAAIoM,KAAK,IAAI,MAAM,EAAE;MAClB,MAAMzM,UAAU,CAACuD,KAAK,CAAE,oFAAmF,EAAE,CAACwH,SAAS,EAAEwB,IAAI,EAAEd,IAAI,CAAC,CAAC;MACrI,OAAO/K,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,mBAAmB;QAC5BV,MAAM,EAAE,IAAI;QACZmB,KAAK,EAAE0C;MACV,CAAC,CAAC;IACL;IAEA,IAAIkG,KAAK,IAAI,MAAM,EAAE;MAClB,MAAM,CAAC/B,aAAa,CAAC,GAAG,MAAM1K,UAAU,CAACuD,KAAK,CAAE,iDAAgD,CAAC;MAEjG,MAAMmJ,qBAAqB,GAAGhC,aAAa,CAACiC,GAAG,CAACpG,QAAQ,IAAI;QACzD,OAAOqG,sBAAsB,CAACrG,QAAQ,CAAC/E,EAAE,CAAC;MAC7C,CAAC,CAAC;MAEF,MAAMqL,OAAO,CAACC,GAAG,CAACJ,qBAAqB,CAAC;;MAExC;;MAEA,MAAMK,QAAQ,GAAGtM,GAAG,CAACyC,IAAI,CAAC4H,SAAS;MACnC,MAAME,QAAQ,GAAGvK,GAAG,CAACyC,IAAI,CAAC8H,QAAQ;MAClC,MAAMgC,KAAK,GAAGvM,GAAG,CAACyC,IAAI,CAACgI,MAAM;MAC7B,MAAM+B,iBAAiB,GAAGxM,GAAG,CAACyC,IAAI,CAACkI,mBAAmB;MAEtD,MAAMpL,UAAU,CAACuD,KAAK,CAAC,uGAAuG,EAAE,CAACwJ,QAAQ,EAAE/B,QAAQ,EAAEgC,KAAK,EAAEC,iBAAiB,CAAC,CAAC;MAE/K,OAAOvM,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,sBAAsB;QAC/BV,MAAM,EAAE,IAAI;QACZmB,KAAK,EAAE0C;MACV,CAAC,CAAC;IACL;EACH,CAAC,CAAC,OAAOxD,KAAK,EAAE;IACbuI,OAAO,CAACC,GAAG,CAACxI,KAAK,CAAC;IAClB,OAAOrC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,uBAAuB;MAChCV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAMkK,sBAAsB,GAAG,MAAMpL,EAAE,IAAI;EACxC,MAAM,CAAC+E,QAAQ,CAAC,GAAG,MAAMvG,UAAU,CAACuD,KAAK,CAAC,0DAA0D,EAAE,CAAC/B,EAAE,CAAC,CAAC;EAE3G,OAAO+E,QAAQ;AAClB,CAAC;AAED,MAAM2G,WAAW,GAAG,MAAAA,CAAOzM,GAAG,EAAEC,GAAG,KAAK;EACrC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIsH,QAAQ,GAAGjJ,GAAG,CAACyC,IAAI,CAACwG,QAAQ;EAChC,IAAIyD,IAAI,GAAG1M,GAAG,CAACyC,IAAI,CAACiK,IAAI;EACxB,IAAIC,SAAS,GAAG3M,GAAG,CAACyC,IAAI,CAACkK,SAAS;EAClC,IAAI,CAAChL,IAAI,IAAI,CAAC+K,IAAI,IAAI,CAACzD,QAAQ,EAAE;IAC9B,OAAOhJ,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,MAAML,UAAU,CAACuD,KAAK,CAAE,kDAAiD,EAAE,CAACmG,QAAQ,EAAEyD,IAAI,EAAEC,SAAS,CAAC,CAAC;EACvG,OAAO1M,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,mBAAmB;IAC5BV,MAAM,EAAE;EACX,CAAC,CAAC;AACL,CAAC;AAED,MAAM2K,MAAM,GAAG,MAAAA,CAAO5M,GAAG,EAAEC,GAAG,KAAK;EAChC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIZ,EAAE,GAAGf,GAAG,CAACyC,IAAI,CAAC1B,EAAE;EACpB,IAAI6F,IAAI,GAAG5G,GAAG,CAACyC,IAAI,CAACmE,IAAI;EACxB,IAAI,CAACjF,IAAI,IAAI,CAACZ,EAAE,EAAE;IACf,OAAOd,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAIgH,IAAI,IAAI,MAAM,EAAE;IACjB,MAAMrH,UAAU,CAACuD,KAAK,CAAE,0CAAyC,EAAE,CAAC/B,EAAE,CAAC,CAAC;EAC3E;EACA,IAAI6F,IAAI,IAAI,OAAO,EAAE;IAClB,MAAMrH,UAAU,CAACuD,KAAK,CAAE,0CAAyC,EAAE,CAAC/B,EAAE,CAAC,CAAC;EAC3E;EACA,OAAOd,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,mBAAmB;IAC5BV,MAAM,EAAE;EACX,CAAC,CAAC;AACL,CAAC;AAED,MAAM4K,WAAW,GAAG,MAAAA,CAAO7M,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAM6M,YAAY,GAAG/J,MAAM,IAAI;IAC5B,IAAIwB,MAAM,GAAG,EAAE;IACf,IAAIwI,UAAU,GAAG,sCAAsC;IACvD,IAAIC,gBAAgB,GAAGD,UAAU,CAAChK,MAAM;IACxC,KAAK,IAAIoE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpE,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAC9B5C,MAAM,IAAIwI,UAAU,CAACE,MAAM,CAAChJ,IAAI,CAACiJ,KAAK,CAACjJ,IAAI,CAACkJ,MAAM,CAAC,CAAC,GAAGH,gBAAgB,CAAC,CAAC;IAC5E;IACA,OAAOzI,MAAM;EAChB,CAAC;EAED,SAASuC,SAASA,CAACpG,MAAM,GAAG,EAAE,EAAE+D,QAAQ,GAAG,CAAC,EAAE;IAC3C,IAAIC,IAAI,GAAG,EAAE;IACb,IAAIhE,MAAM,EAAE;MACTgE,IAAI,GAAG,IAAI7E,IAAI,CAAC8E,MAAM,CAACjE,MAAM,CAAC,CAAC;IAClC,CAAC,MAAM;MACJgE,IAAI,GAAG,IAAI7E,IAAI,CAAC,CAAC;IACpB;IAEA6E,IAAI,CAACE,QAAQ,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAGJ,QAAQ,CAAC;IAEzC,IAAIK,KAAK,GAAGC,QAAQ,CAACL,IAAI,CAACM,WAAW,CAAC,CAAC,CAAC;IACxC,IAAIC,MAAM,GAAGF,QAAQ,CAACL,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1C,IAAIC,IAAI,GAAGJ,QAAQ,CAACL,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC;IAEnC,IAAIC,KAAK,GAAGX,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE;IAChCQ,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;IAChC,IAAIC,IAAI,GAAGZ,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;IAE7C,IAAIU,OAAO,GAAGR,QAAQ,CAACL,IAAI,CAACc,UAAU,CAAC,CAAC,CAAC;IACzC,IAAIC,OAAO,GAAGV,QAAQ,CAACL,IAAI,CAACgB,UAAU,CAAC,CAAC,CAAC;IAEzC,OAAOZ,KAAK,GAAG,GAAG,GAAGG,MAAM,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGH,IAAI;EACtG;EAEA,MAAM8H,CAAC,GAAG,IAAIvN,IAAI,CAAC,CAAC;EACpB,MAAMwH,IAAI,GAAG+F,CAAC,CAACC,OAAO,CAAC,CAAC;EAExB,IAAI1L,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIwJ,KAAK,GAAGnL,GAAG,CAACyC,IAAI,CAAC0I,KAAK;EAC1B,IAAIvE,IAAI,GAAG5G,GAAG,CAACyC,IAAI,CAACmE,IAAI;EACxB,IAAI0G,aAAa,GAAGtN,GAAG,CAACyC,IAAI,CAAC6K,aAAa;EAE1C,IAAI,CAACnC,KAAK,IAAI,CAACxJ,IAAI,EAAE;IAClB,OAAO1B,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EAEA,MAAM,CAACoH,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACnB,IAAI,CAAC,CAAC;EAErF,IAAIqF,IAAI,CAACjE,MAAM,IAAI,CAAC,EAAE;IACnB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EAEA,IAAImH,QAAQ,GAAGC,IAAI,CAAC,CAAC,CAAC;EAEtB,IAAIJ,IAAI,IAAI,KAAK,EAAE;IAChB,IAAI2G,MAAM,GAAGvN,GAAG,CAACyC,IAAI,CAAC8K,MAAM;IAC5B,IAAIA,MAAM,IAAI,GAAG,EAAE;MAChB,MAAMhO,UAAU,CAACuD,KAAK,CAAE,yDAAwD,EAAE,CAACqI,KAAK,CAAC,CAAC;IAC7F,CAAC,MAAM;MACJ,MAAM5L,UAAU,CAACuD,KAAK,CAAE,yDAAwD,EAAE,CAACqI,KAAK,CAAC,CAAC;IAC7F;IACA,OAAOlL,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,mBAAmB;MAC5BV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI2E,IAAI,IAAI,KAAK,EAAE;IAChB,IAAI2G,MAAM,GAAGvN,GAAG,CAACyC,IAAI,CAAC8K,MAAM;IAC5B,IAAIA,MAAM,IAAI,GAAG,EAAE;MAChB,MAAMhO,UAAU,CAACuD,KAAK,CAAE,+DAA8D,EAAE,CAACqI,KAAK,CAAC,CAAC;IACnG,CAAC,MAAM;MACJ,MAAM5L,UAAU,CAACuD,KAAK,CAAE,+DAA8D,EAAE,CAACqI,KAAK,CAAC,CAAC;IACnG;IACA,OAAOlL,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,mBAAmB;MAC5BV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI2E,IAAI,IAAI,KAAK,EAAE;IAChB,IAAI2G,MAAM,GAAGvN,GAAG,CAACyC,IAAI,CAAC8K,MAAM;IAC5B,IAAI9M,KAAK,GAAGT,GAAG,CAACyC,IAAI,CAAChC,KAAK;IAC1B,MAAM,CAACuG,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,2CAA2C,EAAE,CAACrC,KAAK,CAAC,CAAC;IAC3F,IAAIuG,IAAI,CAACjE,MAAM,IAAI,CAAC,EAAE;MACnB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,QAAQ;QACjBV,MAAM,EAAE,KAAK;QACbW,SAAS,EAAEhD;MACd,CAAC,CAAC;IACL;IACA,IAAI2N,MAAM,IAAI,GAAG,EAAE;MAChB,MAAMhO,UAAU,CAACuD,KAAK,CAAE,uEAAsE,EAAE,CAACqI,KAAK,EAAE1K,KAAK,CAAC,CAAC;IAClH,CAAC,MAAM;MACJ,MAAMlB,UAAU,CAACuD,KAAK,CAAE,uEAAsE,EAAE,CAACqI,KAAK,EAAE1K,KAAK,CAAC,CAAC;IAClH;IACA,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,mBAAmB;MAC5BV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI2E,IAAI,IAAI,OAAO,EAAE;IAClB,IAAI2G,MAAM,GAAGvN,GAAG,CAACyC,IAAI,CAAC8K,MAAM;IAC5B,IAAI9M,KAAK,GAAGT,GAAG,CAACyC,IAAI,CAAChC,KAAK;IAC1B,MAAM,CAACuG,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,2CAA2C,EAAE,CAACrC,KAAK,CAAC,CAAC;IAC3F,IAAIuG,IAAI,CAACjE,MAAM,IAAI,CAAC,EAAE;MACnB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,wBAAwB;QACjCV,MAAM,EAAE,KAAK;QACbW,SAAS,EAAEhD;MACd,CAAC,CAAC;IACL;IACA,IAAI2N,MAAM,IAAI,GAAG,EAAE;MAChB,MAAMhO,UAAU,CAACuD,KAAK,CAAE,6EAA4E,EAAE,CAACqI,KAAK,EAAE1K,KAAK,CAAC,CAAC;IACxH,CAAC,MAAM;MACJ,MAAMlB,UAAU,CAACuD,KAAK,CAAE,6EAA4E,EAAE,CAACqI,KAAK,EAAE1K,KAAK,CAAC,CAAC;IACxH;IACA,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,mBAAmB;MAC5BV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI,CAAC2E,IAAI,EAAE;IACR,IAAI4G,cAAc,GAAGV,YAAY,CAAC,EAAE,CAAC;IACrC,IAAIW,GAAG,GAAI,mHAAkH;IAC7H,MAAMlO,UAAU,CAACuD,KAAK,CAAC2K,GAAG,EAAE,CAACD,cAAc,EAAEzG,QAAQ,CAACtG,KAAK,EAAE0K,KAAK,EAAEmC,aAAa,EAAE,CAAC,EAAE,CAAC,EAAEjG,IAAI,CAAC,CAAC;IAC/F,OAAOpH,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,mBAAmB;MAC5BV,MAAM,EAAE,IAAI;MACZlB,EAAE,EAAEyM;IACP,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAME,eAAe,GAAG,MAAAA,CAAO1N,GAAG,EAAEC,GAAG,KAAK;EACzC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,MAAM,CAACgM,YAAY,CAAC,GAAG,MAAMpO,UAAU,CAACuD,KAAK,CAAC,+CAA+C,CAAC;EAE9F,OAAO7C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,mBAAmB;IAC5BV,MAAM,EAAE,IAAI;IACZ0L,YAAY,EAAEA;EACjB,CAAC,CAAC;AACL,CAAC;AAED,MAAMC,WAAW,GAAG,MAAAA,CAAO5N,GAAG,EAAEC,GAAG,KAAK;EACrC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIkM,OAAO,GAAG7N,GAAG,CAACyC,IAAI,CAACoL,OAAO;EAC9B,IAAIC,QAAQ,GAAG9N,GAAG,CAACyC,IAAI,CAACqL,QAAQ;EAChC,IAAIC,WAAW,GAAG/N,GAAG,CAACyC,IAAI,CAACsL,WAAW;EACtC,IAAI,CAACF,OAAO,IAAI,CAACC,QAAQ,IAAI,CAACC,WAAW,EAAE;IACxC,OAAO9N,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,MAAM,CAACoO,OAAO,CAAC,GAAG,MAAMzO,UAAU,CAACuD,KAAK,CAAE,uCAAsC,EAAE,CAAC+K,OAAO,CAAC,CAAC;EAE5F,IAAIG,OAAO,CAACjL,MAAM,GAAG,CAAC,EAAE;IACrB,IAAI+K,QAAQ,IAAI,GAAG,EAAE;MAClB,MAAMvO,UAAU,CAACuD,KAAK,CAAE,sDAAqD,EAAE,CAACiL,WAAW,EAAEF,OAAO,CAAC,CAAC;IACzG;IACA,IAAIC,QAAQ,IAAI,GAAG,EAAE;MAClB,MAAMvO,UAAU,CAACuD,KAAK,CAAE,sDAAqD,EAAE,CAACiL,WAAW,EAAEF,OAAO,CAAC,CAAC;IACzG;IACA,OAAO5N,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,mBAAmB;MAC5BV,MAAM,EAAE;IACX,CAAC,CAAC;EACL,CAAC,MAAM;IACJ,OAAOhC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,mBAAmB;MAC5BV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;AACH,CAAC;AACD,MAAMgM,YAAY,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;EAChC,OAAOC,MAAM,CAACnK,IAAI,CAACiJ,KAAK,CAACjJ,IAAI,CAACkJ,MAAM,CAAC,CAAC,IAAIgB,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC;AACnE,CAAC;AAED,MAAMpB,YAAY,GAAG/J,MAAM,IAAI;EAC5B,IAAIwB,MAAM,GAAG,EAAE;EACf,IAAIwI,UAAU,GAAG,sDAAsD;EACvE,IAAIC,gBAAgB,GAAGD,UAAU,CAAChK,MAAM;EACxC,KAAK,IAAIoE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAC9B5C,MAAM,IAAIwI,UAAU,CAACE,MAAM,CAAChJ,IAAI,CAACiJ,KAAK,CAACjJ,IAAI,CAACkJ,MAAM,CAAC,CAAC,GAAGH,gBAAgB,CAAC,CAAC;EAC5E;EACA,OAAOzI,MAAM;AAChB,CAAC;AAED,MAAM8J,SAAS,GAAGrO,GAAG,IAAI;EACtB,IAAIsO,EAAE,GAAG,EAAE;EACX,IAAItO,GAAG,CAACuO,OAAO,CAAC,iBAAiB,CAAC,EAAE;IACjCD,EAAE,GAAGtO,GAAG,CAACuO,OAAO,CAAC,iBAAiB,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC,MAAM,IAAIxO,GAAG,CAACT,UAAU,IAAIS,GAAG,CAACT,UAAU,CAACkP,aAAa,EAAE;IACxDH,EAAE,GAAGtO,GAAG,CAACT,UAAU,CAACkP,aAAa;EACpC,CAAC,MAAM;IACJH,EAAE,GAAGtO,GAAG,CAACsO,EAAE;EACd;EACA,OAAOA,EAAE;AACZ,CAAC;AAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;EACtB,MAAMtB,CAAC,GAAG,IAAIvN,IAAI,CAAC,CAAC;EACpB,MAAMwH,IAAI,GAAG+F,CAAC,CAACC,OAAO,CAAC,CAAC;EACxB,OAAOhG,IAAI;AACd,CAAC;AAED,MAAMsH,QAAQ,GAAG,MAAAA,CAAO3O,GAAG,EAAEC,GAAG,KAAK;EAClC,IAAI;IAAEsK,QAAQ;IAAEqE,QAAQ;IAAEC;EAAW,CAAC,GAAG7O,GAAG,CAACyC,IAAI;EACjD,IAAIoL,OAAO,GAAGI,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;EACxC,IAAIzD,SAAS,GAAG,QAAQ,GAAGyD,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;EACrD,IAAIvK,IAAI,GAAGoJ,YAAY,CAAC,CAAC,CAAC,GAAGmB,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;EACvD,IAAIK,EAAE,GAAGD,SAAS,CAACrO,GAAG,CAAC;EACvB,IAAIqH,IAAI,GAAGqH,UAAU,CAAC,CAAC;EAEvBG,UAAU,GAAG,YAAY;EAEzB,IAAI,CAACtE,QAAQ,IAAI,CAACqE,QAAQ,IAAI,CAACC,UAAU,EAAE;IACxC,OAAO5O,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,UAAU;MACnBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI,CAACsI,QAAQ,EAAE;IACZ,OAAOtK,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,aAAa;MACtBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI;IACD,MAAM,CAAC6M,OAAO,CAAC,GAAG,MAAMvP,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACyH,QAAQ,CAAC,CAAC;IAC5F,IAAIuE,OAAO,CAAC/L,MAAM,IAAI,CAAC,EAAE;MACtB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,kBAAkB;QAAE;QAC7BV,MAAM,EAAE;MACX,CAAC,CAAC;IACL,CAAC,MAAM;MACJ,MAAMwL,GAAG,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;MACZ,MAAMlO,UAAU,CAACwC,OAAO,CAAC0L,GAAG,EAAE,CAACI,OAAO,EAAEtD,QAAQ,EAAEC,SAAS,EAAE9K,GAAG,CAACkP,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAElL,IAAI,EAAEmL,UAAU,EAAE,CAAC,EAAEP,EAAE,EAAE,CAAC,EAAEjH,IAAI,CAAC,CAAC;MACpH,MAAM9H,UAAU,CAACwC,OAAO,CAAC,iDAAiD,EAAE,CAACwI,QAAQ,CAAC,CAAC;MACvF,OAAOtK,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,sBAAsB;QAAE;QACjCV,MAAM,EAAE;MACX,CAAC,CAAC;IACL;EACH,CAAC,CAAC,OAAOK,KAAK,EAAE;IACb,IAAIA,KAAK,EAAEuI,OAAO,CAACC,GAAG,CAACxI,KAAK,CAAC;EAChC;AACH,CAAC;AAGD,MAAMyM,eAAe,GAAG,MAAAA,CAAO/O,GAAG,EAAEC,GAAG,KAAK;EACzC,IAAI;IAAEsK,QAAQ;IAAEqE,QAAQ;IAAEC;EAAW,CAAC,GAAG7O,GAAG,CAACyC,IAAI;EACjD,IAAIoL,OAAO,GAAGI,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;EACxC,IAAIzD,SAAS,GAAG,QAAQ,GAAGyD,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;EACrD,IAAIvK,IAAI,GAAGoJ,YAAY,CAAC,CAAC,CAAC,GAAGmB,YAAY,CAAC,KAAK,EAAE,KAAK,CAAC;EACvD,IAAIK,EAAE,GAAGD,SAAS,CAACrO,GAAG,CAAC;EACvB,IAAIqH,IAAI,GAAGqH,UAAU,CAAC,CAAC;EAEvBG,UAAU,GAAG,YAAY;EAEzB,IAAI,CAACtE,QAAQ,IAAI,CAACqE,QAAQ,IAAI,CAACC,UAAU,EAAE;IACxC,OAAO5O,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,UAAU;MACnBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI,CAACsI,QAAQ,EAAE;IACZ,OAAOtK,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,aAAa;MACtBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI;IACD,MAAM,CAAC6M,OAAO,CAAC,GAAG,MAAMvP,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACyH,QAAQ,CAAC,CAAC;IAC5F,IAAIuE,OAAO,CAAC/L,MAAM,IAAI,CAAC,EAAE;MACtB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,kBAAkB;QAAE;QAC7BV,MAAM,EAAE;MACX,CAAC,CAAC;IACL,CAAC,MAAM;MACJ,MAAMwL,GAAG,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;MACZ,MAAMlO,UAAU,CAACwC,OAAO,CAAC0L,GAAG,EAAE,CAACI,OAAO,EAAEtD,QAAQ,EAAEC,SAAS,EAAE9K,GAAG,CAACkP,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAElL,IAAI,EAAEmL,UAAU,EAAE,CAAC,EAAEP,EAAE,EAAE,CAAC,EAAEjH,IAAI,CAAC,CAAC;MACpH,MAAM9H,UAAU,CAACwC,OAAO,CAAC,iDAAiD,EAAE,CAACwI,QAAQ,CAAC,CAAC;MACvF,OAAOtK,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,sBAAsB;QAAE;QACjCV,MAAM,EAAE;MACX,CAAC,CAAC;IACL;EACH,CAAC,CAAC,OAAOK,KAAK,EAAE;IACb,IAAIA,KAAK,EAAEuI,OAAO,CAACC,GAAG,CAACxI,KAAK,CAAC;EAChC;AACH,CAAC;AAED,MAAM0M,WAAW,GAAG,MAAAA,CAAOhP,GAAG,EAAEC,GAAG,KAAK;EACrC,IAAIQ,KAAK,GAAGT,GAAG,CAACyC,IAAI,CAAChC,KAAK;EAC1B,IAAI,CAACA,KAAK,EAAE;IACT,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,aAAa;MACtBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAI,CAACoH,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAE,qCAAoC,EAAE,CAACrC,KAAK,CAAC,CAAC;EAEnF,IAAIuG,IAAI,CAACjE,MAAM,IAAI,CAAC,EAAE;IACnB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,aAAa;MACtBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAI,CAACkG,QAAQ,CAAC,GAAG,MAAMvG,UAAU,CAACuD,KAAK,CAAE,kEAAiE,EAAE,CAACrC,KAAK,CAAC,CAAC;EACpH,IAAI,CAACU,QAAQ,CAAC,GAAG,MAAM5B,UAAU,CAACuD,KAAK,CAAE,kEAAiE,EAAE,CAACrC,KAAK,CAAC,CAAC;EACpH,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,aAAa;IACtBV,MAAM,EAAE,IAAI;IACZ6D,QAAQ,EAAEA,QAAQ;IAClB3E,QAAQ,EAAEA;EACb,CAAC,CAAC;AACL,CAAC;AAED,MAAM8N,OAAO,GAAG,MAAAA,CAAOjP,GAAG,EAAEC,GAAG,KAAK;EACjC,MAAMQ,KAAK,GAAGT,GAAG,CAACyC,IAAI,CAAChC,KAAK;EAE5B,MAAM,CAACuG,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACrC,KAAK,CAAC,CAAC;EAEtF,IAAIuG,IAAI,CAACjE,MAAM,IAAI,CAAC,EAAE;IACnB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,aAAa;MACtBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA,IAAI8E,QAAQ,GAAGC,IAAI,CAAC,CAAC,CAAC;EACtB;EACA,MAAM,CAACC,GAAG,CAAC,GAAG,MAAM1H,UAAU,CAACuD,KAAK,CAAC,wEAAwE,EAAE,CAACiE,QAAQ,CAACrD,IAAI,CAAC,CAAC;;EAE/H;EACA,IAAIwD,QAAQ,GAAG,CAAC;EAChB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAClE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAClC,MAAMC,OAAO,GAAGH,GAAG,CAACE,CAAC,CAAC,CAACE,IAAI,EAAC;IAC5B,IAAIC,KAAK,GAAGR,SAAS,CAACM,OAAO,CAAC,IAAIN,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK;IAC5D,IAAIQ,KAAK,EAAE;MACRJ,QAAQ,IAAI,CAAC;IAChB;EACH;;EAEA;EACA,IAAIK,WAAW,GAAG,CAAC;EACnB,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAClE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAClC,MAAMK,OAAO,GAAGP,GAAG,CAACE,CAAC,CAAC,CAACzD,IAAI,EAAC;IAC5B,MAAM0D,OAAO,GAAGH,GAAG,CAACE,CAAC,CAAC,CAACE,IAAI,EAAC;IAC5B,IAAII,QAAQ,GAAGX,SAAS,CAACM,OAAO,CAAC,IAAIN,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK;IAC/D,IAAIW,QAAQ,EAAEF,WAAW,IAAI,CAAC;IAC9B;IACA,MAAM,CAACG,GAAG,CAAC,GAAG,MAAMnI,UAAU,CAACuD,KAAK,CAAC,wEAAwE,EAAE,CAAC0E,OAAO,CAAC,CAAC;IACzH,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,GAAG,CAAC3E,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAClC,MAAMQ,OAAO,GAAGD,GAAG,CAACP,CAAC,CAAC,CAACzD,IAAI,EAAC;MAC5B,MAAMkE,OAAO,GAAGF,GAAG,CAACP,CAAC,CAAC,CAACE,IAAI,EAAC;MAC5B,IAAIQ,QAAQ,GAAGf,SAAS,CAACc,OAAO,CAAC,IAAId,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK;MAC/D,IAAIe,QAAQ,EAAEN,WAAW,IAAI,CAAC;MAC9B;MACA,MAAM,CAACO,GAAG,CAAC,GAAG,MAAMvI,UAAU,CAACuD,KAAK,CAAC,wEAAwE,EAAE,CAAC6E,OAAO,CAAC,CAAC;MACzH,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,GAAG,CAAC/E,MAAM,EAAEoE,CAAC,EAAE,EAAE;QAClC,MAAMY,OAAO,GAAGD,GAAG,CAACX,CAAC,CAAC,CAACzD,IAAI,EAAC;QAC5B,MAAMsE,OAAO,GAAGF,GAAG,CAACX,CAAC,CAAC,CAACE,IAAI,EAAC;QAC5B,IAAIY,QAAQ,GAAGnB,SAAS,CAACkB,OAAO,CAAC,IAAIlB,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK;QAC/D,IAAImB,QAAQ,EAAEV,WAAW,IAAI,CAAC;QAC9B,MAAM,CAACW,GAAG,CAAC,GAAG,MAAM3I,UAAU,CAACuD,KAAK,CAAC,wEAAwE,EAAE,CAACiF,OAAO,CAAC,CAAC;QACzH;QACA,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGe,GAAG,CAACnF,MAAM,EAAEoE,CAAC,EAAE,EAAE;UAClC,MAAMgB,OAAO,GAAGD,GAAG,CAACf,CAAC,CAAC,CAACzD,IAAI,EAAC;UAC5B,MAAM0E,OAAO,GAAGF,GAAG,CAACf,CAAC,CAAC,CAACE,IAAI,EAAC;UAC5B,IAAIgB,QAAQ,GAAGvB,SAAS,CAACsB,OAAO,CAAC,IAAItB,SAAS,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK;UAC/D,IAAIuB,QAAQ,EAAEd,WAAW,IAAI,CAAC;UAC9B;QACH;MACH;IACH;EACH;;EAEA;EACA,IAAIe,EAAE,GAAG,CAAC;EACV,KAAK,IAAInB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAClE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAClC,MAAMK,OAAO,GAAGP,GAAG,CAACE,CAAC,CAAC,CAACzD,IAAI,EAAC;IAC5B,MAAM,CAACgE,GAAG,CAAC,GAAG,MAAMnI,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAAC0E,OAAO,CAAC,CAAC;IACjHc,EAAE,IAAIZ,GAAG,CAAC3E,MAAM;EACnB;;EAEA;EACA,IAAIwF,EAAE,GAAG,CAAC;EACV,KAAK,IAAIpB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAClE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAClC,MAAMK,OAAO,GAAGP,GAAG,CAACE,CAAC,CAAC,CAACzD,IAAI,EAAC;IAC5B,MAAM,CAACgE,GAAG,CAAC,GAAG,MAAMnI,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAAC0E,OAAO,CAAC,CAAC;IACjH,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,GAAG,CAAC3E,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAClC,MAAMQ,OAAO,GAAGD,GAAG,CAACP,CAAC,CAAC,CAACzD,IAAI;MAC3B,MAAM,CAACoE,GAAG,CAAC,GAAG,MAAMvI,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAAC6E,OAAO,CAAC,CAAC;MACjH,IAAIG,GAAG,CAAC/E,MAAM,GAAG,CAAC,EAAEwF,EAAE,IAAIT,GAAG,CAAC/E,MAAM;IACvC;EACH;;EAEA;EACA,IAAIyF,EAAE,GAAG,CAAC;EACV,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,GAAG,CAAClE,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAClC,MAAMK,OAAO,GAAGP,GAAG,CAACE,CAAC,CAAC,CAACzD,IAAI,EAAC;IAC5B,MAAM,CAACgE,GAAG,CAAC,GAAG,MAAMnI,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAAC0E,OAAO,CAAC,CAAC;IACjH,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,GAAG,CAAC3E,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAClC,MAAMQ,OAAO,GAAGD,GAAG,CAACP,CAAC,CAAC,CAACzD,IAAI;MAC3B,MAAM,CAACoE,GAAG,CAAC,GAAG,MAAMvI,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAAC6E,OAAO,CAAC,CAAC;MACjH,KAAK,IAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGW,GAAG,CAAC/E,MAAM,EAAEoE,CAAC,EAAE,EAAE;QAClC,MAAMY,OAAO,GAAGD,GAAG,CAACX,CAAC,CAAC,CAACzD,IAAI;QAC3B,MAAM,CAACwE,GAAG,CAAC,GAAG,MAAM3I,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAACiF,OAAO,CAAC,CAAC;QACjH,IAAIG,GAAG,CAACnF,MAAM,GAAG,CAAC,EAAEyF,EAAE,IAAIN,GAAG,CAACnF,MAAM;MACvC;IACH;EACH;EAEA,MAAM,CAACmM,QAAQ,CAAC,GAAG,MAAM3P,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAACrC,KAAK,CAAC,CAAC;EACpH,MAAM,CAAC0O,cAAc,CAAC,GAAG,MAAM5P,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC1H,IAAI2O,cAAc,GAAG,CAAC;EACtB,IAAIC,cAAc,GAAG,CAAC;EACtB,KAAK,IAAIlI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+H,QAAQ,CAACnM,MAAM,EAAEoE,CAAC,EAAE,EAAE;IACvC,IAAI1G,KAAK,GAAGyO,QAAQ,CAAC/H,CAAC,CAAC,CAAC1G,KAAK;IAC7B,MAAM,CAACqF,QAAQ,CAAC,GAAG,MAAMvG,UAAU,CAACuD,KAAK,CAAC,0EAA0E,EAAE,CAACrC,KAAK,CAAC,CAAC;IAC9H,MAAM,CAACU,QAAQ,CAAC,GAAG,MAAM5B,UAAU,CAACuD,KAAK,CAAC,0EAA0E,EAAE,CAACrC,KAAK,CAAC,CAAC;IAC9H,IAAIqF,QAAQ,CAAC,CAAC,CAAC,CAACqF,KAAK,EAAE;MACpBiE,cAAc,IAAIzK,MAAM,CAACmB,QAAQ,CAAC,CAAC,CAAC,CAACqF,KAAK,CAAC;IAC9C;IACA,IAAIhK,QAAQ,CAAC,CAAC,CAAC,CAACgK,KAAK,EAAE;MACpBkE,cAAc,IAAI1K,MAAM,CAACxD,QAAQ,CAAC,CAAC,CAAC,CAACgK,KAAK,CAAC;IAC9C;EACH;EAEA,IAAImE,oBAAoB,GAAG,CAAC;EAC5B,IAAIC,oBAAoB,GAAG,CAAC;EAC5B,KAAK,IAAIpI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+H,QAAQ,CAACnM,MAAM,EAAEoE,CAAC,EAAE,EAAE;IACvC,IAAI1G,KAAK,GAAGyO,QAAQ,CAAC/H,CAAC,CAAC,CAAC1G,KAAK;IAC7B,MAAM,CAACsF,cAAc,CAAC,GAAG,MAAMxG,UAAU,CAACuD,KAAK,CAAC,sEAAsE,EAAE,CAACrC,KAAK,CAAC,CAAC;IAChI,MAAM,CAACuF,cAAc,CAAC,GAAG,MAAMzG,UAAU,CAACuD,KAAK,CAAC,sEAAsE,EAAE,CAACrC,KAAK,CAAC,CAAC;IAChI,KAAK,IAAI0G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,cAAc,CAAChD,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAC7C,IAAIqI,KAAK,GAAG1I,SAAS,CAAC,CAAC;MACvB,IAAIO,IAAI,GAAGP,SAAS,CAACf,cAAc,CAACoB,CAAC,CAAC,CAACE,IAAI,CAAC;MAC5C,IAAIA,IAAI,IAAImI,KAAK,EAAE;QAChBF,oBAAoB,IAAIvJ,cAAc,CAACoB,CAAC,CAAC,CAACgE,KAAK;MAClD;IACH;IACA,KAAK,IAAIhE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,cAAc,CAACjD,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAC7C,IAAIqI,KAAK,GAAG1I,SAAS,CAAC,CAAC;MACvB,IAAIO,IAAI,GAAGP,SAAS,CAACd,cAAc,CAACmB,CAAC,CAAC,CAACE,IAAI,CAAC;MAC5C,IAAIA,IAAI,IAAImI,KAAK,EAAE;QAChBD,oBAAoB,IAAIvJ,cAAc,CAACmB,CAAC,CAAC,CAACgE,KAAK;MAClD;IACH;EACH;EAEA,IAAIlF,GAAG,GAAG,CAAC;EACX,IAAIE,IAAI,GAAG,CAAC;EACZ,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+H,QAAQ,CAACnM,MAAM,EAAEoE,CAAC,EAAE,EAAE;IACvC,IAAI1G,KAAK,GAAGyO,QAAQ,CAAC/H,CAAC,CAAC,CAAC1G,KAAK;IAC7B,MAAM,CAACgP,IAAI,CAAC,GAAG,MAAMlQ,UAAU,CAACuD,KAAK,CAAC,uEAAuE,EAAE,CAACrC,KAAK,CAAC,CAAC;IACvH,MAAM,CAACiP,MAAM,CAAC,GAAG,MAAMnQ,UAAU,CAACuD,KAAK,CAAC,uEAAuE,EAAE,CAACrC,KAAK,CAAC,CAAC;IACzH,KAAK,IAAI0G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsI,IAAI,CAAC1M,MAAM,EAAEoE,CAAC,EAAE,EAAE;MACnC,IAAIqI,KAAK,GAAG1I,SAAS,CAAC,CAAC;MACvB,IAAIO,IAAI,GAAGP,SAAS,CAAC2I,IAAI,CAACtI,CAAC,CAAC,CAACE,IAAI,CAAC;MAClC,IAAIA,IAAI,IAAImI,KAAK,EAAE;QAChBvJ,GAAG,IAAIwJ,IAAI,CAACtI,CAAC,CAAC,CAACgE,KAAK;MACvB;IACH;IACA,KAAK,IAAIhE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGuI,MAAM,CAAC3M,MAAM,EAAEoE,CAAC,EAAE,EAAE;MACrC,IAAIqI,KAAK,GAAG1I,SAAS,CAAC,CAAC;MACvB,IAAIO,IAAI,GAAGP,SAAS,CAAC4I,MAAM,CAACvI,CAAC,CAAC,CAACE,IAAI,CAAC;MACpC,IAAIA,IAAI,IAAImI,KAAK,EAAE;QAChBrJ,IAAI,IAAIuJ,MAAM,CAACvI,CAAC,CAAC,CAACgE,KAAK;MAC1B;IACH;EACH;EACA,IAAIwE,SAAS,GAAG,EAAE;EAClB,MAAM,CAACC,cAAc,CAAC,GAAG,MAAMrQ,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC1H,KAAK,IAAI0G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyI,cAAc,CAAC7M,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAC7C,IAAIqI,KAAK,GAAG1I,SAAS,CAAC,CAAC;IACvB,IAAIO,IAAI,GAAGP,SAAS,CAAC8I,cAAc,CAACzI,CAAC,CAAC,CAACE,IAAI,CAAC;IAC5C,IAAIA,IAAI,IAAImI,KAAK,EAAE;MAChBG,SAAS,CAACE,IAAI,CAACD,cAAc,CAACzI,CAAC,CAAC,CAAC;IACpC;EACH;EAEA,MAAM,CAAC2I,UAAU,CAAC,GAAG,MAAMvQ,UAAU,CAACuD,KAAK,CAAC,2CAA2C,EAAE,CAACrC,KAAK,CAAC,CAAC;EACjG,IAAIsP,QAAQ,GAAGD,UAAU,CAAC,CAAC,CAAC,CAAC3E,KAAK;EAElC,IAAI6E,kBAAkB,GAAG,EAAE;EAC3B,IAAIC,kBAAkB,GAAG,EAAE;EAC3B,KAAK,IAAI9I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+H,QAAQ,CAACnM,MAAM,EAAEoE,CAAC,EAAE,EAAE;IACvC,IAAI1G,KAAK,GAAGyO,QAAQ,CAAC/H,CAAC,CAAC,CAAC1G,KAAK;IAC7B,MAAM,CAACsF,cAAc,CAAC,GAAG,MAAMxG,UAAU,CAACuD,KAAK,CAAC,sGAAsG,EAAE,CAACrC,KAAK,CAAC,CAAC;IAChK,MAAM,CAACuF,cAAc,CAAC,GAAG,MAAMzG,UAAU,CAACuD,KAAK,CAAC,8FAA8F,EAAE,CAACrC,KAAK,CAAC,CAAC;IACxJ,KAAK,IAAI0G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,cAAc,CAAChD,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAC7C,IAAIqI,KAAK,GAAG1I,SAAS,CAAC,CAAC;MACvB,IAAIO,IAAI,GAAGP,SAAS,CAACf,cAAc,CAACoB,CAAC,CAAC,CAACE,IAAI,CAAC;MAC5C,IAAIA,IAAI,IAAImI,KAAK,EAAE;QAChBQ,kBAAkB,CAACH,IAAI,CAAC9J,cAAc,CAACoB,CAAC,CAAC,CAAC;MAC7C;IACH;IACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,cAAc,CAACjD,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAC7C,IAAIqI,KAAK,GAAG1I,SAAS,CAAC,CAAC;MACvB,IAAIO,IAAI,GAAGP,SAAS,CAACd,cAAc,CAACmB,CAAC,CAAC,CAACE,IAAI,CAAC;MAC5C,IAAIA,IAAI,IAAImI,KAAK,EAAE;QAChBS,kBAAkB,CAACJ,IAAI,CAAC7J,cAAc,CAACmB,CAAC,CAAC,CAAC;MAC7C;IACH;EACH;EAEA,MAAM,CAAC+I,iBAAiB,CAAC,GAAG,MAAM3Q,UAAU,CAACuD,KAAK,CAAC,kDAAkD,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC/G,IAAI0P,uBAAuB,GAAG,EAAE;EAChC,KAAK,IAAIhJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+I,iBAAiB,CAACnN,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAChD,IAAIqI,KAAK,GAAG1I,SAAS,CAAC,CAAC;IACvB,IAAIO,IAAI,GAAGP,SAAS,CAACoJ,iBAAiB,CAAC/I,CAAC,CAAC,CAACE,IAAI,CAAC;IAC/C,IAAIA,IAAI,IAAImI,KAAK,EAAE;MAChBW,uBAAuB,CAACN,IAAI,CAACK,iBAAiB,CAAC/I,CAAC,CAAC,CAAC;IACrD;EACH;EAEA,MAAM,CAACiJ,iBAAiB,CAAC,GAAG,MAAM7Q,UAAU,CAACuD,KAAK,CAAC,kDAAkD,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC/G,IAAI4P,uBAAuB,GAAG,EAAE;EAChC,KAAK,IAAIlJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiJ,iBAAiB,CAACrN,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAChD,IAAIqI,KAAK,GAAG1I,SAAS,CAAC,CAAC;IACvB,IAAIO,IAAI,GAAGP,SAAS,CAACsJ,iBAAiB,CAACjJ,CAAC,CAAC,CAACE,IAAI,CAAC;IAC/C,IAAIA,IAAI,IAAImI,KAAK,EAAE;MAChBa,uBAAuB,CAACR,IAAI,CAACO,iBAAiB,CAACjJ,CAAC,CAAC,CAAC;IACrD;EACH;EAEA,OAAOlH,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAE4D,IAAI;IACXgC,EAAE,EAAE/B,GAAG,CAAClE,MAAM;IACduF,EAAE,EAAEA,EAAE;IACNC,EAAE,EAAEA,EAAE;IACNC,EAAE,EAAEA,EAAE;IACNmH,SAAS,EAAEA,SAAS;IACpBP,cAAc,EAAEA,cAAc;IAC9BC,cAAc,EAAEA,cAAc;IAC9BC,oBAAoB,EAAEA,oBAAoB;IAC1CC,oBAAoB,EAAEA,oBAAoB;IAC1CJ,cAAc,EAAEA,cAAc,CAACpM,MAAM;IACrCkD,GAAG,EAAEA,GAAG;IACRE,IAAI,EAAEA,IAAI;IACV6J,kBAAkB,EAAEA,kBAAkB;IACtCC,kBAAkB,EAAEA,kBAAkB;IACtCF,QAAQ,EAAEA,QAAQ;IAClBG,iBAAiB,EAAEC,uBAAuB;IAC1CE,uBAAuB,EAAEA;EAC5B,CAAC,CAAC;AACL,CAAC;AAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOtQ,GAAG,EAAEC,GAAG,KAAK;EAClC,MAAMQ,KAAK,GAAGT,GAAG,CAACyC,IAAI,CAAChC,KAAK;EAC5B,MAAM8P,QAAQ,GAAGvQ,GAAG,CAACyC,IAAI,CAAC8N,QAAQ;EAElC,SAASzJ,SAASA,CAACpG,MAAM,GAAG,EAAE,EAAE+D,QAAQ,GAAG,CAAC,EAAE;IAC3C,IAAIC,IAAI,GAAG,EAAE;IACb,IAAIhE,MAAM,EAAE;MACTgE,IAAI,GAAG,IAAI7E,IAAI,CAAC8E,MAAM,CAACjE,MAAM,CAAC,CAAC;IAClC,CAAC,MAAM;MACJgE,IAAI,GAAG,IAAI7E,IAAI,CAAC,CAAC;IACpB;IAEA6E,IAAI,CAACE,QAAQ,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAGJ,QAAQ,CAAC;IAEzC,IAAIK,KAAK,GAAGC,QAAQ,CAACL,IAAI,CAACM,WAAW,CAAC,CAAC,CAAC;IACxC,IAAIC,MAAM,GAAGF,QAAQ,CAACL,IAAI,CAACQ,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1C,IAAIC,IAAI,GAAGJ,QAAQ,CAACL,IAAI,CAACU,OAAO,CAAC,CAAC,CAAC;IAEnC,IAAIC,KAAK,GAAGX,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE;IAChCQ,KAAK,GAAGA,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,KAAK;IAChC,IAAIC,IAAI,GAAGZ,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI;IAE7C,IAAIU,OAAO,GAAGR,QAAQ,CAACL,IAAI,CAACc,UAAU,CAAC,CAAC,CAAC;IACzC,IAAIC,OAAO,GAAGV,QAAQ,CAACL,IAAI,CAACgB,UAAU,CAAC,CAAC,CAAC;IAEzC,OAAOZ,KAAK,GAAG,GAAG,GAAGG,MAAM,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG,GAAGE,KAAK,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGE,OAAO,GAAG,GAAG,GAAGH,IAAI;EACtG;EAEA,MAAM,CAAC0B,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACrC,KAAK,CAAC,CAAC;EAEtF,IAAIuG,IAAI,CAACjE,MAAM,IAAI,CAAC,EAAE;IACnB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,aAAa;MACtBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA,IAAI8E,QAAQ,GAAGC,IAAI,CAAC,CAAC,CAAC;EACtB,MAAM,CAACkI,QAAQ,CAAC,GAAG,MAAM3P,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAACrC,KAAK,CAAC,CAAC;EAEpH,IAAIkP,SAAS,GAAG,EAAE;EAClB,MAAM,CAACC,cAAc,CAAC,GAAG,MAAMrQ,UAAU,CAACuD,KAAK,CAAC,gEAAgE,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC1H,KAAK,IAAI0G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyI,cAAc,CAAC7M,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAC7C,IAAIqI,KAAK,GAAGe,QAAQ;IACpB,IAAIlJ,IAAI,GAAGP,SAAS,CAAC8I,cAAc,CAACzI,CAAC,CAAC,CAACE,IAAI,CAAC;IAC5C,IAAIA,IAAI,IAAImI,KAAK,EAAE;MAChBG,SAAS,CAACE,IAAI,CAACD,cAAc,CAACzI,CAAC,CAAC,CAAC;IACpC;EACH;EAEA,IAAI6I,kBAAkB,GAAG,EAAE;EAC3B,IAAIC,kBAAkB,GAAG,EAAE;EAC3B,KAAK,IAAI9I,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+H,QAAQ,CAACnM,MAAM,EAAEoE,CAAC,EAAE,EAAE;IACvC,IAAI1G,KAAK,GAAGyO,QAAQ,CAAC/H,CAAC,CAAC,CAAC1G,KAAK;IAC7B,MAAM,CAACsF,cAAc,CAAC,GAAG,MAAMxG,UAAU,CAACuD,KAAK,CAAC,sGAAsG,EAAE,CAACrC,KAAK,CAAC,CAAC;IAChK,MAAM,CAACuF,cAAc,CAAC,GAAG,MAAMzG,UAAU,CAACuD,KAAK,CAAC,8FAA8F,EAAE,CAACrC,KAAK,CAAC,CAAC;IACxJ,KAAK,IAAI0G,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,cAAc,CAAChD,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAC7C,IAAIqI,KAAK,GAAGe,QAAQ;MACpB,IAAIlJ,IAAI,GAAGP,SAAS,CAACf,cAAc,CAACoB,CAAC,CAAC,CAACE,IAAI,CAAC;MAC5C,IAAIA,IAAI,IAAImI,KAAK,EAAE;QAChBQ,kBAAkB,CAACH,IAAI,CAAC9J,cAAc,CAACoB,CAAC,CAAC,CAAC;MAC7C;IACH;IACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,cAAc,CAACjD,MAAM,EAAEoE,CAAC,EAAE,EAAE;MAC7C,IAAIqI,KAAK,GAAGe,QAAQ;MACpB,IAAIlJ,IAAI,GAAGP,SAAS,CAACd,cAAc,CAACmB,CAAC,CAAC,CAACE,IAAI,CAAC;MAC5C,IAAIA,IAAI,IAAImI,KAAK,EAAE;QAChBS,kBAAkB,CAACJ,IAAI,CAAC7J,cAAc,CAACmB,CAAC,CAAC,CAAC;MAC7C;IACH;EACH;EAEA,MAAM,CAAC+I,iBAAiB,CAAC,GAAG,MAAM3Q,UAAU,CAACuD,KAAK,CAAC,kDAAkD,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC/G,IAAI0P,uBAAuB,GAAG,EAAE;EAChC,KAAK,IAAIhJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+I,iBAAiB,CAACnN,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAChD,IAAIqI,KAAK,GAAGe,QAAQ;IACpB,IAAIlJ,IAAI,GAAGP,SAAS,CAACoJ,iBAAiB,CAAC/I,CAAC,CAAC,CAACE,IAAI,CAAC;IAC/C,IAAIA,IAAI,IAAImI,KAAK,EAAE;MAChBW,uBAAuB,CAACN,IAAI,CAACK,iBAAiB,CAAC/I,CAAC,CAAC,CAAC;IACrD;EACH;EAEA,MAAM,CAACiJ,iBAAiB,CAAC,GAAG,MAAM7Q,UAAU,CAACuD,KAAK,CAAC,kDAAkD,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC/G,IAAI4P,uBAAuB,GAAG,EAAE;EAChC,KAAK,IAAIlJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGiJ,iBAAiB,CAACrN,MAAM,EAAEoE,CAAC,EAAE,EAAE;IAChD,IAAIqI,KAAK,GAAGe,QAAQ;IACpB,IAAIlJ,IAAI,GAAGP,SAAS,CAACsJ,iBAAiB,CAACjJ,CAAC,CAAC,CAACE,IAAI,CAAC;IAC/C,IAAIA,IAAI,IAAImI,KAAK,EAAE;MAChBa,uBAAuB,CAACR,IAAI,CAACO,iBAAiB,CAACjJ,CAAC,CAAC,CAAC;IACrD;EACH;EAEA,OAAOlH,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAE4D,IAAI;IACX2I,SAAS,EAAEA,SAAS;IACpBK,kBAAkB,EAAEA,kBAAkB;IACtCC,kBAAkB,EAAEA,kBAAkB;IACtCC,iBAAiB,EAAEC,uBAAuB;IAC1CE,uBAAuB,EAAEA;EAC5B,CAAC,CAAC;AACL,CAAC;AAED,MAAMG,eAAe,GAAG,MAAAA,CAAOxQ,GAAG,EAAEC,GAAG,KAAK;EACzC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIlB,KAAK,GAAGT,GAAG,CAACU,MAAM,CAACD,KAAK;EAC5B,IAAI;IAAE+C,MAAM;IAAEC;EAAM,CAAC,GAAGzD,GAAG,CAACyC,IAAI;EAEhC,IAAI,CAACe,MAAM,IAAI,CAACC,KAAK,EAAE;IACpB,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAIuB,MAAM,GAAG,CAAC,IAAIC,KAAK,GAAG,CAAC,EAAE;IAC1B,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI,CAACxB,KAAK,EAAE;IACT,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EAEA,MAAM,CAACoH,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACrC,KAAK,CAAC,CAAC;EACtF,MAAM,CAACgQ,KAAK,CAAC,GAAG,MAAMlR,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACnB,IAAI,CAAC,CAAC;EAEtF,IAAIqF,IAAI,CAACjE,MAAM,IAAI,CAAC,IAAI0N,KAAK,CAAC1N,MAAM,IAAI,CAAC,EAAE;IACxC,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAI;IAAEoC,KAAK;IAAE4M,QAAQ;IAAE8B,GAAG;IAAExO,KAAK;IAAE,GAAG6E;EAAS,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC;EAE1D,MAAM,CAAClB,QAAQ,CAAC,GAAG,MAAMvG,UAAU,CAACuD,KAAK,CAAE,iEAAgEU,MAAO,KAAIC,KAAM,GAAE,EAAE,CAAChD,KAAK,CAAC,CAAC;EACxI,MAAM,CAACsD,WAAW,CAAC,GAAG,MAAMxE,UAAU,CAACuD,KAAK,CAAE,wCAAuC,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC/F,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAE0C,QAAQ;IACf9B,UAAU,EAAEC,IAAI,CAACC,IAAI,CAACH,WAAW,CAAChB,MAAM,GAAGU,KAAK;EACnD,CAAC,CAAC;AACL,CAAC;AAED,MAAMkN,eAAe,GAAG,MAAAA,CAAO3Q,GAAG,EAAEC,GAAG,KAAK;EACzC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIlB,KAAK,GAAGT,GAAG,CAACU,MAAM,CAACD,KAAK;EAC5B,IAAI;IAAE+C,MAAM;IAAEC;EAAM,CAAC,GAAGzD,GAAG,CAACyC,IAAI;EAEhC,IAAI,CAACe,MAAM,IAAI,CAACC,KAAK,EAAE;IACpB,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAIuB,MAAM,GAAG,CAAC,IAAIC,KAAK,GAAG,CAAC,EAAE;IAC1B,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI,CAACxB,KAAK,EAAE;IACT,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EAEA,MAAM,CAACoH,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACrC,KAAK,CAAC,CAAC;EACtF,MAAM,CAACgQ,KAAK,CAAC,GAAG,MAAMlR,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACnB,IAAI,CAAC,CAAC;EAEtF,IAAIqF,IAAI,CAACjE,MAAM,IAAI,CAAC,IAAI0N,KAAK,CAAC1N,MAAM,IAAI,CAAC,EAAE;IACxC,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAI;IAAEoC,KAAK;IAAE4M,QAAQ;IAAE8B,GAAG;IAAExO,KAAK;IAAE,GAAG6E;EAAS,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC;EAE1D,MAAM,CAAC7F,QAAQ,CAAC,GAAG,MAAM5B,UAAU,CAACuD,KAAK,CAAE,iEAAgEU,MAAO,KAAIC,KAAM,GAAE,EAAE,CAAChD,KAAK,CAAC,CAAC;EACxI,MAAM,CAACsD,WAAW,CAAC,GAAG,MAAMxE,UAAU,CAACuD,KAAK,CAAE,wCAAuC,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC/F,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAEjC,QAAQ;IACf6C,UAAU,EAAEC,IAAI,CAACC,IAAI,CAACH,WAAW,CAAChB,MAAM,GAAGU,KAAK;EACnD,CAAC,CAAC;AACL,CAAC;AAED,MAAMmN,eAAe,GAAG,MAAAA,CAAO5Q,GAAG,EAAEC,GAAG,KAAK;EACzC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIlB,KAAK,GAAGT,GAAG,CAACU,MAAM,CAACD,KAAK;EAC5B,IAAI;IAAE+C,MAAM;IAAEC;EAAM,CAAC,GAAGzD,GAAG,CAACyC,IAAI;EAEhC,IAAI,CAACe,MAAM,IAAI,CAACC,KAAK,EAAE;IACpB,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAIuB,MAAM,GAAG,CAAC,IAAIC,KAAK,GAAG,CAAC,EAAE;IAC1B,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI,CAACxB,KAAK,EAAE;IACT,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EAEA,MAAM,CAACoH,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACrC,KAAK,CAAC,CAAC;EACtF,MAAM,CAACgQ,KAAK,CAAC,GAAG,MAAMlR,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACnB,IAAI,CAAC,CAAC;EAEtF,IAAIqF,IAAI,CAACjE,MAAM,IAAI,CAAC,IAAI0N,KAAK,CAAC1N,MAAM,IAAI,CAAC,EAAE;IACxC,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAI;IAAEoC,KAAK;IAAE4M,QAAQ;IAAE8B,GAAG;IAAExO,KAAK;IAAE,GAAG6E;EAAS,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC;EAE1D,MAAM,CAACkJ,iBAAiB,CAAC,GAAG,MAAM3Q,UAAU,CAACuD,KAAK,CAAE,+EAA8EU,MAAO,KAAIC,KAAM,GAAE,EAAE,CAAChD,KAAK,CAAC,CAAC;EAC/J,MAAM,CAACsD,WAAW,CAAC,GAAG,MAAMxE,UAAU,CAACuD,KAAK,CAAE,sDAAqD,EAAE,CAACrC,KAAK,CAAC,CAAC;EAC7G,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAE8M,iBAAiB;IACxBlM,UAAU,EAAEC,IAAI,CAACC,IAAI,CAACH,WAAW,CAAChB,MAAM,GAAGU,KAAK;EACnD,CAAC,CAAC;AACL,CAAC;AACD;;AAEA,MAAMoN,YAAY,GAAG,MAAAA,CAAO7Q,GAAG,EAAEC,GAAG,KAAK;EACtC,MAAM,CAAC6B,IAAI,CAAC,GAAG,MAAMvC,UAAU,CAACuD,KAAK,CAAC,uBAAuB,CAAC;EAE9D,IAAI,CAAChB,IAAI,EAAE;IACR,OAAO7B,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA4I,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGhJ,IAAI,CAAC;EAClC,OAAO7B,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZ2B,IAAI,EAAE,CAAC,CAAC;IACR9B,IAAI,EAAEA;EACT,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACH,CAAC;AAED,MAAMgP,OAAO,GAAG,MAAAA,CAAO9Q,GAAG,EAAEC,GAAG,KAAK;EACjC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIlB,KAAK,GAAGT,GAAG,CAACU,MAAM,CAACD,KAAK;EAC5B,IAAI;IAAE+C,MAAM;IAAEC;EAAM,CAAC,GAAGzD,GAAG,CAACyC,IAAI;EAEhC,IAAI,CAACe,MAAM,IAAI,CAACC,KAAK,EAAE;IACpB,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAIuB,MAAM,GAAG,CAAC,IAAIC,KAAK,GAAG,CAAC,EAAE;IAC1B,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI,CAACxB,KAAK,EAAE;IACT,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EAEA,MAAM,CAACoH,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACrC,KAAK,CAAC,CAAC;EACtF,MAAM,CAACgQ,KAAK,CAAC,GAAG,MAAMlR,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACnB,IAAI,CAAC,CAAC;EAEtF,IAAIqF,IAAI,CAACjE,MAAM,IAAI,CAAC,IAAI0N,KAAK,CAAC1N,MAAM,IAAI,CAAC,EAAE;IACxC,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAI;IAAEoC,KAAK;IAAE4M,QAAQ;IAAE8B,GAAG;IAAExO,KAAK;IAAE,GAAG6E;EAAS,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC;EAE1D,MAAM,CAAC8J,OAAO,CAAC,GAAG,MAAMvR,UAAU,CAACuD,KAAK,CAAE,kFAAiFU,MAAO,KAAIC,KAAM,GAAE,EAAE,CAAChD,KAAK,CAAC,CAAC;EACxJ,MAAM,CAACsD,WAAW,CAAC,GAAG,MAAMxE,UAAU,CAACuD,KAAK,CAAE,yDAAwD,EAAE,CAACrC,KAAK,CAAC,CAAC;EAChH,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAE0N,OAAO;IACd9M,UAAU,EAAEC,IAAI,CAACC,IAAI,CAACH,WAAW,CAAChB,MAAM,GAAGU,KAAK;EACnD,CAAC,CAAC;AACL,CAAC;AAGD,MAAMsN,cAAc,GAAG,MAAAA,CAAO/Q,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAI0B,IAAI,GAAG3B,GAAG,CAAC4B,OAAO,CAACD,IAAI;EAC3B,IAAIlB,KAAK,GAAGT,GAAG,CAACU,MAAM,CAACD,KAAK;EAC5B,IAAI;IAAE+C,MAAM;IAAEC;EAAM,CAAC,GAAGzD,GAAG,CAACyC,IAAI;EAEhC,IAAI,CAACe,MAAM,IAAI,CAACC,KAAK,EAAE;IACpB,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAIuB,MAAM,GAAG,CAAC,IAAIC,KAAK,GAAG,CAAC,EAAE;IAC1B,OAAOxD,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI,CAACxB,KAAK,EAAE;IACT,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EAEA,MAAM,CAACoH,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACrC,KAAK,CAAC,CAAC;EACtF,MAAM,CAACgQ,KAAK,CAAC,GAAG,MAAMlR,UAAU,CAACuD,KAAK,CAAC,sCAAsC,EAAE,CAACnB,IAAI,CAAC,CAAC;EAEtF,IAAIqF,IAAI,CAACjE,MAAM,IAAI,CAAC,IAAI0N,KAAK,CAAC1N,MAAM,IAAI,CAAC,EAAE;IACxC,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE,KAAK;MACbW,SAAS,EAAEhD;IACd,CAAC,CAAC;EACL;EACA,IAAI;IAAEoC,KAAK;IAAE4M,QAAQ;IAAE8B,GAAG;IAAExO,KAAK;IAAE,GAAG6E;EAAS,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC;;EAE1D;EACA,MAAM,CAAC8J,OAAO,CAAC,GAAG,MAAMvR,UAAU,CAACwC,OAAO,CACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;EAAG;EACf,CAACtB,KAAK,EAAE+C,MAAM,EAAEC,KAAK,CACvB,CAAC;EAGF,MAAM,CAACM,WAAW,CAAC,GAAG,MAAMxE,UAAU,CAACuD,KAAK,CAAE,8DAA6D,EAAE,CAACrC,KAAK,CAAC,CAAC;EACrH,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZmB,KAAK,EAAE0N,OAAO;IACd9M,UAAU,EAAEC,IAAI,CAACC,IAAI,CAACH,WAAW,CAAChB,MAAM,GAAGU,KAAK;EACnD,CAAC,CAAC;AACL,CAAC;AAGD,MAAMuN,YAAY,GAAG,MAAAA,CAAOhR,GAAG,EAAEC,GAAG,KAAK;EACtC,IAAI;IAAEgR;EAAS,CAAC,GAAGjR,GAAG,CAACyC,IAAI;EAE3B,IAAIyO,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC9O,QAAQ,CAACgM,MAAM,CAAC6C,QAAQ,CAAC,CAAC;EAChE,IAAI,CAACC,SAAS,EAAE;IACb,OAAOjR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA,IAAIY,IAAI,GAAG8B,MAAM,CAACsM,QAAQ,CAAC;EAE3B,IAAIE,IAAI,GAAG,EAAE;EACb,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,KAAK;EAC3B,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,MAAM;EAC5B,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,MAAM;EAC5B,IAAItO,IAAI,IAAI,EAAE,EAAEsO,IAAI,GAAG,OAAO;EAE9B,MAAM,CAACC,GAAG,CAAC,GAAG,MAAM7R,UAAU,CAACuD,KAAK,CAAE,kDAAiDD,IAAK,8BAA6B,CAAC;EAC1H,MAAM,CAACwO,MAAM,CAAC,GAAG,MAAM9R,UAAU,CAACuD,KAAK,CAAE,sDAAqDD,IAAK,6BAA4B,CAAC;EAChI,MAAM,CAACyO,OAAO,CAAC,GAAG,MAAM/R,UAAU,CAACuD,KAAK,CAAE,qGAAoGD,IAAK,oBAAmB,CAAC;EACvK,MAAM,CAACtB,QAAQ,CAAC,GAAG,MAAMhC,UAAU,CAACuD,KAAK,CAAE,UAASqO,IAAK,aAAY,CAAC;EACtE,IAAIC,GAAG,CAACrO,MAAM,IAAI,CAAC,EAAE;IAClB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA,IAAI,CAACmP,GAAG,CAAC,CAAC,CAAC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE;IACxB,OAAOpR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA,OAAOhC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBgB,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,aAAa;IAClBC,IAAI,EAAE;MACHC,SAAS,EAAEuN;IACd,CAAC;IACDG,GAAG,EAAED,OAAO;IACZ/P,QAAQ,EAAEA,QAAQ;IAClB4P,IAAI,EAAEA,IAAI;IACVE,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC,CAACA,MAAM;IACxBpP,MAAM,EAAE;EACX,CAAC,CAAC;AACL,CAAC;AAED,MAAMuP,cAAc,GAAG,MAAAA,CAAOxR,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAI;IAAEgR;EAAS,CAAC,GAAGjR,GAAG,CAACyC,IAAI;EAE3B,IAAIyO,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC9O,QAAQ,CAACgM,MAAM,CAAC6C,QAAQ,CAAC,CAAC;EAChE,IAAI,CAACC,SAAS,EAAE;IACb,OAAOjR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA,IAAIY,IAAI,GAAG8B,MAAM,CAACsM,QAAQ,CAAC;EAE3B,IAAIE,IAAI,GAAG,EAAE;EACb,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,KAAK;EAC3B,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,MAAM;EAC5B,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,MAAM;EAC5B,IAAItO,IAAI,IAAI,EAAE,EAAEsO,IAAI,GAAG,OAAO;EAE9B,MAAM,CAACC,GAAG,CAAC,GAAG,MAAM7R,UAAU,CAACuD,KAAK,CAAE,kDAAiDD,IAAK,8BAA6B,CAAC;EAC1H,MAAM,CAACwO,MAAM,CAAC,GAAG,MAAM9R,UAAU,CAACuD,KAAK,CAAE,sDAAqDD,IAAK,6BAA4B,CAAC;EAChI,MAAM,CAACyO,OAAO,CAAC,GAAG,MAAM/R,UAAU,CAACuD,KAAK,CAAE,+GAA8GD,IAAK,oBAAmB,CAAC;EACjL,MAAM,CAACtB,QAAQ,CAAC,GAAG,MAAMhC,UAAU,CAACuD,KAAK,CAAE,UAASqO,IAAK,aAAY,CAAC;EACtE,IAAIC,GAAG,CAACrO,MAAM,IAAI,CAAC,EAAE;IAClB,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBgB,IAAI,EAAE,CAAC;MACPC,GAAG,EAAE,cAAc;MACnBC,IAAI,EAAE;QACHC,SAAS,EAAE;MACd,CAAC;MACD5B,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA,IAAI,CAACmP,GAAG,CAAC,CAAC,CAAC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE;IACxB,OAAOpR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA,OAAOhC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBgB,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,aAAa;IAClBC,IAAI,EAAE;MACHC,SAAS,EAAEuN;IACd,CAAC;IACDG,GAAG,EAAED,OAAO;IACZ/P,QAAQ,EAAEA,QAAQ;IAClB4P,IAAI,EAAEA,IAAI;IACVE,MAAM,EAAEA,MAAM,CAAC,CAAC,CAAC,CAACA,MAAM;IACxBpP,MAAM,EAAE;EACX,CAAC,CAAC;AACL,CAAC;AAED,MAAMwP,UAAU,GAAG,MAAAA,CAAOzR,GAAG,EAAEC,GAAG,KAAK;EACpC,IAAI;IAAE4C,IAAI;IAAE6O;EAAK,CAAC,GAAG1R,GAAG,CAACyC,IAAI;EAE7B,IAAI,CAACiP,IAAI,IAAI,CAAC7O,IAAI,EAAE;IACjB,OAAO5C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,UAAU;MACnBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAIkP,IAAI,GAAG,EAAE;EACb,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,KAAK;EAC3B,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,MAAM;EAC5B,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,MAAM;EAC5B,IAAItO,IAAI,IAAI,EAAE,EAAEsO,IAAI,GAAG,OAAO;EAE9B,MAAM1D,GAAG,GAAI,oBAAmB0D,IAAK,MAAK;EAC1C,MAAM5R,UAAU,CAACwC,OAAO,CAAC0L,GAAG,EAAE,CAACiE,IAAI,CAAC,CAAC;EACrC,OAAOzR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,uBAAuB;IAAE;IAClCV,MAAM,EAAE;EACX,CAAC,CAAC;AACL,CAAC;AAED,MAAM0P,WAAW,GAAG,MAAAA,CAAO3R,GAAG,EAAEC,GAAG,KAAK;EACrC,IAAI;IAAE4C,IAAI;IAAE6O;EAAK,CAAC,GAAG1R,GAAG,CAACyC,IAAI;EAE7B,IAAI,CAACiP,IAAI,IAAI,CAAC7O,IAAI,EAAE;IACjB,OAAO5C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,UAAU;MACnBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAIkP,IAAI,GAAG,EAAE;EACb,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,KAAK;EAC3B,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,MAAM;EAC5B,IAAItO,IAAI,IAAI,CAAC,EAAEsO,IAAI,GAAG,MAAM;EAC5B,IAAItO,IAAI,IAAI,EAAE,EAAEsO,IAAI,GAAG,OAAO;EAE9B,MAAM1D,GAAG,GAAI,oBAAmB0D,IAAK,MAAK;EAC1C,MAAM5R,UAAU,CAACwC,OAAO,CAAC0L,GAAG,EAAE,CAACiE,IAAI,CAAC,CAAC;EACrC,OAAOzR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,uBAAuB;IAAE;IAClCV,MAAM,EAAE;EACX,CAAC,CAAC;AACL,CAAC;AAED,MAAM2P,aAAa,GAAG,MAAAA,CAAO5R,GAAG,EAAEC,GAAG,KAAK;EACvC,IAAI;IACD,MAAMQ,KAAK,GAAGT,GAAG,CAACyC,IAAI,CAAChC,KAAK;IAC5B,MAAMoR,MAAM,GAAG7R,GAAG,CAACyC,IAAI,CAACoP,MAAM;IAC9B,MAAMjL,IAAI,GAAG5G,GAAG,CAACyC,IAAI,CAACmE,IAAI;IAC1B,MAAM9G,GAAG,GAAG,IAAID,IAAI,CAAC,CAAC;IACtB,MAAMiS,aAAa,GAAGhS,GAAG,CAACiS,cAAc,CAAC,OAAO,EAAE;MAC/CC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACX,CAAC,CAAC;;IAEF;IACA,IAAI,CAAC,UAAU,CAACC,IAAI,CAAC9R,KAAK,CAAC,EAAE;MAC1B,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,wEAAwE;QACjFV,MAAM,EAAE;MACX,CAAC,CAAC;IACL;;IAEA;IACA,MAAMuQ,cAAc,GAAG,uCAAuC;IAC9D,MAAM,CAACC,YAAY,CAAC,GAAG,MAAMlT,UAAU,CAACwC,OAAO,CAACyQ,cAAc,EAAE,CAAC/R,KAAK,CAAC,CAAC;IAExE,IAAIgS,YAAY,CAAC1P,MAAM,KAAK,CAAC,EAAE;MAC5B;MACA,OAAO9C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,8DAA8D;QACvEV,MAAM,EAAE;MACX,CAAC,CAAC;IACL;;IAEA;IACA,MAAMyQ,eAAe,GAAG,0DAA0D;IAClF,MAAMnT,UAAU,CAACwC,OAAO,CAAC2Q,eAAe,EAAE,CAACb,MAAM,EAAEpR,KAAK,CAAC,CAAC;;IAE1D;IACA,MAAMkS,iBAAiB,GAAG,oEAAoE;IAC9F,MAAMpT,UAAU,CAACwC,OAAO,CAAC4Q,iBAAiB,EAAE,CAAClS,KAAK,EAAEoR,MAAM,EAAEjL,IAAI,EAAEkL,aAAa,CAAC,CAAC;IAEjF7R,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MAAEC,OAAO,EAAE;IAAqC,CAAC,CAAC;EAC1E,CAAC,CAAC,OAAOL,KAAK,EAAE;IACbuI,OAAO,CAACvI,KAAK,CAACA,KAAK,CAAC;IACpBrC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MAAEJ,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC3D;AACH,CAAC;AAED,MAAMsQ,SAAS,GAAG,MAAAA,CAAO5S,GAAG,EAAEC,GAAG,KAAK;EACnC,MAAM,CAAC6B,IAAI,CAAC,GAAG,MAAMvC,UAAU,CAACuD,KAAK,CAAE,yCAAwC,CAAC;EAEhF,IAAI,CAAChB,IAAI,EAAE;IACR,OAAO7B,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACA4I,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGhJ,IAAI,CAAC;EAClC,OAAO7B,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZ2B,IAAI,EAAE,CAAC,CAAC;IACR9B,IAAI,EAAEA;EACT,CAAC,CAAC;AACL,CAAC;AAED,MAAM+Q,6BAA6B,GAAG,MAAAA,CAAO7S,GAAG,EAAEC,GAAG,KAAK;EACvD,IAAI;IACD,IAAI6S,QAAQ,GAAG3J,QAAQ,CAACnJ,GAAG,CAAC8C,KAAK,CAACgQ,QAAQ,CAAC;IAE3C,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAACD,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;MACxC,OAAO7S,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,mBAAmB;QAC5BV,MAAM,EAAE;MACX,CAAC,CAAC;IACL;IAEA,IAAI+Q,QAAQ;IAEZ,IAAIF,QAAQ,IAAI,CAAC,EAAEE,QAAQ,GAAG,OAAO;IACrC,IAAIF,QAAQ,IAAI,CAAC,EAAEE,QAAQ,GAAG,QAAQ;IACtC,IAAIF,QAAQ,IAAI,CAAC,EAAEE,QAAQ,GAAG,QAAQ;IACtC,IAAIF,QAAQ,IAAI,EAAE,EAAEE,QAAQ,GAAG,SAAS;IAExC,MAAMC,oBAAoB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC/E,MAAMC,mBAAmB,GAAG,CACzB;MACGC,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,QAAQ;MACfxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,OAAO;MACdxM,KAAK,EAAE;IACV,CAAC,CACH;IACD,MAAMyM,qBAAqB,GAAG,CAC3B;MACGD,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,OAAO;MACdxM,KAAK,EAAE;IACV,CAAC,CACH;IAED,IAAI0M,kBAAkB,GAAG,EAAE;IAC3B,IAAIC,kBAAkB,GAAG,EAAE;IAC3B,IAAIC,oBAAoB,GAAG,EAAE;IAE7B,KAAK,MAAMhC,GAAG,IAAI0B,oBAAoB,EAAE;MACrC,MAAM,CAAC1O,MAAM,CAAC,GAAG,MAAMhF,UAAU,CAACuD,KAAK,CAAE,+DAA8DyO,GAAI,iBAAgByB,QAAS,kBAAiB,CAAC;MACtJ,MAAMQ,UAAU,GAAGjP,MAAM,CAAC,CAAC,CAAC,CAACiP,UAAU;MACvCH,kBAAkB,CAACxD,IAAI,CAAC;QAAE0B,GAAG,EAAEA,GAAG;QAAEiC,UAAU,EAAEA,UAAU,IAAI;MAAE,CAAC,CAAC;IACrE;IAEA,KAAK,MAAMjC,GAAG,IAAI2B,mBAAmB,EAAE;MACpC,MAAM,CAAC3O,MAAM,CAAC,GAAG,MAAMhF,UAAU,CAACuD,KAAK,CAAE,+DAA8DyO,GAAG,CAAC5K,KAAM,iBAAgBqM,QAAS,kBAAiB,CAAC;MAC5J,MAAMQ,UAAU,GAAGjP,MAAM,CAAC,CAAC,CAAC,CAACiP,UAAU;MACvCF,kBAAkB,CAACzD,IAAI,CAAC;QAAE0B,GAAG,EAAEA,GAAG,CAAC4B,KAAK;QAAEK,UAAU,EAAEA,UAAU,IAAI;MAAE,CAAC,CAAC;IAC3E;IAEA,KAAK,MAAMjC,GAAG,IAAI6B,qBAAqB,EAAE;MACtC,MAAM,CAAC7O,MAAM,CAAC,GAAG,MAAMhF,UAAU,CAACuD,KAAK,CAAE,+DAA8DyO,GAAG,CAAC5K,KAAM,iBAAgBqM,QAAS,kBAAiB,CAAC;MAC5J,MAAMQ,UAAU,GAAGjP,MAAM,CAAC,CAAC,CAAC,CAACiP,UAAU;MACvCD,oBAAoB,CAAC1D,IAAI,CAAC;QAAE0B,GAAG,EAAEA,GAAG,CAAC4B,KAAK;QAAEK,UAAU,EAAEA,UAAU,IAAI;MAAE,CAAC,CAAC;IAC7E;IAEA,OAAOvT,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,SAAS;MAClBV,MAAM,EAAE,IAAI;MACZ2B,IAAI,EAAE;QACHyP,kBAAkB,EAAEA,kBAAkB;QACtCC,kBAAkB,EAAEA,kBAAkB;QACtCC,oBAAoB,EAAEA;MACzB;IACH,CAAC,CAAC;EACL,CAAC,CAAC,OAAOjR,KAAK,EAAE;IACbuI,OAAO,CAACC,GAAG,CAACxI,KAAK,CAAC;IAClB,OAAOrC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,uBAAuB;MAChCV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAMwR,0BAA0B,GAAG,MAAAA,CAAOzT,GAAG,EAAEC,GAAG,KAAK;EACpD,IAAI;IACD,IAAI6S,QAAQ,GAAG3J,QAAQ,CAACnJ,GAAG,CAAC8C,KAAK,CAACgQ,QAAQ,CAAC;IAE3C,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAACD,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;MACxC,OAAO7S,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,mBAAmB;QAC5BV,MAAM,EAAE;MACX,CAAC,CAAC;IACL;IAEA,IAAI+Q,QAAQ;IAEZ,IAAIF,QAAQ,IAAI,CAAC,EAAEE,QAAQ,GAAG,GAAG;IACjC,IAAIF,QAAQ,IAAI,CAAC,EAAEE,QAAQ,GAAG,GAAG;IACjC,IAAIF,QAAQ,IAAI,CAAC,EAAEE,QAAQ,GAAG,GAAG;IACjC,IAAIF,QAAQ,IAAI,EAAE,EAAEE,QAAQ,GAAG,IAAI;IAEnC,MAAMC,oBAAoB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACtF,MAAMS,kBAAkB,GAAG,CACxB;MACGP,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,OAAO;MACdxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,MAAM;MACbxM,KAAK,EAAE;IACV,CAAC,CACH;IACD,MAAMgN,kBAAkB,GAAG,CACxB;MACGR,KAAK,EAAE,IAAI;MACXxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,IAAI;MACXxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,IAAI;MACXxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,IAAI;MACXxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,IAAI;MACXxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,IAAI;MACXxM,KAAK,EAAE;IACV,CAAC,CACH;IACD,MAAMiN,kBAAkB,GAAG,CACxB;MACGT,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,CACH;IAED,IAAIkN,uBAAuB,GAAG,EAAE;IAChC,IAAIC,sBAAsB,GAAG,EAAE;IAC/B,IAAIC,iBAAiB,GAAG,EAAE;IAC1B,IAAIC,iBAAiB,GAAG,EAAE;IAE1B,KAAK,MAAMzC,GAAG,IAAI0B,oBAAoB,EAAE;MACrC,MAAM,CAAC1O,MAAM,CAAC,GAAG,MAAMhF,UAAU,CAACuD,KAAK,CAAE,mEAAkEyO,GAAI,kBAAiByB,QAAS,yCAAwC,CAAC;MAClL,MAAMQ,UAAU,GAAGjP,MAAM,CAAC,CAAC,CAAC,CAACiP,UAAU;MACvCK,uBAAuB,CAAChE,IAAI,CAAC;QAAE0B,GAAG,EAAEA,GAAG;QAAEiC,UAAU,EAAEA,UAAU,IAAI;MAAE,CAAC,CAAC;IAC1E;IAEA,KAAK,MAAMjC,GAAG,IAAImC,kBAAkB,EAAE;MACnC,MAAM,CAACnP,MAAM,CAAC,GAAG,MAAMhF,UAAU,CAACuD,KAAK,CAAE,mEAAkEyO,GAAG,CAAC5K,KAAM,kBAAiBqM,QAAS,yCAAwC,CAAC;MACxL,MAAMQ,UAAU,GAAGjP,MAAM,CAAC,CAAC,CAAC,CAACiP,UAAU;MACvCM,sBAAsB,CAACjE,IAAI,CAAC;QAAE0B,GAAG,EAAEA,GAAG,CAAC4B,KAAK;QAAEK,UAAU,EAAEA,UAAU,IAAI;MAAE,CAAC,CAAC;IAC/E;IAEA,KAAK,MAAMjC,GAAG,IAAIoC,kBAAkB,EAAE;MACnC,MAAM,CAACpP,MAAM,CAAC,GAAG,MAAMhF,UAAU,CAACuD,KAAK,CAAE,mEAAkEyO,GAAG,CAAC5K,KAAM,kBAAiBqM,QAAS,4CAA2C,CAAC;MAC3L,MAAMQ,UAAU,GAAGjP,MAAM,CAAC,CAAC,CAAC,CAACiP,UAAU;MACvCO,iBAAiB,CAAClE,IAAI,CAAC;QAAE0B,GAAG,EAAEA,GAAG,CAAC4B,KAAK;QAAEK,UAAU,EAAEA,UAAU,IAAI;MAAE,CAAC,CAAC;IAC1E;IAEA,KAAK,MAAMjC,GAAG,IAAIqC,kBAAkB,EAAE;MACnC,MAAM,CAACrP,MAAM,CAAC,GAAG,MAAMhF,UAAU,CAACuD,KAAK,CAAE,mEAAkEyO,GAAG,CAAC5K,KAAM,kBAAiBqM,QAAS,8CAA6C,CAAC;MAC7L,MAAMQ,UAAU,GAAGjP,MAAM,CAAC,CAAC,CAAC,CAACiP,UAAU;MACvCQ,iBAAiB,CAACnE,IAAI,CAAC;QAAE0B,GAAG,EAAEA,GAAG,CAAC4B,KAAK;QAAEK,UAAU,EAAEA,UAAU,IAAI;MAAE,CAAC,CAAC;IAC1E;IAEA,OAAOvT,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,SAAS;MAClBV,MAAM,EAAE,IAAI;MACZ2B,IAAI,EAAE;QACHiQ,uBAAuB,EAAEA,uBAAuB;QAChDC,sBAAsB,EAAEA,sBAAsB;QAC9CC,iBAAiB,EAAEA,iBAAiB;QACpCC,iBAAiB,EAAEA;MACtB;IACH,CAAC,CAAC;EACL,CAAC,CAAC,OAAO1R,KAAK,EAAE;IACbuI,OAAO,CAACC,GAAG,CAACxI,KAAK,CAAC;IAClB,OAAOrC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,uBAAuB;MAChCV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAMgS,0BAA0B,GAAG,MAAAA,CAAOjU,GAAG,EAAEC,GAAG,KAAK;EACpD,IAAI;IACD,IAAI6S,QAAQ,GAAG3J,QAAQ,CAACnJ,GAAG,CAAC8C,KAAK,CAACgQ,QAAQ,CAAC;IAE3C,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAACC,OAAO,CAACD,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE;MACxC,OAAO7S,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;QACzBC,OAAO,EAAE,mBAAmB;QAC5BV,MAAM,EAAE;MACX,CAAC,CAAC;IACL;IAEA,IAAI+Q,QAAQ;IAEZ,IAAIF,QAAQ,IAAI,CAAC,EAAEE,QAAQ,GAAG,GAAG;IACjC,IAAIF,QAAQ,IAAI,CAAC,EAAEE,QAAQ,GAAG,GAAG;IACjC,IAAIF,QAAQ,IAAI,CAAC,EAAEE,QAAQ,GAAG,GAAG;IACjC,IAAIF,QAAQ,IAAI,EAAE,EAAEE,QAAQ,GAAG,IAAI;IAEnC,MAAMkB,mBAAmB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACrD,MAAMC,iBAAiB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxD,MAAMC,qBAAqB,GAAG,CAC3B;MACGjB,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,OAAO;MACdxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,KAAK;MACZxM,KAAK,EAAE;IACV,CAAC,EACD;MACGwM,KAAK,EAAE,MAAM;MACbxM,KAAK,EAAE;IACV,CAAC,CACH;IAED,IAAI/C,IAAI,GAAG,EAAE;IAEb,KAAK,MAAMyQ,QAAQ,IAAIH,mBAAmB,EAAE;MACzC,KAAK,MAAMI,aAAa,IAAIH,iBAAiB,EAAE;QAC5C,MAAM,CAAC5P,MAAM,CAAC,GAAG,MAAMhF,UAAU,CAACuD,KAAK,CAAE,mEAAkEwR,aAAc,kBAAiBtB,QAAS,oCAAmCqB,QAAS,GAAE,CAAC;QAClM,MAAMb,UAAU,GAAGjP,MAAM,CAAC,CAAC,CAAC,CAACiP,UAAU;QACvC5P,IAAI,CAACiM,IAAI,CAAC;UAAEwE,QAAQ,EAAEA,QAAQ;UAAE9C,GAAG,EAAE+C,aAAa;UAAEd,UAAU,EAAEA,UAAU,IAAI;QAAE,CAAC,CAAC;MACrF;MACA,KAAK,MAAMe,iBAAiB,IAAIH,qBAAqB,EAAE;QACpD,MAAM,CAAC7P,MAAM,CAAC,GAAG,MAAMhF,UAAU,CAACuD,KAAK,CAAE,+DAA8DyR,iBAAiB,CAAC5N,KAAM,iBAAgBqM,QAAS,oCAAmCqB,QAAS,GAAE,CAAC;QACvM,MAAMb,UAAU,GAAGjP,MAAM,CAAC,CAAC,CAAC,CAACiP,UAAU;QACvC5P,IAAI,CAACiM,IAAI,CAAC;UAAEwE,QAAQ,EAAEA,QAAQ;UAAE9C,GAAG,EAAEgD,iBAAiB,CAACpB,KAAK;UAAEK,UAAU,EAAEA,UAAU,IAAI;QAAE,CAAC,CAAC;MAC/F;IACH;IAEA,KAAK,MAAMe,iBAAiB,IAAIH,qBAAqB,EAAE;MACpD,MAAM,CAAC7P,MAAM,CAAC,GAAG,MAAMhF,UAAU,CAACuD,KAAK,CAAE,+DAA8DyR,iBAAiB,CAAC5N,KAAM,iBAAgBqM,QAAS,yCAAwC,CAAC;MACjM,MAAMQ,UAAU,GAAGjP,MAAM,CAAC,CAAC,CAAC,CAACiP,UAAU;MACvC5P,IAAI,CAACiM,IAAI,CAAC;QAAEwE,QAAQ,EAAE,OAAO;QAAE9C,GAAG,EAAEgD,iBAAiB,CAACpB,KAAK;QAAEK,UAAU,EAAEA,UAAU,IAAI;MAAE,CAAC,CAAC;IAC9F;IAEA,OAAOvT,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,SAAS;MAClBV,MAAM,EAAE,IAAI;MACZ2B,IAAI,EAAEA;IACT,CAAC,CAAC;EACL,CAAC,CAAC,OAAOtB,KAAK,EAAE;IACbuI,OAAO,CAACC,GAAG,CAACxI,KAAK,CAAC;IAClB,OAAOrC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,uBAAuB;MAChCV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAMuS,eAAe,GAAG,MAAAA,CAAOxU,GAAG,EAACC,GAAG,KAAG;EACtC,MAAM;IAACwU,KAAK;IAAC9R;EAAO,CAAC,GAAG3C,GAAG,CAACyC,IAAI;EAEhC,IAAG,CAACgS,KAAK,IAAI,CAAC9R,OAAO,EAAC;IACnB,OAAO1C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,yBAAyB;MAClCV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI;IACD,MAAM1C,UAAU,CAACwC,OAAO,CAAC,oDAAoD,EAAC,CAAC0S,KAAK,EAAC9R,OAAO,CAAC,CAAC;IAC9F,OAAO1C,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,SAAS;MAClBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL,CAAC,CAAC,OAAOK,KAAK,EAAE;IACb,OAAOrC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;AACH,CAAC;AAED,MAAMyS,OAAO,GAAG,MAAAA,CAAO1U,GAAG,EAACC,GAAG,KAAG;EAC9B,MAAM,CAAC0U,IAAI,CAAC,GAAG,MAAMpV,UAAU,CAACwC,OAAO,CAAC,8BAA8B,CAAC;EACvE,OAAO9B,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;IACzBC,OAAO,EAAE,SAAS;IAClBV,MAAM,EAAE,IAAI;IACZ2B,IAAI,EAAC+Q,IAAI,CAAC,CAAC,CAAC,CAACC;EAChB,CAAC,CAAC;AAEL,CAAC;AAED,MAAMC,UAAU,GAAG,MAAAA,CAAO7U,GAAG,EAACC,GAAG,KAAG;EACjC,MAAM;IAAC4R;EAAM,CAAC,GAAG7R,GAAG,CAACyC,IAAI;EACzB,IAAG,CAACoP,MAAM,EAAC;IACR,OAAO5R,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,IAAI;IACD,MAAM1C,UAAU,CAACwC,OAAO,CAAC,iCAAiC,EAAC,CAAC+S,UAAU,CAACjD,MAAM,CAAC,CAAC,CAAC;IAChF,MAAM,CAAC8C,IAAI,CAAC,GAAG,MAAMpV,UAAU,CAACwC,OAAO,CAAC,8BAA8B,CAAC;IACvE,OAAO9B,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,SAAS;MAClBV,MAAM,EAAE,IAAI;MACZ2B,IAAI,EAAC+Q,IAAI,CAAC,CAAC,CAAC,CAACC;IAChB,CAAC,CAAC;EAEL,CAAC,CAAC,OAAOtS,KAAK,EAAE;IACb,OAAOrC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,QAAQ;MACjBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;AAEH,CAAC;AAED,MAAM8S,cAAc,GAAG,MAAAA,CAAO/U,GAAG,EAACC,GAAG,KAAG;EACrC,MAAM;IAAC4R,MAAM;IAACpR;EAAK,CAAC,GAAGT,GAAG,CAACyC,IAAI;EAE/B,IAAG,CAACoP,MAAM,IAAI,CAACpR,KAAK,EAAC;IAClB,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,uBAAuB;MAChCV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EAEA,MAAM,CAAC+E,IAAI,CAAC,GAAG,MAAMzH,UAAU,CAACwC,OAAO,CAAC,qCAAqC,EAAC,CAACtB,KAAK,CAAC,CAAC;EAEtF,IAAG,CAACuG,IAAI,CAAC,CAAC,CAAC,IAAI,CAACA,IAAI,EAAC;IAClB,OAAO/G,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,wBAAwB;MACjCV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;EACH,IAAI;IACD,MAAM1C,UAAU,CAACwC,OAAO,CAAC,oDAAoD,EAAC,CAAC8P,MAAM,EAACpR,KAAK,CAAC,CAAC;IAC7F,OAAOR,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,SAAS;MAClBV,MAAM,EAAE;IACX,CAAC,CAAC;EACL,CAAC,CAAC,OAAOK,KAAK,EAAE;IACb,OAAOrC,GAAG,CAACgC,MAAM,CAAC,GAAG,CAAC,CAACS,IAAI,CAAC;MACzBC,OAAO,EAAE,wBAAwB;MACjCV,MAAM,EAAE;IACX,CAAC,CAAC;EACL;AACA,CAAC;AAED,MAAM+S,gBAAgB,GAAG,MAAAA,CAAOhV,GAAG,EAACC,GAAG,KAAG;EACvC,OAAOA,GAAG,CAACC,MAAM,CAAC,oBAAoB,CAAC;AAC1C,CAAC;AAED,MAAM+U,aAAa,GAAI,MAAAA,CAAOjV,GAAG,EAACC,GAAG,KAAG;EACrC,MAAM;IAAC0G;EAAK,CAAC,GAAG3G,GAAG,CAACyC,IAAI;EACxB,MAAMyS,UAAU,GAAGJ,UAAU,CAACnO,KAAK,CAAC;EAEpC,IAAIwO,KAAK,CAACD,UAAU,CAAC,IAAI,CAACE,QAAQ,CAACF,UAAU,CAAC,EAAE;IAC7C,OAAOjV,GAAG,CAACyC,IAAI,CAAC;MAAEJ,KAAK,EAAE,sBAAsB;MAACL,MAAM,EAAC;IAAK,CAAC,CAAC;EAClE;EAEA,MAAM1C,UAAU,CAACwC,OAAO,CAAC,8BAA8B,EAAC,CAACmT,UAAU,CAAC,CAAC;EAErE,OAAOjV,GAAG,CAACyC,IAAI,CAAC;IAACT,MAAM,EAAC,IAAI;IAACU,OAAO,EAAC;EAAS,CAAC,CAAC;AAElD,CAAC;AAED,MAAM0S,WAAW,GAAG,MAAAA,CAAOrV,GAAG,EAACC,GAAG,KAAG;EAClC,OAAOA,GAAG,CAACC,MAAM,CAAC,oBAAoB,CAAC;AAC1C,CAAC;AAED,MAAMoV,YAAY,GAAG,MAAAA,CAAOtV,GAAG,EAACC,GAAG,KAAG;EACnC,IAAI;IAAC6F,QAAQ;IAACyP,KAAK;IAACC;EAAG,CAAC,GAAGxV,GAAG,CAACyC,IAAI;EACnCoI,OAAO,CAACC,GAAG,CAAChF,QAAQ,EAACyP,KAAK,EAACC,GAAG,EAAC,aAAa,CAAC;EAE7C,IAAG,CAACD,KAAK,EAAC;IACPA,KAAK,GAAG,IAAI;EACf,CAAC,MACG;IACJA,KAAK,GAAG,IAAI1V,IAAI,CAAC0V,KAAK,CAAC,CAAClI,OAAO,CAAC,CAAC;EACjC;EAEA,IAAG,CAACmI,GAAG,EAAC;IACLA,GAAG,GAAG,IAAI;EACb,CAAC,MACG;IACDA,GAAG,GAAG,IAAI3V,IAAI,CAAC2V,GAAG,CAAC,CAACnI,OAAO,CAAC,CAAC;EAChC;EAEAvH,QAAQ,GAAGA,QAAQ,IAAI,CAACqP,KAAK,CAACxQ,MAAM,CAACmB,QAAQ,CAAC,CAAC,GAAGnB,MAAM,CAACmB,QAAQ,CAAC,GAAG,IAAI;EAC5E+E,OAAO,CAACC,GAAG,CAAChF,QAAQ,EAACyP,KAAK,EAACC,GAAG,EAAC,MAAM,CAAC;;EAEtC;EACA,IAAI1S,KAAK,GAAI,+BAA8B;EAC3C,IAAI2S,WAAW,GAAG,EAAE;;EAEpB;EACA,IAAI3P,QAAQ,KAAK,IAAI,EAAE;IACnBhD,KAAK,IAAK,uBAAsB;IAChC2S,WAAW,CAAC5F,IAAI,CAAC/J,QAAQ,CAAC;EAC9B;;EAEA;EACA,IAAIyP,KAAK,IAAIC,GAAG,EAAE;IACd1S,KAAK,IAAK,2BAA0B;IACpC2S,WAAW,CAAC5F,IAAI,CAAC0F,KAAK,EAAEC,GAAG,CAAC;EAChC,CAAC,MAAM,IAAID,KAAK,EAAE;IACdzS,KAAK,IAAK,gBAAe;IACzB2S,WAAW,CAAC5F,IAAI,CAAC0F,KAAK,CAAC;EAC3B,CAAC,MAAM,IAAIC,GAAG,EAAE;IACZ1S,KAAK,IAAK,gBAAe;IACzB2S,WAAW,CAAC5F,IAAI,CAAC2F,GAAG,CAAC;EACzB;EAEA3K,OAAO,CAACC,GAAG,CAAChI,KAAK,EAAC2S,WAAW,EAAC,OAAO,CAAC;EAEtC,IAAI;IACD,MAAM,CAAC3R,KAAK,CAAC,GAAG,MAAMvE,UAAU,CAACwC,OAAO,CAACe,KAAK,EAAC2S,WAAW,CAAC;IAC3D,OAAOxV,GAAG,CAACyC,IAAI,CAAC;MAACT,MAAM,EAAC,IAAI;MAAC2B,IAAI,EAACE;IAAK,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAOxB,KAAK,EAAE;IACbuI,OAAO,CAACvI,KAAK,CAACA,KAAK,CAAC;IACpB,OAAOrC,GAAG,CAACyC,IAAI,CAAC;MAACT,MAAM,EAAC,KAAK;MAACU,OAAO,EAAC;IAAc,CAAC,CAAC;EACzD;AAEA,CAAC;AAED+S,MAAM,CAACC,OAAO,GAAG;EACd5V,SAAS;EACTI,UAAU;EACVC,UAAU;EACVC,WAAW;EACXkC,SAAS;EACTd,yBAAyB;EACzBiF,WAAW;EACX9F,WAAW;EACX2C,UAAU;EACVzC,UAAU;EACViG,QAAQ;EACR/F,WAAW;EACX2E,YAAY;EACZ1E,YAAY;EACZ6E,QAAQ;EACRiF,aAAa;EACb7J,cAAc;EACdI,cAAc;EACdH,QAAQ;EACRC,YAAY;EACZuK,aAAa;EACbpK,QAAQ;EACRoQ,WAAW;EACX9F,WAAW;EACX7B,UAAU;EACVyC,WAAW;EACXmB,WAAW;EACXe,QAAQ;EACR9N,OAAO;EACPsD,OAAO;EACP6K,WAAW;EACXxO,cAAc;EACdyO,OAAO;EACPqB,QAAQ;EACR3P,QAAQ;EACRkM,WAAW;EACXa,eAAe;EACfd,MAAM;EACN4D,eAAe;EACfG,eAAe;EACfE,YAAY;EACZD,eAAe;EACfE,OAAO;EACPxQ,WAAW;EACX0Q,YAAY;EACZQ,cAAc;EACdC,UAAU;EACVlR,WAAW;EACXmL,WAAW;EACXrK,mBAAmB;EACnBuQ,aAAa;EACbgB,SAAS;EACTC,6BAA6B;EAC7BY,0BAA0B;EAC1BQ,0BAA0B;EAC1BO,eAAe;EACfE,OAAO;EACPG,UAAU;EACVE,cAAc;EACdhE,cAAc;EACdiE,gBAAgB;EAChBC,aAAa;EACbI,WAAW;EACXC,YAAY;EACZvG;AACH,CAAC","ignoreList":[]}},"mtime":1745726740421},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/dailyController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const connection = require(\"../config/connectDB\");\nconst jwt = require(\"jsonwebtoken\");\nconst md5 = require(\"md5\");\nrequire(\"dotenv\").config();\nlet timeNow = Date.now();\nconst dailyPage = async (req, res) => {\n  return res.render(\"daily/statistical.ejs\");\n};\nconst listMeber = async (req, res) => {\n  return res.render(\"daily/members.ejs\");\n};\nconst profileMember = async (req, res) => {\n  return res.render(\"daily/profileMember.ejs\");\n};\nconst settingPage = async (req, res) => {\n  return res.render(\"daily/settings.ejs\");\n};\nconst listRecharge = async (req, res) => {\n  return res.render(\"daily/listRecharge.ejs\");\n};\nconst listWithdraw = async (req, res) => {\n  return res.render(\"daily/listWithdraw.ejs\");\n};\nconst pageInfo = async (req, res) => {\n  let phone = req.params.phone;\n  return res.render(\"daily/profileMember.ejs\", {\n    phone\n  });\n};\nconst giftPage = async (req, res) => {\n  let auth = req.cookies.auth;\n  const [rows] = await connection.execute(\"SELECT `phone` FROM `users` WHERE `token` = ? AND veri = 1\", [auth]);\n  let money = 0;\n  let money2 = 0;\n  if (rows.length != 0) {\n    const [point_list] = await connection.execute(\"SELECT `money`, `money_us` FROM `point_list` WHERE `phone` = ?\", [rows[0].phone]);\n    money = point_list[0].money;\n    money2 = point_list[0].money_us;\n  }\n  return res.render(\"daily/giftPage.ejs\", {\n    money,\n    money2\n  });\n};\nconst support = async (req, res) => {\n  return res.render(\"daily/support.ejs\");\n};\nconst settings = async (req, res) => {\n  let auth = req.cookies.auth;\n  let type = req.body.type;\n  let value = req.body.value;\n  const [rows] = await connection.execute(\"SELECT `phone` FROM `users` WHERE `token` = ? AND veri = 1\", [auth]);\n  if (rows.length == 0) {\n    return res.status(200).json({\n      message: \"Error\",\n      status: false\n    });\n  }\n  if (!type) {\n    const [point_list] = await connection.execute(\"SELECT `telegram` FROM `point_list` WHERE phone = ?\", [rows[0].phone]);\n    const [settings] = await connection.execute(\"SELECT `telegram` FROM `admin`\");\n    let telegram = settings[0].telegram;\n    let telegram2 = point_list[0].telegram;\n    return res.status(200).json({\n      message: \"Get success\",\n      status: true,\n      telegram: telegram,\n      telegram2: telegram2\n    });\n  } else {\n    await connection.execute(\"UPDATE `point_list` SET telegram = ? WHERE phone = ?\", [value, rows[0].phone]);\n    return res.status(200).json({\n      message: \"Successfully edited\",\n      status: true\n    });\n  }\n};\n\n// xÃ¡c nháº­n admin\nconst middlewareDailyController = async (req, res, next) => {\n  // xÃ¡c nháº­n token\n  const auth = req.cookies.auth;\n  if (!auth) {\n    return res.redirect(\"/login\");\n  }\n  const [rows] = await connection.execute(\"SELECT `token`,`level`, `status` FROM `users` WHERE `token` = ? AND veri = 1\", [auth]);\n  if (!rows) {\n    return res.redirect(\"/login\");\n  }\n  try {\n    if (auth == rows[0].token && rows[0].status == 1) {\n      if (rows[0].level == 2) {\n        next();\n      } else {\n        return res.redirect(\"/home\");\n      }\n    } else {\n      return res.redirect(\"/login\");\n    }\n  } catch (error) {\n    return res.redirect(\"/login\");\n  }\n};\nconst statistical = async (req, res) => {\n  const auth = req.cookies.auth;\n  const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  let userInfo = user[0];\n  // cáº¥p dÆ°á»i trá»±c tiáº¿p all\n  const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code]);\n\n  // cáº¥p dÆ°á»i trá»±c tiáº¿p hÃ´m nay\n  let f1_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_time = f1s[i].time; // MÃ£ giá»i thiá»u f1\n    let check = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check) {\n      f1_today += 1;\n    }\n  }\n\n  // táº¥t cáº£ cáº¥p dÆ°á»i hÃ´m nay\n  let f_all_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const f1_time = f1s[i].time; // time f1\n    let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check_f1) f_all_today += 1;\n    // tá»ng f1 má»i Äc hÃ´m nay\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code; // MÃ£ giá»i thiá»u f2\n      const f2_time = f2s[i].time; // time f2\n      let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n      if (check_f2) f_all_today += 1;\n      // tá»ng f2 má»i Äc hÃ´m nay\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code; // MÃ£ giá»i thiá»u f3\n        const f3_time = f3s[i].time; // time f3\n        let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n        if (check_f3) f_all_today += 1;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code]);\n        // tá»ng f3 má»i Äc hÃ´m nay\n        for (let i = 0; i < f4s.length; i++) {\n          const f4_code = f4s[i].code; // MÃ£ giá»i thiá»u f4\n          const f4_time = f4s[i].time; // time f4\n          let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n          if (check_f4) f_all_today += 1;\n          // tá»ng f3 má»i Äc hÃ´m nay\n        }\n      }\n    }\n  }\n\n  // Tá»ng sá» f2\n  let f2 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    f2 += f2s.length;\n  }\n\n  // Tá»ng sá» f3\n  let f3 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      if (f3s.length > 0) f3 += f3s.length;\n    }\n  }\n\n  // Tá»ng sá» f4\n  let f4 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code]);\n        if (f4s.length > 0) f4 += f4s.length;\n      }\n    }\n  }\n\n  // const [recharge] = await connection.query('SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\n  // const [withdraw] = await connection.query('SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\n  // const [bank_user] = await connection.query('SELECT * FROM user_bank WHERE phone = ? ', [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: user,\n    f1: f1s.length,\n    f2: f2,\n    f3: f3,\n    f4: f4\n  });\n};\nfunction formateT(params) {\n  let result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin(params = \"\", addHours = 0) {\n  let date = \"\";\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  date.setHours(date.getHours() + addHours);\n  let years = formateT(date.getFullYear());\n  let months = formateT(date.getMonth() + 1);\n  let days = formateT(date.getDate());\n  let hours = date.getHours() % 12;\n  hours = hours === 0 ? 12 : hours;\n  let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n  let minutes = formateT(date.getMinutes());\n  let seconds = formateT(date.getSeconds());\n  return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n}\nconst userInfo = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.params.phone;\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0 || auths.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let {\n    token,\n    password,\n    otp,\n    level,\n    ...userInfo\n  } = user[0];\n  if (auths[0].phone != userInfo.ctv) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  // cáº¥p dÆ°á»i trá»±c tiáº¿p all\n  const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code]);\n\n  // cáº¥p dÆ°á»i trá»±c tiáº¿p hÃ´m nay\n  let f1_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_time = f1s[i].time; // MÃ£ giá»i thiá»u f1\n    let check = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check) {\n      f1_today += 1;\n    }\n  }\n\n  // táº¥t cáº£ cáº¥p dÆ°á»i hÃ´m nay\n  let f_all_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const f1_time = f1s[i].time; // time f1\n    let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check_f1) f_all_today += 1;\n    // tá»ng f1 má»i Äc hÃ´m nay\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code; // MÃ£ giá»i thiá»u f2\n      const f2_time = f2s[i].time; // time f2\n      let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n      if (check_f2) f_all_today += 1;\n      // tá»ng f2 má»i Äc hÃ´m nay\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code; // MÃ£ giá»i thiá»u f3\n        const f3_time = f3s[i].time; // time f3\n        let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n        if (check_f3) f_all_today += 1;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code]);\n        // tá»ng f3 má»i Äc hÃ´m nay\n        for (let i = 0; i < f4s.length; i++) {\n          const f4_code = f4s[i].code; // MÃ£ giá»i thiá»u f4\n          const f4_time = f4s[i].time; // time f4\n          let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n          if (check_f4) f_all_today += 1;\n          // tá»ng f3 má»i Äc hÃ´m nay\n        }\n      }\n    }\n  }\n\n  // Tá»ng sá» f2\n  let f2 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    f2 += f2s.length;\n  }\n\n  // Tá»ng sá» f3\n  let f3 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      if (f3s.length > 0) f3 += f3s.length;\n    }\n  }\n\n  // Tá»ng sá» f4\n  let f4 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code]);\n        if (f4s.length > 0) f4 += f4s.length;\n      }\n    }\n  }\n  const [recharge] = await connection.query(\"SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 \", [phone]);\n  const [withdraw] = await connection.query(\"SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 \", [phone]);\n  const [bank_user] = await connection.query(\"SELECT * FROM user_bank WHERE phone = ? \", [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: userInfo,\n    total_r: recharge,\n    total_w: withdraw,\n    f1: f1s.length,\n    f2: f2,\n    f3: f3,\n    f4: f4,\n    bank_user: bank_user\n  });\n};\nconst infoCtv = async (req, res) => {\n  const auth = req.cookies.auth;\n  const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Phone Error\",\n      status: false\n    });\n  }\n  let userInfo = user[0];\n  let phone = userInfo.phone;\n  // cáº¥p dÆ°á»i trá»±c tiáº¿p all\n  const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code]);\n\n  // cáº¥p dÆ°á»i trá»±c tiáº¿p hÃ´m nay\n  let f1_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_time = f1s[i].time; // MÃ£ giá»i thiá»u f1\n    let check = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check) {\n      f1_today += 1;\n    }\n  }\n\n  // táº¥t cáº£ cáº¥p dÆ°á»i hÃ´m nay\n  let f_all_today = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const f1_time = f1s[i].time; // time f1\n    let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false;\n    if (check_f1) f_all_today += 1;\n    // tá»ng f1 má»i Äc hÃ´m nay\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code; // MÃ£ giá»i thiá»u f2\n      const f2_time = f2s[i].time; // time f2\n      let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false;\n      if (check_f2) f_all_today += 1;\n      // tá»ng f2 má»i Äc hÃ´m nay\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code; // MÃ£ giá»i thiá»u f3\n        const f3_time = f3s[i].time; // time f3\n        let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false;\n        if (check_f3) f_all_today += 1;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code]);\n        // tá»ng f3 má»i Äc hÃ´m nay\n        for (let i = 0; i < f4s.length; i++) {\n          const f4_code = f4s[i].code; // MÃ£ giá»i thiá»u f4\n          const f4_time = f4s[i].time; // time f4\n          let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false;\n          if (check_f4) f_all_today += 1;\n          // tá»ng f3 má»i Äc hÃ´m nay\n        }\n      }\n    }\n  }\n\n  // Tá»ng sá» f2\n  let f2 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    f2 += f2s.length;\n  }\n\n  // Tá»ng sá» f3\n  let f3 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      if (f3s.length > 0) f3 += f3s.length;\n    }\n  }\n\n  // Tá»ng sá» f4\n  let f4 = 0;\n  for (let i = 0; i < f1s.length; i++) {\n    const f1_code = f1s[i].code; // MÃ£ giá»i thiá»u f1\n    const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code]);\n    for (let i = 0; i < f2s.length; i++) {\n      const f2_code = f2s[i].code;\n      const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code]);\n      for (let i = 0; i < f3s.length; i++) {\n        const f3_code = f3s[i].code;\n        const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code]);\n        if (f4s.length > 0) f4 += f4s.length;\n      }\n    }\n  }\n  const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone]);\n  const [list_mem_baned] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 2 AND veri = 1 \", [phone]);\n  let total_recharge = 0;\n  let total_withdraw = 0;\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [recharge] = await connection.query(\"SELECT SUM(money) as money FROM recharge WHERE phone = ? AND status = 1 \", [phone]);\n    const [withdraw] = await connection.query(\"SELECT SUM(money) as money FROM withdraw WHERE phone = ? AND status = 1 \", [phone]);\n    if (recharge[0].money) {\n      total_recharge += Number(recharge[0].money);\n    }\n    if (withdraw[0].money) {\n      total_withdraw += Number(withdraw[0].money);\n    }\n  }\n  let total_recharge_today = 0;\n  let total_withdraw_today = 0;\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [recharge_today] = await connection.query(\"SELECT `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone]);\n    const [withdraw_today] = await connection.query(\"SELECT `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone]);\n    for (let i = 0; i < recharge_today.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(recharge_today[i].time);\n      if (time == today) {\n        total_recharge_today += recharge_today[i].money;\n      }\n    }\n    for (let i = 0; i < withdraw_today.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(withdraw_today[i].time);\n      if (time == today) {\n        total_withdraw_today += withdraw_today[i].money;\n      }\n    }\n  }\n  let win = 0;\n  let loss = 0;\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [wins] = await connection.query(\"SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 1 \", [phone]);\n    const [losses] = await connection.query(\"SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 2 \", [phone]);\n    for (let i = 0; i < wins.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(wins[i].time);\n      if (time == today) {\n        win += wins[i].money;\n      }\n    }\n    for (let i = 0; i < losses.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(losses[i].time);\n      if (time == today) {\n        loss += losses[i].money;\n      }\n    }\n  }\n  let list_mems = [];\n  const [list_mem_today] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone]);\n  for (let i = 0; i < list_mem_today.length; i++) {\n    let today = timerJoin();\n    let time = timerJoin(list_mem_today[i].time);\n    if (time == today) {\n      const [phone_invites] = await connection.query(\"SELECT `phone` FROM users WHERE code = ? \", [list_mem_today[i].invite]);\n      let phone_invite = phone_invites[0].phone;\n      let data = {\n        ...list_mem_today[i],\n        phone_invite: phone_invite\n      };\n      list_mems.push(data);\n    }\n  }\n  const [point_list] = await connection.query(\"SELECT * FROM point_list WHERE phone = ? \", [phone]);\n  let moneyCTV = point_list[0].money;\n  let list_recharge_news = [];\n  let list_withdraw_news = [];\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [recharge_today] = await connection.query(\"SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone]);\n    const [withdraw_today] = await connection.query(\"SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone]);\n    for (let i = 0; i < recharge_today.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(recharge_today[i].time);\n      if (time == today) {\n        list_recharge_news.push(recharge_today[i]);\n      }\n    }\n    for (let i = 0; i < withdraw_today.length; i++) {\n      let today = timerJoin();\n      let time = timerJoin(withdraw_today[i].time);\n      if (time == today) {\n        list_withdraw_news.push(withdraw_today[i]);\n      }\n    }\n  }\n  const [redenvelopes_used] = await connection.query(\"SELECT * FROM redenvelopes_used WHERE phone = ? \", [phone]);\n  let redenvelopes_used_today = [];\n  for (let i = 0; i < redenvelopes_used.length; i++) {\n    let today = timerJoin();\n    let time = timerJoin(redenvelopes_used[i].time);\n    if (time == today) {\n      redenvelopes_used_today.push(redenvelopes_used[i]);\n    }\n  }\n  const [financial_details] = await connection.query(\"SELECT * FROM financial_details WHERE phone = ? \", [phone]);\n  let financial_details_today = [];\n  for (let i = 0; i < financial_details.length; i++) {\n    let today = timerJoin();\n    let time = timerJoin(financial_details[i].time);\n    if (time == today) {\n      financial_details_today.push(financial_details[i]);\n    }\n  }\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: user,\n    f1: f1s.length,\n    f2: f2,\n    f3: f3,\n    f4: f4,\n    list_mems: list_mems,\n    total_recharge: total_recharge,\n    total_withdraw: total_withdraw,\n    total_recharge_today: total_recharge_today,\n    total_withdraw_today: total_withdraw_today,\n    list_mem_baned: list_mem_baned.length,\n    win: win,\n    loss: loss,\n    list_recharge_news: list_recharge_news,\n    list_withdraw_news: list_withdraw_news,\n    moneyCTV: moneyCTV,\n    redenvelopes_used: redenvelopes_used_today,\n    financial_details_today: financial_details_today\n  });\n};\nconst infoCtv2 = async (req, res) => {\n  const auth = req.cookies.auth;\n  const timeDate = req.body.timeDate;\n  function formateT(params) {\n    let result = params < 10 ? \"0\" + params : params;\n    return result;\n  }\n  function timerJoin(params = \"\", addHours = 0) {\n    let date = \"\";\n    if (params) {\n      date = new Date(Number(params));\n    } else {\n      date = new Date();\n    }\n    date.setHours(date.getHours() + addHours);\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n    return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Phone Error\",\n      status: false\n    });\n  }\n  let userInfo = user[0];\n  let phone = userInfo.phone;\n  const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone]);\n  let list_mems = [];\n  const [list_mem_today] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone]);\n  for (let i = 0; i < list_mem_today.length; i++) {\n    let today = timeDate;\n    let time = timerJoin(list_mem_today[i].time);\n    if (time == today) {\n      const [phone_invites] = await connection.query(\"SELECT `phone` FROM users WHERE code = ? \", [list_mem_today[i].invite]);\n      let phone_invite = phone_invites[0].phone;\n      let data = {\n        ...list_mem_today[i],\n        phone_invite: phone_invite\n      };\n      list_mems.push(data);\n    }\n  }\n  let list_recharge_news = [];\n  let list_withdraw_news = [];\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [recharge_today] = await connection.query(\"SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone]);\n    const [withdraw_today] = await connection.query(\"SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone]);\n    for (let i = 0; i < recharge_today.length; i++) {\n      let today = timeDate;\n      let time = timerJoin(recharge_today[i].time);\n      if (time == today) {\n        list_recharge_news.push(recharge_today[i]);\n      }\n    }\n    for (let i = 0; i < withdraw_today.length; i++) {\n      let today = timeDate;\n      let time = timerJoin(withdraw_today[i].time);\n      if (time == today) {\n        list_withdraw_news.push(withdraw_today[i]);\n      }\n    }\n  }\n  const [redenvelopes_used] = await connection.query(\"SELECT * FROM redenvelopes_used WHERE phone = ? \", [phone]);\n  let redenvelopes_used_today = [];\n  for (let i = 0; i < redenvelopes_used.length; i++) {\n    let today = timeDate;\n    let time = timerJoin(redenvelopes_used[i].time);\n    if (time == today) {\n      redenvelopes_used_today.push(redenvelopes_used[i]);\n    }\n  }\n  const [financial_details] = await connection.query(\"SELECT * FROM financial_details WHERE phone = ? \", [phone]);\n  let financial_details_today = [];\n  for (let i = 0; i < financial_details.length; i++) {\n    let today = timeDate;\n    let time = timerJoin(financial_details[i].time);\n    if (time == today) {\n      financial_details_today.push(financial_details[i]);\n    }\n  }\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: user,\n    list_mems: list_mems,\n    list_recharge_news: list_recharge_news,\n    list_withdraw_news: list_withdraw_news,\n    redenvelopes_used: redenvelopes_used_today,\n    financial_details_today: financial_details_today\n  });\n};\nconst createBonus = async (req, res) => {\n  const randomString = length => {\n    var result = \"\";\n    var characters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n  function formateT(params) {\n    let result = params < 10 ? \"0\" + params : params;\n    return result;\n  }\n  function timerJoin(params = \"\", addHours = 0) {\n    let date = \"\";\n    if (params) {\n      date = new Date(Number(params));\n    } else {\n      date = new Date();\n    }\n    date.setHours(date.getHours() + addHours);\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    let hours = date.getHours() % 12;\n    hours = hours === 0 ? 12 : hours;\n    let ampm = date.getHours() < 12 ? \"AM\" : \"PM\";\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n    return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm;\n  }\n  const d = new Date();\n  const time = d.getTime();\n  let auth = req.cookies.auth;\n  let money = req.body.money;\n  if (!money || !auth) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let userInfo = user[0];\n  const [point_list] = await connection.query(\"SELECT * FROM point_list WHERE phone = ? \", [userInfo.phone]);\n  if (point_list.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let ctv = point_list[0];\n  if (ctv.money - money >= 0) {\n    let id_redenvelops = randomString(16);\n    await connection.execute(\"UPDATE `point_list` SET money = money - ? WHERE phone = ?\", [money, ctv.phone]);\n    let sql = `INSERT INTO redenvelopes SET id_redenvelope = ?, phone = ?, money = ?, used = ?, amount = ?, status = ?, time = ?`;\n    await connection.query(sql, [id_redenvelops, userInfo.phone, money, 1, 1, 0, time]);\n    const [point_list] = await connection.query(\"SELECT `money` FROM point_list WHERE phone = ? \", [userInfo.phone]);\n    return res.status(200).json({\n      message: \"Successful gift creation\",\n      status: true,\n      id: id_redenvelops,\n      money: point_list[0].money\n    });\n  } else {\n    return res.status(200).json({\n      message: \"The balance is not enough to create gifts\",\n      status: false\n    });\n  }\n};\nconst listRedenvelops = async (req, res) => {\n  let auth = req.cookies.auth;\n  const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let userInfo = user[0];\n  let [redenvelopes] = await connection.query(\"SELECT * FROM redenvelopes WHERE phone = ? ORDER BY id DESC\", [userInfo.phone]);\n  return res.status(200).json({\n    message: \"Successful change\",\n    status: true,\n    redenvelopes: redenvelopes\n  });\n};\nconst listMember = async (req, res) => {\n  let auth = req.cookies.auth;\n  let {\n    pageno,\n    limit\n  } = req.body;\n  let [checkInfo] = await connection.execute(\"SELECT * FROM users WHERE token = ?\", [auth]);\n  if (checkInfo.length == 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  let userInfo = checkInfo[0];\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  const [users] = await connection.query(`SELECT id_user, phone, money, total_money, status, time FROM users WHERE veri = 1 AND level = 0 AND ctv = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [userInfo.phone]);\n  const [total_users] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level = 0 AND ctv = ? `, [userInfo.phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: users,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\nconst listRechargeP = async (req, res) => {\n  let auth = req.cookies.auth;\n  const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let userInfo = user[0];\n  const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [userInfo.phone]);\n  let list_recharge_news = [];\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [recharge_today] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT 100\", [phone]);\n    for (let i = 0; i < recharge_today.length; i++) {\n      list_recharge_news.push(recharge_today[i]);\n    }\n  }\n  return res.status(200).json({\n    message: \"Failed\",\n    status: true,\n    list_recharge_news: list_recharge_news,\n    timeStamp: timeNow\n  });\n};\nconst listWithdrawP = async (req, res) => {\n  let auth = req.cookies.auth;\n  const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let userInfo = user[0];\n  const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [userInfo.phone]);\n  let list_withdraw_news = [];\n  for (let i = 0; i < list_mem.length; i++) {\n    let phone = list_mem[i].phone;\n    const [withdraw_today] = await connection.query(\"SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT 100\", [phone]);\n    for (let i = 0; i < withdraw_today.length; i++) {\n      list_withdraw_news.push(withdraw_today[i]);\n    }\n  }\n  return res.status(200).json({\n    message: \"Failed\",\n    status: true,\n    list_withdraw_news: list_withdraw_news,\n    timeStamp: timeNow\n  });\n};\nconst listRechargeMem = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.params.phone;\n  let {\n    pageno,\n    limit\n  } = req.body;\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0 || auths.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let {\n    token,\n    password,\n    otp,\n    level,\n    ...userInfo\n  } = user[0];\n  if (auths[0].phone != userInfo.ctv) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [recharge] = await connection.query(`SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n  const [total_users] = await connection.query(`SELECT * FROM recharge WHERE phone = ?`, [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: recharge,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\nconst listWithdrawMem = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.params.phone;\n  let {\n    pageno,\n    limit\n  } = req.body;\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0 || auths.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let {\n    token,\n    password,\n    otp,\n    level,\n    ...userInfo\n  } = user[0];\n  if (auths[0].phone != userInfo.ctv) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [withdraw] = await connection.query(`SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n  const [total_users] = await connection.query(`SELECT * FROM withdraw WHERE phone = ?`, [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: withdraw,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\nconst listRedenvelope = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.params.phone;\n  let {\n    pageno,\n    limit\n  } = req.body;\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0 || auths.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let {\n    token,\n    password,\n    otp,\n    level,\n    ...userInfo\n  } = user[0];\n  if (auths[0].phone != userInfo.ctv) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [redenvelopes_used] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n  const [total_users] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ?`, [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: redenvelopes_used,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\nconst listBet = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.params.phone;\n  let {\n    pageno,\n    limit\n  } = req.body;\n  if (!pageno || !limit) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (pageno < 0 || limit < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  if (!phone) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (user.length == 0 || auths.length == 0) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  let {\n    token,\n    password,\n    otp,\n    level,\n    ...userInfo\n  } = user[0];\n  if (auths[0].phone != userInfo.ctv) {\n    return res.status(200).json({\n      message: \"Failed\",\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  const [listBet] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0 ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone]);\n  const [total_users] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0`, [phone]);\n  return res.status(200).json({\n    message: \"Success\",\n    status: true,\n    datas: listBet,\n    page_total: Math.ceil(total_users.length / limit)\n  });\n};\nconst buffMoney = async (req, res) => {\n  let auth = req.cookies.auth;\n  let phone = req.body.username;\n  let select = req.body.select;\n  let money = req.body.money;\n  if (!phone || !select || !money) {\n    return res.status(200).json({\n      message: \"Fail\",\n      status: false\n    });\n  }\n  const [users] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone]);\n  const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth]);\n  if (users.length == 0) {\n    return res.status(200).json({\n      message: \"Account does not exist\",\n      status: false\n    });\n  }\n  let userInfo = users[0];\n  let authInfo = auths[0];\n  const [point_list] = await connection.query(\"SELECT `money_us` FROM point_list WHERE phone = ? \", [authInfo.phone]);\n  let check = point_list[0].money_us;\n  if (select == \"1\") {\n    if (check - money >= 0) {\n      const d = new Date();\n      const time = d.getTime();\n      await connection.query(\"UPDATE users SET money = money + ? WHERE phone = ? \", [money, userInfo.phone]);\n      await connection.query(\"UPDATE point_list SET money_us = money_us - ? WHERE phone = ? \", [money, authInfo.phone]);\n      let sql = \"INSERT INTO financial_details SET phone = ?, phone_used = ?, money = ?, type = ?, time = ?\";\n      await connection.query(sql, [authInfo.phone, userInfo.phone, money, \"1\", time]);\n      const [moneyN] = await connection.query(\"SELECT `money_us` FROM point_list WHERE phone = ? \", [authInfo.phone]);\n      return res.status(200).json({\n        message: \"Success\",\n        status: true,\n        money: moneyN[0].money_us\n      });\n    } else {\n      return res.status(200).json({\n        message: \"Insufficient balance\",\n        status: false\n      });\n    }\n  } else {\n    const d = new Date();\n    const time = d.getTime();\n    await connection.query(\"UPDATE users SET money = money - ? WHERE phone = ? \", [money, userInfo.phone]);\n    await connection.query(\"UPDATE point_list SET money = money + ? WHERE phone = ? \", [money, authInfo.phone]);\n    let sql = \"INSERT INTO financial_details SET phone = ?, phone_used = ?, money = ?, type = ?, time = ?\";\n    await connection.query(sql, [authInfo.phone, userInfo.phone, money, \"2\", time]);\n    return res.status(200).json({\n      message: \"Success\",\n      status: true\n    });\n  }\n};\nmodule.exports = {\n  buffMoney,\n  dailyPage,\n  middlewareDailyController,\n  userInfo,\n  statistical,\n  listMeber,\n  profileMember,\n  infoCtv,\n  infoCtv2,\n  settingPage,\n  giftPage,\n  support,\n  settings,\n  createBonus,\n  listRedenvelops,\n  listMember,\n  listRecharge,\n  listWithdraw,\n  listRechargeP,\n  listWithdrawP,\n  pageInfo,\n  listRechargeMem,\n  listWithdrawMem,\n  listRedenvelope,\n  listBet\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["connection","require","jwt","md5","config","timeNow","Date","now","dailyPage","req","res","render","listMeber","profileMember","settingPage","listRecharge","listWithdraw","pageInfo","phone","params","giftPage","auth","cookies","rows","execute","money","money2","length","point_list","money_us","support","settings","type","body","value","status","json","message","telegram","telegram2","middlewareDailyController","next","redirect","token","level","error","statistical","user","query","userInfo","f1s","code","f1_today","i","f1_time","time","check","timerJoin","f_all_today","f1_code","check_f1","f2s","f2_code","f2_time","check_f2","f3s","f3_code","f3_time","check_f3","f4s","f4_code","f4_time","check_f4","f2","f3","f4","datas","f1","formateT","result","addHours","date","Number","setHours","getHours","years","getFullYear","months","getMonth","days","getDate","hours","ampm","minutes","getMinutes","seconds","getSeconds","timeStamp","auths","password","otp","ctv","recharge","withdraw","bank_user","total_r","total_w","infoCtv","list_mem","list_mem_baned","total_recharge","total_withdraw","total_recharge_today","total_withdraw_today","recharge_today","withdraw_today","today","win","loss","wins","losses","list_mems","list_mem_today","phone_invites","invite","phone_invite","data","push","moneyCTV","list_recharge_news","list_withdraw_news","redenvelopes_used","redenvelopes_used_today","financial_details","financial_details_today","infoCtv2","timeDate","createBonus","randomString","characters","charactersLength","charAt","Math","floor","random","d","getTime","id_redenvelops","sql","id","listRedenvelops","redenvelopes","listMember","pageno","limit","checkInfo","msg","gameslist","users","total_users","page_total","ceil","listRechargeP","listWithdrawP","listRechargeMem","listWithdrawMem","listRedenvelope","listBet","buffMoney","username","select","authInfo","moneyN","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["dailyController.js"],"sourcesContent":["const connection= require(\"../config/connectDB\")\r\nconst jwt= require(\"jsonwebtoken\")\r\nconst md5 = require(\"md5\")\r\nrequire(\"dotenv\").config()\r\n\r\nlet timeNow = Date.now()\r\n\r\nconst dailyPage = async (req, res) => {\r\n   return res.render(\"daily/statistical.ejs\")\r\n}\r\n\r\nconst listMeber = async (req, res) => {\r\n   return res.render(\"daily/members.ejs\")\r\n}\r\n\r\nconst profileMember = async (req, res) => {\r\n   return res.render(\"daily/profileMember.ejs\")\r\n}\r\n\r\nconst settingPage = async (req, res) => {\r\n   return res.render(\"daily/settings.ejs\")\r\n}\r\n\r\nconst listRecharge = async (req, res) => {\r\n   return res.render(\"daily/listRecharge.ejs\")\r\n}\r\n\r\nconst listWithdraw = async (req, res) => {\r\n   return res.render(\"daily/listWithdraw.ejs\")\r\n}\r\n\r\nconst pageInfo = async (req, res) => {\r\n   let phone = req.params.phone\r\n   return res.render(\"daily/profileMember.ejs\", { phone })\r\n}\r\n\r\nconst giftPage = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   const [rows] = await connection.execute(\"SELECT `phone` FROM `users` WHERE `token` = ? AND veri = 1\", [auth])\r\n   let money = 0\r\n   let money2 = 0\r\n   if (rows.length != 0) {\r\n      const [point_list] = await connection.execute(\"SELECT `money`, `money_us` FROM `point_list` WHERE `phone` = ?\", [rows[0].phone])\r\n      money = point_list[0].money\r\n      money2 = point_list[0].money_us\r\n   }\r\n   return res.render(\"daily/giftPage.ejs\", { money, money2 })\r\n}\r\n\r\nconst support = async (req, res) => {\r\n   return res.render(\"daily/support.ejs\")\r\n}\r\n\r\nconst settings = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let type = req.body.type\r\n   let value = req.body.value\r\n\r\n   const [rows] = await connection.execute(\"SELECT `phone` FROM `users` WHERE `token` = ? AND veri = 1\", [auth])\r\n   if (rows.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Error\",\r\n         status: false,\r\n      })\r\n   }\r\n   if (!type) {\r\n      const [point_list] = await connection.execute(\"SELECT `telegram` FROM `point_list` WHERE phone = ?\", [rows[0].phone])\r\n      const [settings] = await connection.execute(\"SELECT `telegram` FROM `admin`\")\r\n      let telegram = settings[0].telegram\r\n      let telegram2 = point_list[0].telegram\r\n      return res.status(200).json({\r\n         message: \"Get success\",\r\n         status: true,\r\n         telegram: telegram,\r\n         telegram2: telegram2,\r\n      })\r\n   } else {\r\n      await connection.execute(\"UPDATE `point_list` SET telegram = ? WHERE phone = ?\", [value, rows[0].phone])\r\n      return res.status(200).json({\r\n         message: \"Successfully edited\",\r\n         status: true,\r\n      })\r\n   }\r\n}\r\n\r\n// xÃ¡c nháº­n admin\r\nconst middlewareDailyController = async (req, res, next) => {\r\n   // xÃ¡c nháº­n token\r\n   const auth = req.cookies.auth\r\n   if (!auth) {\r\n      return res.redirect(\"/login\")\r\n   }\r\n   const [rows] = await connection.execute(\"SELECT `token`,`level`, `status` FROM `users` WHERE `token` = ? AND veri = 1\", [auth])\r\n   if (!rows) {\r\n      return res.redirect(\"/login\")\r\n   }\r\n   try {\r\n      if (auth == rows[0].token && rows[0].status == 1) {\r\n         if (rows[0].level == 2) {\r\n            next()\r\n         } else {\r\n            return res.redirect(\"/home\")\r\n         }\r\n      } else {\r\n         return res.redirect(\"/login\")\r\n      }\r\n   } catch (error) {\r\n      return res.redirect(\"/login\")\r\n   }\r\n}\r\n\r\nconst statistical = async (req, res) => {\r\n   const auth = req.cookies.auth\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   let userInfo = user[0]\r\n   // cáº¥p dÆ°á»i trá»±c tiáº¿p all\r\n   const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code])\r\n\r\n   // cáº¥p dÆ°á»i trá»±c tiáº¿p hÃ´m nay\r\n   let f1_today = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_time = f1s[i].time // MÃ£ giá»i thiá»u f1\r\n      let check = timerJoin(f1_time) == timerJoin() ? true : false\r\n      if (check) {\r\n         f1_today += 1\r\n      }\r\n   }\r\n\r\n   // táº¥t cáº£ cáº¥p dÆ°á»i hÃ´m nay\r\n   let f_all_today = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const f1_time = f1s[i].time // time f1\r\n      let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false\r\n      if (check_f1) f_all_today += 1\r\n      // tá»ng f1 má»i Äc hÃ´m nay\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code // MÃ£ giá»i thiá»u f2\r\n         const f2_time = f2s[i].time // time f2\r\n         let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false\r\n         if (check_f2) f_all_today += 1\r\n         // tá»ng f2 má»i Äc hÃ´m nay\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code])\r\n         for (let i = 0; i < f3s.length; i++) {\r\n            const f3_code = f3s[i].code // MÃ£ giá»i thiá»u f3\r\n            const f3_time = f3s[i].time // time f3\r\n            let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false\r\n            if (check_f3) f_all_today += 1\r\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code])\r\n            // tá»ng f3 má»i Äc hÃ´m nay\r\n            for (let i = 0; i < f4s.length; i++) {\r\n               const f4_code = f4s[i].code // MÃ£ giá»i thiá»u f4\r\n               const f4_time = f4s[i].time // time f4\r\n               let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false\r\n               if (check_f4) f_all_today += 1\r\n               // tá»ng f3 má»i Äc hÃ´m nay\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // Tá»ng sá» f2\r\n   let f2 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      f2 += f2s.length\r\n   }\r\n\r\n   // Tá»ng sá» f3\r\n   let f3 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\r\n         if (f3s.length > 0) f3 += f3s.length\r\n      }\r\n   }\r\n\r\n   // Tá»ng sá» f4\r\n   let f4 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\r\n         for (let i = 0; i < f3s.length; i++) {\r\n            const f3_code = f3s[i].code\r\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code])\r\n            if (f4s.length > 0) f4 += f4s.length\r\n         }\r\n      }\r\n   }\r\n\r\n   // const [recharge] = await connection.query('SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 ', [phone]);\r\n   // const [withdraw] = await connection.query('SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 ', [phone]);\r\n   // const [bank_user] = await connection.query('SELECT * FROM user_bank WHERE phone = ? ', [phone]);\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: user,\r\n      f1: f1s.length,\r\n      f2: f2,\r\n      f3: f3,\r\n      f4: f4,\r\n   })\r\n}\r\n\r\nfunction formateT(params) {\r\n   let result = params < 10 ? \"0\" + params : params\r\n   return result\r\n}\r\n\r\nfunction timerJoin(params = \"\", addHours = 0) {\r\n   let date = \"\"\r\n   if (params) {\r\n      date = new Date(Number(params))\r\n   } else {\r\n      date = new Date()\r\n   }\r\n\r\n   date.setHours(date.getHours() + addHours)\r\n\r\n   let years = formateT(date.getFullYear())\r\n   let months = formateT(date.getMonth() + 1)\r\n   let days = formateT(date.getDate())\r\n\r\n   let hours = date.getHours() % 12\r\n   hours = hours === 0 ? 12 : hours\r\n   let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\r\n\r\n   let minutes = formateT(date.getMinutes())\r\n   let seconds = formateT(date.getSeconds())\r\n\r\n   return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\r\n}\r\n\r\nconst userInfo = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.params.phone\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0 || auths.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let { token, password, otp, level, ...userInfo } = user[0]\r\n\r\n   if (auths[0].phone != userInfo.ctv) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   // cáº¥p dÆ°á»i trá»±c tiáº¿p all\r\n   const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code])\r\n\r\n   // cáº¥p dÆ°á»i trá»±c tiáº¿p hÃ´m nay\r\n   let f1_today = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_time = f1s[i].time // MÃ£ giá»i thiá»u f1\r\n      let check = timerJoin(f1_time) == timerJoin() ? true : false\r\n      if (check) {\r\n         f1_today += 1\r\n      }\r\n   }\r\n\r\n   // táº¥t cáº£ cáº¥p dÆ°á»i hÃ´m nay\r\n   let f_all_today = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const f1_time = f1s[i].time // time f1\r\n      let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false\r\n      if (check_f1) f_all_today += 1\r\n      // tá»ng f1 má»i Äc hÃ´m nay\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code // MÃ£ giá»i thiá»u f2\r\n         const f2_time = f2s[i].time // time f2\r\n         let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false\r\n         if (check_f2) f_all_today += 1\r\n         // tá»ng f2 má»i Äc hÃ´m nay\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code])\r\n         for (let i = 0; i < f3s.length; i++) {\r\n            const f3_code = f3s[i].code // MÃ£ giá»i thiá»u f3\r\n            const f3_time = f3s[i].time // time f3\r\n            let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false\r\n            if (check_f3) f_all_today += 1\r\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code])\r\n            // tá»ng f3 má»i Äc hÃ´m nay\r\n            for (let i = 0; i < f4s.length; i++) {\r\n               const f4_code = f4s[i].code // MÃ£ giá»i thiá»u f4\r\n               const f4_time = f4s[i].time // time f4\r\n               let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false\r\n               if (check_f4) f_all_today += 1\r\n               // tá»ng f3 má»i Äc hÃ´m nay\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // Tá»ng sá» f2\r\n   let f2 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      f2 += f2s.length\r\n   }\r\n\r\n   // Tá»ng sá» f3\r\n   let f3 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\r\n         if (f3s.length > 0) f3 += f3s.length\r\n      }\r\n   }\r\n\r\n   // Tá»ng sá» f4\r\n   let f4 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\r\n         for (let i = 0; i < f3s.length; i++) {\r\n            const f3_code = f3s[i].code\r\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code])\r\n            if (f4s.length > 0) f4 += f4s.length\r\n         }\r\n      }\r\n   }\r\n\r\n   const [recharge] = await connection.query(\"SELECT SUM(`money`) as total FROM recharge WHERE phone = ? AND status = 1 \", [phone])\r\n   const [withdraw] = await connection.query(\"SELECT SUM(`money`) as total FROM withdraw WHERE phone = ? AND status = 1 \", [phone])\r\n   const [bank_user] = await connection.query(\"SELECT * FROM user_bank WHERE phone = ? \", [phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: userInfo,\r\n      total_r: recharge,\r\n      total_w: withdraw,\r\n      f1: f1s.length,\r\n      f2: f2,\r\n      f3: f3,\r\n      f4: f4,\r\n      bank_user: bank_user,\r\n   })\r\n}\r\n\r\nconst infoCtv = async (req, res) => {\r\n   const auth = req.cookies.auth\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Phone Error\",\r\n         status: false,\r\n      })\r\n   }\r\n   let userInfo = user[0]\r\n   let phone = userInfo.phone\r\n   // cáº¥p dÆ°á»i trá»±c tiáº¿p all\r\n   const [f1s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [userInfo.code])\r\n\r\n   // cáº¥p dÆ°á»i trá»±c tiáº¿p hÃ´m nay\r\n   let f1_today = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_time = f1s[i].time // MÃ£ giá»i thiá»u f1\r\n      let check = timerJoin(f1_time) == timerJoin() ? true : false\r\n      if (check) {\r\n         f1_today += 1\r\n      }\r\n   }\r\n\r\n   // táº¥t cáº£ cáº¥p dÆ°á»i hÃ´m nay\r\n   let f_all_today = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const f1_time = f1s[i].time // time f1\r\n      let check_f1 = timerJoin(f1_time) == timerJoin() ? true : false\r\n      if (check_f1) f_all_today += 1\r\n      // tá»ng f1 má»i Äc hÃ´m nay\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code // MÃ£ giá»i thiá»u f2\r\n         const f2_time = f2s[i].time // time f2\r\n         let check_f2 = timerJoin(f2_time) == timerJoin() ? true : false\r\n         if (check_f2) f_all_today += 1\r\n         // tá»ng f2 má»i Äc hÃ´m nay\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f2_code])\r\n         for (let i = 0; i < f3s.length; i++) {\r\n            const f3_code = f3s[i].code // MÃ£ giá»i thiá»u f3\r\n            const f3_time = f3s[i].time // time f3\r\n            let check_f3 = timerJoin(f3_time) == timerJoin() ? true : false\r\n            if (check_f3) f_all_today += 1\r\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite`, `time` FROM users WHERE `invite` = ? \", [f3_code])\r\n            // tá»ng f3 má»i Äc hÃ´m nay\r\n            for (let i = 0; i < f4s.length; i++) {\r\n               const f4_code = f4s[i].code // MÃ£ giá»i thiá»u f4\r\n               const f4_time = f4s[i].time // time f4\r\n               let check_f4 = timerJoin(f4_time) == timerJoin() ? true : false\r\n               if (check_f4) f_all_today += 1\r\n               // tá»ng f3 má»i Äc hÃ´m nay\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // Tá»ng sá» f2\r\n   let f2 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      f2 += f2s.length\r\n   }\r\n\r\n   // Tá»ng sá» f3\r\n   let f3 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\r\n         if (f3s.length > 0) f3 += f3s.length\r\n      }\r\n   }\r\n\r\n   // Tá»ng sá» f4\r\n   let f4 = 0\r\n   for (let i = 0; i < f1s.length; i++) {\r\n      const f1_code = f1s[i].code // MÃ£ giá»i thiá»u f1\r\n      const [f2s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f1_code])\r\n      for (let i = 0; i < f2s.length; i++) {\r\n         const f2_code = f2s[i].code\r\n         const [f3s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f2_code])\r\n         for (let i = 0; i < f3s.length; i++) {\r\n            const f3_code = f3s[i].code\r\n            const [f4s] = await connection.query(\"SELECT `phone`, `code`,`invite` FROM users WHERE `invite` = ? \", [f3_code])\r\n            if (f4s.length > 0) f4 += f4s.length\r\n         }\r\n      }\r\n   }\r\n\r\n   const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone])\r\n   const [list_mem_baned] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 2 AND veri = 1 \", [phone])\r\n   let total_recharge = 0\r\n   let total_withdraw = 0\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [recharge] = await connection.query(\"SELECT SUM(money) as money FROM recharge WHERE phone = ? AND status = 1 \", [phone])\r\n      const [withdraw] = await connection.query(\"SELECT SUM(money) as money FROM withdraw WHERE phone = ? AND status = 1 \", [phone])\r\n      if (recharge[0].money) {\r\n         total_recharge += Number(recharge[0].money)\r\n      }\r\n      if (withdraw[0].money) {\r\n         total_withdraw += Number(withdraw[0].money)\r\n      }\r\n   }\r\n\r\n   let total_recharge_today = 0\r\n   let total_withdraw_today = 0\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [recharge_today] = await connection.query(\"SELECT `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone])\r\n      const [withdraw_today] = await connection.query(\"SELECT `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone])\r\n      for (let i = 0; i < recharge_today.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(recharge_today[i].time)\r\n         if (time == today) {\r\n            total_recharge_today += recharge_today[i].money\r\n         }\r\n      }\r\n      for (let i = 0; i < withdraw_today.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(withdraw_today[i].time)\r\n         if (time == today) {\r\n            total_withdraw_today += withdraw_today[i].money\r\n         }\r\n      }\r\n   }\r\n\r\n   let win = 0\r\n   let loss = 0\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [wins] = await connection.query(\"SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 1 \", [phone])\r\n      const [losses] = await connection.query(\"SELECT `money`, `time` FROM minutes_1 WHERE phone = ? AND status = 2 \", [phone])\r\n      for (let i = 0; i < wins.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(wins[i].time)\r\n         if (time == today) {\r\n            win += wins[i].money\r\n         }\r\n      }\r\n      for (let i = 0; i < losses.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(losses[i].time)\r\n         if (time == today) {\r\n            loss += losses[i].money\r\n         }\r\n      }\r\n   }\r\n   let list_mems = []\r\n   const [list_mem_today] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone])\r\n   for (let i = 0; i < list_mem_today.length; i++) {\r\n      let today = timerJoin()\r\n      let time = timerJoin(list_mem_today[i].time)\r\n      if (time == today) {\r\n         const [phone_invites] = await connection.query(\"SELECT `phone` FROM users WHERE code = ? \", [list_mem_today[i].invite])\r\n         let phone_invite = phone_invites[0].phone\r\n         let data = {\r\n            ...list_mem_today[i],\r\n            phone_invite: phone_invite,\r\n         }\r\n         list_mems.push(data)\r\n      }\r\n   }\r\n\r\n   const [point_list] = await connection.query(\"SELECT * FROM point_list WHERE phone = ? \", [phone])\r\n   let moneyCTV = point_list[0].money\r\n\r\n   let list_recharge_news = []\r\n   let list_withdraw_news = []\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [recharge_today] = await connection.query(\"SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone])\r\n      const [withdraw_today] = await connection.query(\"SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone])\r\n      for (let i = 0; i < recharge_today.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(recharge_today[i].time)\r\n         if (time == today) {\r\n            list_recharge_news.push(recharge_today[i])\r\n         }\r\n      }\r\n      for (let i = 0; i < withdraw_today.length; i++) {\r\n         let today = timerJoin()\r\n         let time = timerJoin(withdraw_today[i].time)\r\n         if (time == today) {\r\n            list_withdraw_news.push(withdraw_today[i])\r\n         }\r\n      }\r\n   }\r\n\r\n   const [redenvelopes_used] = await connection.query(\"SELECT * FROM redenvelopes_used WHERE phone = ? \", [phone])\r\n   let redenvelopes_used_today = []\r\n   for (let i = 0; i < redenvelopes_used.length; i++) {\r\n      let today = timerJoin()\r\n      let time = timerJoin(redenvelopes_used[i].time)\r\n      if (time == today) {\r\n         redenvelopes_used_today.push(redenvelopes_used[i])\r\n      }\r\n   }\r\n\r\n   const [financial_details] = await connection.query(\"SELECT * FROM financial_details WHERE phone = ? \", [phone])\r\n   let financial_details_today = []\r\n   for (let i = 0; i < financial_details.length; i++) {\r\n      let today = timerJoin()\r\n      let time = timerJoin(financial_details[i].time)\r\n      if (time == today) {\r\n         financial_details_today.push(financial_details[i])\r\n      }\r\n   }\r\n\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: user,\r\n      f1: f1s.length,\r\n      f2: f2,\r\n      f3: f3,\r\n      f4: f4,\r\n      list_mems: list_mems,\r\n      total_recharge: total_recharge,\r\n      total_withdraw: total_withdraw,\r\n      total_recharge_today: total_recharge_today,\r\n      total_withdraw_today: total_withdraw_today,\r\n      list_mem_baned: list_mem_baned.length,\r\n      win: win,\r\n      loss: loss,\r\n      list_recharge_news: list_recharge_news,\r\n      list_withdraw_news: list_withdraw_news,\r\n      moneyCTV: moneyCTV,\r\n      redenvelopes_used: redenvelopes_used_today,\r\n      financial_details_today: financial_details_today,\r\n   })\r\n}\r\n\r\nconst infoCtv2 = async (req, res) => {\r\n   const auth = req.cookies.auth\r\n   const timeDate = req.body.timeDate\r\n\r\n   function formateT(params) {\r\n      let result = params < 10 ? \"0\" + params : params\r\n      return result\r\n   }\r\n\r\n   function timerJoin(params = \"\", addHours = 0) {\r\n      let date = \"\"\r\n      if (params) {\r\n         date = new Date(Number(params))\r\n      } else {\r\n         date = new Date()\r\n      }\r\n\r\n      date.setHours(date.getHours() + addHours)\r\n\r\n      let years = formateT(date.getFullYear())\r\n      let months = formateT(date.getMonth() + 1)\r\n      let days = formateT(date.getDate())\r\n\r\n      let hours = date.getHours() % 12\r\n      hours = hours === 0 ? 12 : hours\r\n      let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\r\n\r\n      let minutes = formateT(date.getMinutes())\r\n      let seconds = formateT(date.getSeconds())\r\n\r\n      return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Phone Error\",\r\n         status: false,\r\n      })\r\n   }\r\n   let userInfo = user[0]\r\n\r\n   let phone = userInfo.phone\r\n   const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone])\r\n\r\n   let list_mems = []\r\n   const [list_mem_today] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [phone])\r\n   for (let i = 0; i < list_mem_today.length; i++) {\r\n      let today = timeDate\r\n      let time = timerJoin(list_mem_today[i].time)\r\n      if (time == today) {\r\n         const [phone_invites] = await connection.query(\"SELECT `phone` FROM users WHERE code = ? \", [list_mem_today[i].invite])\r\n         let phone_invite = phone_invites[0].phone\r\n         let data = {\r\n            ...list_mem_today[i],\r\n            phone_invite: phone_invite,\r\n         }\r\n         list_mems.push(data)\r\n      }\r\n   }\r\n\r\n   let list_recharge_news = []\r\n   let list_withdraw_news = []\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [recharge_today] = await connection.query(\"SELECT `id`, `status`, `type`,`phone`, `money`, `time` FROM recharge WHERE phone = ? AND status = 1 \", [phone])\r\n      const [withdraw_today] = await connection.query(\"SELECT `id`, `status`,`phone`, `money`, `time` FROM withdraw WHERE phone = ? AND status = 1 \", [phone])\r\n      for (let i = 0; i < recharge_today.length; i++) {\r\n         let today = timeDate\r\n         let time = timerJoin(recharge_today[i].time)\r\n         if (time == today) {\r\n            list_recharge_news.push(recharge_today[i])\r\n         }\r\n      }\r\n      for (let i = 0; i < withdraw_today.length; i++) {\r\n         let today = timeDate\r\n         let time = timerJoin(withdraw_today[i].time)\r\n         if (time == today) {\r\n            list_withdraw_news.push(withdraw_today[i])\r\n         }\r\n      }\r\n   }\r\n\r\n   const [redenvelopes_used] = await connection.query(\"SELECT * FROM redenvelopes_used WHERE phone = ? \", [phone])\r\n   let redenvelopes_used_today = []\r\n   for (let i = 0; i < redenvelopes_used.length; i++) {\r\n      let today = timeDate\r\n      let time = timerJoin(redenvelopes_used[i].time)\r\n      if (time == today) {\r\n         redenvelopes_used_today.push(redenvelopes_used[i])\r\n      }\r\n   }\r\n   const [financial_details] = await connection.query(\"SELECT * FROM financial_details WHERE phone = ? \", [phone])\r\n   let financial_details_today = []\r\n   for (let i = 0; i < financial_details.length; i++) {\r\n      let today = timeDate\r\n      let time = timerJoin(financial_details[i].time)\r\n      if (time == today) {\r\n         financial_details_today.push(financial_details[i])\r\n      }\r\n   }\r\n\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: user,\r\n      list_mems: list_mems,\r\n      list_recharge_news: list_recharge_news,\r\n      list_withdraw_news: list_withdraw_news,\r\n      redenvelopes_used: redenvelopes_used_today,\r\n      financial_details_today: financial_details_today,\r\n   })\r\n}\r\n\r\nconst createBonus = async (req, res) => {\r\n   const randomString = length => {\r\n      var result = \"\"\r\n      var characters = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\r\n      var charactersLength = characters.length\r\n      for (var i = 0; i < length; i++) {\r\n         result += characters.charAt(Math.floor(Math.random() * charactersLength))\r\n      }\r\n      return result\r\n   }\r\n   function formateT(params) {\r\n      let result = params < 10 ? \"0\" + params : params\r\n      return result\r\n   }\r\n\r\n   function timerJoin(params = \"\", addHours = 0) {\r\n      let date = \"\"\r\n      if (params) {\r\n         date = new Date(Number(params))\r\n      } else {\r\n         date = new Date()\r\n      }\r\n\r\n      date.setHours(date.getHours() + addHours)\r\n\r\n      let years = formateT(date.getFullYear())\r\n      let months = formateT(date.getMonth() + 1)\r\n      let days = formateT(date.getDate())\r\n\r\n      let hours = date.getHours() % 12\r\n      hours = hours === 0 ? 12 : hours\r\n      let ampm = date.getHours() < 12 ? \"AM\" : \"PM\"\r\n\r\n      let minutes = formateT(date.getMinutes())\r\n      let seconds = formateT(date.getSeconds())\r\n\r\n      return years + \"-\" + months + \"-\" + days + \" \" + hours + \":\" + minutes + \":\" + seconds + \" \" + ampm\r\n   }\r\n   const d = new Date()\r\n   const time = d.getTime()\r\n   let auth = req.cookies.auth\r\n   let money = req.body.money\r\n\r\n   if (!money || !auth) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let userInfo = user[0]\r\n   const [point_list] = await connection.query(\"SELECT * FROM point_list WHERE phone = ? \", [userInfo.phone])\r\n   if (point_list.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let ctv = point_list[0]\r\n\r\n   if (ctv.money - money >= 0) {\r\n      let id_redenvelops = randomString(16)\r\n      await connection.execute(\"UPDATE `point_list` SET money = money - ? WHERE phone = ?\", [money, ctv.phone])\r\n      let sql = `INSERT INTO redenvelopes SET id_redenvelope = ?, phone = ?, money = ?, used = ?, amount = ?, status = ?, time = ?`\r\n      await connection.query(sql, [id_redenvelops, userInfo.phone, money, 1, 1, 0, time])\r\n      const [point_list] = await connection.query(\"SELECT `money` FROM point_list WHERE phone = ? \", [userInfo.phone])\r\n      return res.status(200).json({\r\n         message: \"Successful gift creation\",\r\n         status: true,\r\n         id: id_redenvelops,\r\n         money: point_list[0].money,\r\n      })\r\n   } else {\r\n      return res.status(200).json({\r\n         message: \"The balance is not enough to create gifts\",\r\n         status: false,\r\n      })\r\n   }\r\n}\r\n\r\nconst listRedenvelops = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let userInfo = user[0]\r\n   let [redenvelopes] = await connection.query(\"SELECT * FROM redenvelopes WHERE phone = ? ORDER BY id DESC\", [userInfo.phone])\r\n   return res.status(200).json({\r\n      message: \"Successful change\",\r\n      status: true,\r\n      redenvelopes: redenvelopes,\r\n   })\r\n}\r\n\r\nconst listMember = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let { pageno, limit } = req.body\r\n\r\n   let [checkInfo] = await connection.execute(\"SELECT * FROM users WHERE token = ?\", [auth])\r\n\r\n   if (checkInfo.length == 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n   let userInfo = checkInfo[0]\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n   const [users] = await connection.query(`SELECT id_user, phone, money, total_money, status, time FROM users WHERE veri = 1 AND level = 0 AND ctv = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [userInfo.phone])\r\n   const [total_users] = await connection.query(`SELECT * FROM users WHERE veri = 1 AND level = 0 AND ctv = ? `, [userInfo.phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: users,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n\r\nconst listRechargeP = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let userInfo = user[0]\r\n\r\n   const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [userInfo.phone])\r\n   let list_recharge_news = []\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [recharge_today] = await connection.query(\"SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT 100\", [phone])\r\n      for (let i = 0; i < recharge_today.length; i++) {\r\n         list_recharge_news.push(recharge_today[i])\r\n      }\r\n   }\r\n   return res.status(200).json({\r\n      message: \"Failed\",\r\n      status: true,\r\n      list_recharge_news: list_recharge_news,\r\n      timeStamp: timeNow,\r\n   })\r\n}\r\n\r\nconst listWithdrawP = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let userInfo = user[0]\r\n\r\n   const [list_mem] = await connection.query(\"SELECT * FROM users WHERE ctv = ? AND status = 1 AND veri = 1 \", [userInfo.phone])\r\n   let list_withdraw_news = []\r\n   for (let i = 0; i < list_mem.length; i++) {\r\n      let phone = list_mem[i].phone\r\n      const [withdraw_today] = await connection.query(\"SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT 100\", [phone])\r\n      for (let i = 0; i < withdraw_today.length; i++) {\r\n         list_withdraw_news.push(withdraw_today[i])\r\n      }\r\n   }\r\n   return res.status(200).json({\r\n      message: \"Failed\",\r\n      status: true,\r\n      list_withdraw_news: list_withdraw_news,\r\n      timeStamp: timeNow,\r\n   })\r\n}\r\n\r\nconst listRechargeMem = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.params.phone\r\n   let { pageno, limit } = req.body\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0 || auths.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let { token, password, otp, level, ...userInfo } = user[0]\r\n\r\n   if (auths[0].phone != userInfo.ctv) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [recharge] = await connection.query(`SELECT * FROM recharge WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone])\r\n   const [total_users] = await connection.query(`SELECT * FROM recharge WHERE phone = ?`, [phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: recharge,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n\r\nconst listWithdrawMem = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.params.phone\r\n   let { pageno, limit } = req.body\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0 || auths.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let { token, password, otp, level, ...userInfo } = user[0]\r\n\r\n   if (auths[0].phone != userInfo.ctv) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [withdraw] = await connection.query(`SELECT * FROM withdraw WHERE phone = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone])\r\n   const [total_users] = await connection.query(`SELECT * FROM withdraw WHERE phone = ?`, [phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: withdraw,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n\r\nconst listRedenvelope = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.params.phone\r\n   let { pageno, limit } = req.body\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0 || auths.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let { token, password, otp, level, ...userInfo } = user[0]\r\n\r\n   if (auths[0].phone != userInfo.ctv) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [redenvelopes_used] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ? ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone])\r\n   const [total_users] = await connection.query(`SELECT * FROM redenvelopes_used WHERE phone_used = ?`, [phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: redenvelopes_used,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n\r\nconst listBet = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.params.phone\r\n   let { pageno, limit } = req.body\r\n\r\n   if (!pageno || !limit) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (pageno < 0 || limit < 0) {\r\n      return res.status(200).json({\r\n         code: 0,\r\n         msg: \"No more data\",\r\n         data: {\r\n            gameslist: [],\r\n         },\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   if (!phone) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [user] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (user.length == 0 || auths.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n   let { token, password, otp, level, ...userInfo } = user[0]\r\n\r\n   if (auths[0].phone != userInfo.ctv) {\r\n      return res.status(200).json({\r\n         message: \"Failed\",\r\n         status: false,\r\n         timeStamp: timeNow,\r\n      })\r\n   }\r\n\r\n   const [listBet] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0 ORDER BY id DESC LIMIT ${pageno}, ${limit} `, [phone])\r\n   const [total_users] = await connection.query(`SELECT * FROM minutes_1 WHERE phone = ? AND status != 0`, [phone])\r\n   return res.status(200).json({\r\n      message: \"Success\",\r\n      status: true,\r\n      datas: listBet,\r\n      page_total: Math.ceil(total_users.length / limit),\r\n   })\r\n}\r\n\r\nconst buffMoney = async (req, res) => {\r\n   let auth = req.cookies.auth\r\n   let phone = req.body.username\r\n   let select = req.body.select\r\n   let money = req.body.money\r\n\r\n   if (!phone || !select || !money) {\r\n      return res.status(200).json({\r\n         message: \"Fail\",\r\n         status: false,\r\n      })\r\n   }\r\n\r\n   const [users] = await connection.query(\"SELECT * FROM users WHERE phone = ? \", [phone])\r\n   const [auths] = await connection.query(\"SELECT * FROM users WHERE token = ? \", [auth])\r\n\r\n   if (users.length == 0) {\r\n      return res.status(200).json({\r\n         message: \"Account does not exist\",\r\n         status: false,\r\n      })\r\n   }\r\n   let userInfo = users[0]\r\n   let authInfo = auths[0]\r\n\r\n   const [point_list] = await connection.query(\"SELECT `money_us` FROM point_list WHERE phone = ? \", [authInfo.phone])\r\n\r\n   let check = point_list[0].money_us\r\n\r\n   if (select == \"1\") {\r\n      if (check - money >= 0) {\r\n         const d = new Date()\r\n         const time = d.getTime()\r\n         await connection.query(\"UPDATE users SET money = money + ? WHERE phone = ? \", [money, userInfo.phone])\r\n         await connection.query(\"UPDATE point_list SET money_us = money_us - ? WHERE phone = ? \", [money, authInfo.phone])\r\n         let sql = \"INSERT INTO financial_details SET phone = ?, phone_used = ?, money = ?, type = ?, time = ?\"\r\n         await connection.query(sql, [authInfo.phone, userInfo.phone, money, \"1\", time])\r\n\r\n         const [moneyN] = await connection.query(\"SELECT `money_us` FROM point_list WHERE phone = ? \", [authInfo.phone])\r\n         return res.status(200).json({\r\n            message: \"Success\",\r\n            status: true,\r\n            money: moneyN[0].money_us,\r\n         })\r\n      } else {\r\n         return res.status(200).json({\r\n            message: \"Insufficient balance\",\r\n            status: false,\r\n         })\r\n      }\r\n   } else {\r\n      const d = new Date()\r\n      const time = d.getTime()\r\n      await connection.query(\"UPDATE users SET money = money - ? WHERE phone = ? \", [money, userInfo.phone])\r\n      await connection.query(\"UPDATE point_list SET money = money + ? WHERE phone = ? \", [money, authInfo.phone])\r\n      let sql = \"INSERT INTO financial_details SET phone = ?, phone_used = ?, money = ?, type = ?, time = ?\"\r\n      await connection.query(sql, [authInfo.phone, userInfo.phone, money, \"2\", time])\r\n      return res.status(200).json({\r\n         message: \"Success\",\r\n         status: true,\r\n      })\r\n   }\r\n}\r\n\r\nmodule.exports = {\r\n   buffMoney,\r\n   dailyPage,\r\n   middlewareDailyController,\r\n   userInfo,\r\n   statistical,\r\n   listMeber,\r\n   profileMember,\r\n   infoCtv,\r\n   infoCtv2,\r\n   settingPage,\r\n   giftPage,\r\n   support,\r\n   settings,\r\n   createBonus,\r\n   listRedenvelops,\r\n   listMember,\r\n   listRecharge,\r\n   listWithdraw,\r\n   listRechargeP,\r\n   listWithdrawP,\r\n   pageInfo,\r\n   listRechargeMem,\r\n   listWithdrawMem,\r\n   listRedenvelope,\r\n   listBet,\r\n}\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/k5Controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"// import e from \"express\";\nconst connection = require(\"../config/connectDB\");\nrequire('dotenv').config();\nconst K5DPage = async (req, res) => {\n  return res.render(\"bet/5d/5d.ejs\");\n};\nconst K5DPage3 = async (req, res) => {\n  return res.render(\"bet/wingo/win3.ejs\");\n};\nconst K5DPage5 = async (req, res) => {\n  return res.render(\"bet/wingo/win5.ejs\");\n};\nconst K5DPage10 = async (req, res) => {\n  return res.render(\"bet/wingo/win10.ejs\");\n};\nconst isNumber = params => {\n  let pattern = /^[0-9]*\\d$/;\n  return pattern.test(params);\n};\nfunction formateT(params) {\n  let result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin(params = '') {\n  let date = '';\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  let years = formateT(date.getFullYear());\n  let months = formateT(date.getMonth() + 1);\n  let days = formateT(date.getDate());\n  let hours = formateT(date.getHours());\n  let minutes = formateT(date.getMinutes());\n  let seconds = formateT(date.getSeconds());\n  return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds;\n}\nconst rosesPlus = async (auth, money) => {\n  const [level] = await connection.query('SELECT * FROM level ');\n  let level0 = level[0];\n  const [user] = await connection.query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n  let userInfo = user[0];\n  const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n  if (money >= 10000) {\n    if (f1.length > 0) {\n      let infoF1 = f1[0];\n      let rosesF1 = money / 100 * level0.f1;\n      await connection.query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n      const [f2] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF1.invite]);\n      if (f2.length > 0) {\n        let infoF2 = f2[0];\n        let rosesF2 = money / 100 * level0.f2;\n        await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n        const [f3] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF2.invite]);\n        if (f3.length > 0) {\n          let infoF3 = f3[0];\n          let rosesF3 = money / 100 * level0.f3;\n          await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n          const [f4] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF3.invite]);\n          if (f4.length > 0) {\n            let infoF4 = f4[0];\n            let rosesF4 = money / 100 * level0.f4;\n            await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n          }\n        }\n      }\n    }\n  }\n};\nconst validateBet = async (join, list_join, x, money, game) => {\n  let checkJoin = isNumber(list_join);\n  let checkX = isNumber(x);\n  const checks = ['a', 'b', 'c', 'd', 'e', 'total'].includes(join);\n  const checkGame = ['1', '3', '5', '10'].includes(String(game));\n  const checkMoney = ['1', '10', '100', '1000'].includes(money);\n  if (!checks || list_join.length > 10 || !checkX || !checkMoney || !checkGame) {\n    return false;\n  }\n  if (checkJoin) {\n    let arr = list_join.split('');\n    let length = arr.length;\n    for (let i = 0; i < length; i++) {\n      const joinNum = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].includes(arr[i]);\n      if (!joinNum) {\n        return false;\n      }\n    }\n  } else {\n    let arr = list_join.split('');\n    let length = arr.length;\n    for (let i = 0; i < length; i++) {\n      const joinStr = [\"c\", \"l\", \"b\", \"s\"].includes(arr[i]);\n      if (!joinStr) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nconst betK5D = async (req, res) => {\n  try {\n    let {\n      join,\n      list_join,\n      x,\n      money,\n      game,\n      selectedValues\n    } = req.body;\n    let auth = req.cookies.auth;\n    let validate = await validateBet(join, list_join, x, money, game);\n    if (!validate) {\n      return res.status(200).json({\n        message: 'Invalid bet',\n        status: false\n      });\n    }\n    const [k5DNow] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money`,`win_wallet` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n    console.log(k5DNow, user, 'data');\n    if (k5DNow.length < 1 || user.length < 1) {\n      return res.status(200).json({\n        message: 'Error!',\n        status: false\n      });\n    }\n    let userInfo = user[0];\n    let period = k5DNow[0];\n    let date = new Date();\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    let id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n    let total = money * x * String(list_join).split('').length;\n    let fee = total * 0.03;\n    let price = total - fee;\n    let check = userInfo.money + userInfo.win_wallet - total;\n    if (check >= 0) {\n      let finalWinWallet = userInfo.win_wallet;\n      let finalWallet = userInfo.money;\n      finalWallet = finalWallet - total;\n      if (finalWallet < 0) {\n        finalWinWallet = finalWinWallet + finalWallet;\n        finalWallet = 0;\n      }\n      let timeNow = Date.now();\n      let sqlvalues;\n      if (selectedValues.length > 1) {\n        // If multiple selected values, map through and build the array of values\n        sqlvalues = selectedValues.map(selected => [++id_product,\n        // Incrementing id_product\n        userInfo.phone, userInfo.code, userInfo.invite, period.period, userInfo.level, money * x, money * x * 0.97, x, money * x * 0.03, game, join, selected,\n        // This seems like a variable coming from selectedValues\n        0,\n        // Status\n        timeNow // Timestamp\n        ]);\n      } else {\n        // Single entry case, still wrap in an array for consistency\n        sqlvalues = [[id_product, userInfo.phone, userInfo.code, userInfo.invite, period.period, userInfo.level, total, price, x, fee, game, join, list_join, 0,\n        // Status\n        timeNow // Timestamp\n        ]];\n      }\n\n      // Construct the SQL query with placeholders\n      const numRows = sqlvalues.length;\n      const placeholders = sqlvalues.map(() => '(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)').join(', ');\n      const sql = `INSERT INTO result_5d (id_product, phone, code, invite, stage, level, money, price, amount, fee, game, join_bet, bet, status, time) VALUES ${placeholders}`;\n\n      // Flatten the sqlvalues array for binding\n      const flattenedValues = sqlvalues.flat();\n      try {\n        await connection.execute(sql, flattenedValues);\n        console.log('Rows inserted successfully');\n      } catch (error) {\n        console.error('Error inserting data:', error);\n      }\n      await connection.execute('UPDATE `users` SET `money` = ?,`win_wallet` = ? ,vip_exp = vip_exp + ?WHERE `token` = ? ', [finalWallet, finalWinWallet, money, auth]);\n      const [users] = await connection.query('SELECT `money`, `level`,`win_wallet` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n      await rosesPlus(auth, money * x);\n      const [level] = await connection.query('SELECT * FROM level ');\n      let level0 = level[0];\n      const sql2 = `INSERT INTO roses SET phone = ?,code = ?,invite = ?,f1 = ?,f2 = ?,f3 = ?,f4 = ?,time = ?`;\n      let total_m = total;\n      let f1 = total_m / 100 * level0.f1;\n      let f2 = total_m / 100 * level0.f2;\n      let f3 = total_m / 100 * level0.f3;\n      let f4 = total_m / 100 * level0.f4;\n      await connection.execute(sql2, [userInfo.phone, userInfo.code, userInfo.invite, f1, f2, f3, f4, timeNow]);\n      return res.status(200).json({\n        message: 'Successful bet',\n        status: true,\n        // data: result,\n        change: users[0].level,\n        money: users[0].money,\n        win_wallet: users[0].win_wallet\n      });\n    } else {\n      return res.status(200).json({\n        message: 'The amount is not enough',\n        status: false\n      });\n    }\n  } catch (error) {\n    if (error) console.log(error);\n  }\n};\nconst listOrderOld = async (req, res) => {\n  let {\n    gameJoin,\n    pageno,\n    pageto\n  } = req.body;\n  let auth = req.cookies.auth;\n  let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n  if (!checkGame || pageno < 0 || pageto < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n  let game = Number(gameJoin);\n  const [k5d] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT ${pageno}, ${pageto} `);\n  const [k5dAll] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = '${game}' `);\n  const [period] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n  if (k5d.length == 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      page: 1,\n      status: false\n    });\n  }\n  if (!pageno || !pageto || !user[0] || !k5d[0] || !period[0]) {\n    return res.status(200).json({\n      message: 'Error!',\n      status: false\n    });\n  }\n  let page = Math.ceil(k5dAll.length / 10);\n  return res.status(200).json({\n    code: 0,\n    msg: \"Get success\",\n    data: {\n      gameslist: k5d\n    },\n    period: period[0].period,\n    page: page,\n    status: true\n  });\n};\nconst GetMyEmerdList = async (req, res) => {\n  let {\n    gameJoin,\n    pageno,\n    pageto\n  } = req.body;\n  let auth = req.cookies.auth;\n  let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n  if (!checkGame || pageno < 0 || pageto < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  let game = Number(gameJoin);\n  const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n  const [result_5d] = await connection.query(`SELECT * FROM result_5d WHERE phone = ? AND game = '${game}' ORDER BY id DESC LIMIT ${Number(pageno) + ',' + Number(pageto)}`, [user[0].phone]);\n  const [result_5dAll] = await connection.query(`SELECT * FROM result_5d WHERE phone = ? AND game = '${game}' ORDER BY id DESC `, [user[0].phone]);\n  if (!result_5d[0]) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      page: 1,\n      status: false\n    });\n  }\n  if (!pageno || !pageto || !user[0] || !result_5d[0]) {\n    return res.status(200).json({\n      message: 'Error!',\n      status: true\n    });\n  }\n  let page = Math.ceil(result_5dAll.length / 10);\n  let datas = result_5d.map(data => {\n    let {\n      id,\n      phone,\n      code,\n      invite,\n      level,\n      game,\n      ...others\n    } = data;\n    return others;\n  });\n  return res.status(200).json({\n    code: 0,\n    msg: \"Get success\",\n    data: {\n      gameslist: datas\n    },\n    page: page,\n    status: true\n  });\n};\nfunction makeid(length) {\n  var result = '';\n  var characters = '0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\nconst add5D = async game => {\n  try {\n    let join = '';\n    if (game == 1) join = 'k5d';\n    if (game == 3) join = 'k5d3';\n    if (game == 5) join = 'k5d5';\n    if (game == 10) join = 'k5d10';\n    let result2 = makeid(5);\n    let timeNow = Date.now();\n    let [k5D] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n    const [setting] = await connection.query('SELECT * FROM `admin` ');\n    let period = k5D[0].period;\n    let nextResult = '';\n    if (game == 1) nextResult = setting[0].k5d;\n    if (game == 3) nextResult = setting[0].k5d3;\n    if (game == 5) nextResult = setting[0].k5d5;\n    if (game == 10) nextResult = setting[0].k5d10;\n\n    // console.log(setting[0],'admin setting');\n\n    const [waiting] = await connection.query(`SELECT * FROM result_5d WHERE status = 0 AND level = 0 AND game = '${game}' ORDER BY id ASC `);\n\n    //   console.log(waiting,'current bets');\n\n    let newArr = '';\n    if (nextResult == '-1' && !waiting[1]) {\n      await connection.execute(`UPDATE 5d SET result = ?,status = ? WHERE period = ? AND game = \"${game}\"`, [result2, 1, period]);\n      newArr = '-1';\n    } else if (nextResult == '-1' && waiting[1]) {\n      function calculatePayout(waiting, winningString) {\n        let totalPayout = 0;\n        let results = winningString.split('').map(Number); // Convert the string to an array of numbers\n\n        // Calculate the sum for 'total' category\n        const totalSum = results.reduce((acc, val) => acc + val, 0);\n        for (let bet of waiting) {\n          let payout = 0;\n          let betValue = bet.money * bet.amount;\n          let index = bet.join_bet.charCodeAt(0) - 'a'.charCodeAt(0); // index 0 for 'a', 1 for 'b', etc.\n\n          if (bet.join_bet === 'total') {\n            if (bet.bet === 'c' && totalSum % 2 === 0) payout = betValue * 2;else if (bet.bet === 'l' && totalSum % 2 !== 0) payout = betValue * 2;else if (bet.bet === 'b' && totalSum > 22) payout = betValue * 2;else if (bet.bet === 's' && totalSum <= 22) payout = betValue * 2;\n          } else {\n            let result = results[index];\n            if (bet.bet === String(result)) payout = betValue * 9;else if (bet.bet === 'c' && result % 2 === 0) payout = betValue * 2;else if (bet.bet === 'l' && result % 2 !== 0) payout = betValue * 2;else if (bet.bet === 'b' && result > 4) payout = betValue * 2;else if (bet.bet === 's' && result <= 4) payout = betValue * 2;\n          }\n          totalPayout += payout;\n        }\n        return totalPayout;\n      }\n      function findOptimalWinningString(waiting) {\n        const totalReceivedBets = waiting.reduce((acc, bet) => acc + bet.money * bet.amount, 0);\n        const minRequiredProfit = totalReceivedBets * 0.25; // 25% of total received bets\n\n        let smallestPayoutOptions = [];\n        let minPayout = Infinity;\n        let zeroPayoutOptions = [];\n        for (let i = 0; i <= 99999; i++) {\n          let winningString = String(i).padStart(5, '0'); // Generate the 5-digit string\n          let payout = calculatePayout(waiting, winningString);\n          let profit = totalReceivedBets - payout;\n          if (payout === 0) {\n            zeroPayoutOptions.push(winningString);\n          } else if (profit >= minRequiredProfit) {\n            if (payout < minPayout) {\n              minPayout = payout;\n              smallestPayoutOptions = [winningString]; // Start a new list with this option\n            } else if (payout === minPayout) {\n              smallestPayoutOptions.push(winningString); // Add to the list of smallest payout options\n            }\n          }\n        }\n        if (smallestPayoutOptions.length > 0) {\n          // Randomly select from smallest payout options\n          return smallestPayoutOptions[Math.floor(Math.random() * smallestPayoutOptions.length)];\n        } else {\n          // If no valid smallest payout option, randomly select from zero payout options\n          return zeroPayoutOptions[Math.floor(Math.random() * zeroPayoutOptions.length)];\n        }\n      }\n      const optimalWinningString = findOptimalWinningString(waiting);\n      console.log(\"Optimal Winning String:\", optimalWinningString);\n      await connection.execute(`UPDATE 5d SET result = ?,status = ? WHERE period = ? AND game = ${game}`, [optimalWinningString, 1, period]);\n    } else {\n      let result = '';\n      let arr = nextResult.split('|');\n      let check = arr.length;\n      if (check == 1) {\n        newArr = '-1';\n      } else {\n        for (let i = 1; i < arr.length; i++) {\n          newArr += arr[i] + '|';\n        }\n        newArr = newArr.slice(0, -1);\n      }\n      result = arr[0];\n      await connection.execute(`UPDATE 5d SET result = ?,status = ? WHERE period = ? AND game = ${game}`, [result, 1, period]);\n    }\n    const sql = `INSERT INTO 5d SET period = ?, result = ?, game = ?, status = ?, time = ?`;\n    await connection.execute(sql, [Number(period) + 1, 0, game, 0, timeNow]);\n    if (game == 1) join = 'k5d';\n    if (game == 3) join = 'k5d3';\n    if (game == 5) join = 'k5d5';\n    if (game == 10) join = 'k5d10';\n    await connection.execute(`UPDATE admin SET ${join} = ?`, [newArr]);\n  } catch (error) {\n    if (error) {\n      console.log(error);\n    }\n  }\n};\nasync function funHanding(game) {\n  const [k5d] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n  let k5dInfo = k5d[0];\n\n  // update ket qua\n  await connection.execute(`UPDATE result_5d SET result = ? WHERE status = 0 AND game = ${game}`, [k5dInfo.result]);\n  let result = String(k5dInfo.result).split('');\n  let a = result[0];\n  let b = result[1];\n  let c = result[2];\n  let d = result[3];\n  let e = result[4];\n  let total = 0;\n  for (let i = 0; i < result.length; i++) {\n    total += Number(result[i]);\n  }\n\n  // xá»­ lÃ½ game a\n  const [joinA] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'a' `);\n  let lengthA = joinA.length;\n  for (let i = 0; i < lengthA; i++) {\n    let info = joinA[i];\n    let sult = info.bet.split('');\n    let check = isNumber(info.bet);\n    if (check) {\n      const joinNum = sult.includes(a);\n      if (!joinNum) {\n        await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n      }\n    }\n  }\n  if (lengthA > 0) {\n    if (a == '0' || a == '1' || a == '2' || a == '3' || a == '4') {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'b' `);\n    }\n    ;\n    if (a == '5' || a == '6' || a == '7' || a == '8' || a == '9') {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 's' `);\n    }\n    ;\n    if (Number(a) % 2 == 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'l' `);\n    }\n    ;\n    if (Number(a) % 2 != 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'c' `);\n    }\n    ;\n  }\n\n  // xá»­ lÃ½ game b\n  const [joinB] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'b' `);\n  let lengthB = joinB.length;\n  for (let i = 0; i < lengthB; i++) {\n    let info = joinB[i];\n    let sult = info.bet.split('');\n    let check = isNumber(info.bet);\n    if (check) {\n      const joinNum = sult.includes(b);\n      if (!joinNum) {\n        await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n      }\n    }\n  }\n  if (lengthB > 0) {\n    if (b == '0' || b == '1' || b == '2' || b == '3' || b == '4') {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'b' `);\n    }\n    ;\n    if (b == '5' || b == '6' || b == '7' || b == '8' || b == '9') {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 's' `);\n    }\n    ;\n    if (Number(b) % 2 == 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'l' `);\n    }\n    ;\n    if (Number(b) % 2 != 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'c' `);\n    }\n    ;\n  }\n\n  // xá»­ lÃ½ game c\n  const [joinC] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'c' `);\n  let lengthC = joinC.length;\n  for (let i = 0; i < lengthC; i++) {\n    let info = joinC[i];\n    let sult = info.bet.split('');\n    let check = isNumber(info.bet);\n    if (check) {\n      const joinNum = sult.includes(c);\n      if (!joinNum) {\n        await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n      }\n    }\n  }\n  if (lengthC > 0) {\n    if (c == '0' || c == '1' || c == '2' || c == '3' || c == '4') {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'b' `);\n    }\n    ;\n    if (c == '5' || c == '6' || c == '7' || c == '8' || c == '9') {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 's' `);\n    }\n    ;\n    if (Number(c) % 2 == 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'l' `);\n    }\n    ;\n    if (Number(c) % 2 != 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'c' `);\n    }\n    ;\n  }\n\n  // xá»­ lÃ½ game d\n  const [joinD] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'd' `);\n  let lengthD = joinD.length;\n  for (let i = 0; i < lengthD; i++) {\n    let info = joinD[i];\n    let sult = info.bet.split('');\n    let check = isNumber(info.bet);\n    if (check) {\n      const joinNum = sult.includes(d);\n      if (!joinNum) {\n        await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n      }\n    }\n  }\n  if (lengthD > 0) {\n    if (d == '0' || d == '1' || d == '2' || d == '3' || d == '4') {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'b' `);\n    }\n    ;\n    if (d == '5' || d == '6' || d == '7' || d == '8' || d == '9') {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 's' `);\n    }\n    ;\n    if (Number(d) % 2 == 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'l' `);\n    }\n    ;\n    if (Number(d) % 2 != 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'c' `);\n    }\n    ;\n  }\n\n  // xá»­ lÃ½ game e\n  const [joinE] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'e' `);\n  let lengthE = joinE.length;\n  for (let i = 0; i < lengthE; i++) {\n    let info = joinE[i];\n    let sult = info.bet.split('');\n    let check = isNumber(info.bet);\n    if (check) {\n      const joinNum = sult.includes(e);\n      if (!joinNum) {\n        await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n      }\n    }\n  }\n  if (lengthE > 0) {\n    if (e == '0' || e == '1' || e == '2' || e == '3' || e == '4') {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'b' `);\n    }\n    ;\n    if (e == '5' || e == '6' || e == '7' || e == '8' || e == '9') {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 's' `);\n    }\n    ;\n    if (Number(e) % 2 == 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'l' `);\n    }\n    ;\n    if (Number(e) % 2 != 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'c' `);\n    }\n    ;\n  }\n\n  // xá»­ lÃ½ game e\n  const [joinTotal] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'total' `);\n  if (joinTotal.length > 0) {\n    if (total <= 22) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'b' `);\n    }\n    ;\n    if (total > 22) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 's' `);\n    }\n    ;\n    if (total % 2 == 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'l' `);\n    }\n    ;\n    if (total % 2 != 0) {\n      await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'c' `);\n    }\n    ;\n  }\n}\nconst handling5D = async typeid => {\n  let game = Number(typeid);\n  await funHanding(game);\n  const [order] = await connection.execute(`SELECT id, phone, bet, price, money, fee, amount FROM result_5d WHERE status = 0 AND game = ${game} `);\n  for (let i = 0; i < order.length; i++) {\n    let orders = order[i];\n    let id = orders.id;\n    let phone = orders.phone;\n    let nhan_duoc = 0;\n    let check = isNumber(orders.bet);\n    if (check) {\n      let arr = orders.bet.split('');\n      // let total = (orders.money / arr.length / orders.amount);\n      let total = orders.money;\n      let fee = total * 0.03;\n      let price = total - fee;\n      nhan_duoc += price * 9;\n    } else {\n      nhan_duoc += orders.price * 2;\n    }\n    await connection.execute('UPDATE `result_5d` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n    const sql = 'UPDATE `users` SET `win_wallet` = `win_wallet` + ? WHERE `phone` = ? ';\n    await connection.execute(sql, [nhan_duoc, phone]);\n  }\n};\nmodule.exports = {\n  K5DPage,\n  K5DPage3,\n  K5DPage5,\n  K5DPage10,\n  betK5D,\n  listOrderOld,\n  GetMyEmerdList,\n  add5D,\n  handling5D\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["connection","require","config","K5DPage","req","res","render","K5DPage3","K5DPage5","K5DPage10","isNumber","params","pattern","test","formateT","result","timerJoin","date","Date","Number","years","getFullYear","months","getMonth","days","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","rosesPlus","auth","money","level","query","level0","user","userInfo","f1","invite","length","infoF1","rosesF1","phone","f2","infoF2","rosesF2","f3","infoF3","rosesF3","f4","infoF4","rosesF4","validateBet","join","list_join","x","game","checkJoin","checkX","checks","includes","checkGame","String","checkMoney","arr","split","i","joinNum","joinStr","betK5D","selectedValues","body","cookies","validate","status","json","message","k5DNow","console","log","period","id_product","Math","floor","random","total","fee","price","check","win_wallet","finalWinWallet","finalWallet","timeNow","now","sqlvalues","map","selected","code","numRows","placeholders","sql","flattenedValues","flat","execute","error","users","sql2","total_m","change","listOrderOld","gameJoin","pageno","pageto","msg","data","gameslist","k5d","k5dAll","page","ceil","GetMyEmerdList","result_5d","result_5dAll","datas","id","others","makeid","characters","charactersLength","charAt","add5D","result2","k5D","setting","nextResult","k5d3","k5d5","k5d10","waiting","newArr","calculatePayout","winningString","totalPayout","results","totalSum","reduce","acc","val","bet","payout","betValue","amount","index","join_bet","charCodeAt","findOptimalWinningString","totalReceivedBets","minRequiredProfit","smallestPayoutOptions","minPayout","Infinity","zeroPayoutOptions","padStart","profit","push","optimalWinningString","slice","funHanding","k5dInfo","a","b","c","d","e","joinA","lengthA","info","sult","joinB","lengthB","joinC","lengthC","joinD","lengthD","joinE","lengthE","joinTotal","handling5D","typeid","order","orders","nhan_duoc","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["k5Controller.js"],"sourcesContent":["// import e from \"express\";\nconst connection = require (\"../config/connectDB\");\nrequire('dotenv').config();\n\n\nconst K5DPage = async (req, res) => {\n    return res.render(\"bet/5d/5d.ejs\"); \n}\n\nconst K5DPage3 = async (req, res) => {\n    return res.render(\"bet/wingo/win3.ejs\");\n}\n\nconst K5DPage5 = async (req, res) => {\n    return res.render(\"bet/wingo/win5.ejs\");\n}\n\nconst K5DPage10 = async (req, res) => {\n    return res.render(\"bet/wingo/win10.ejs\");\n}\n\n\nconst isNumber = (params) => {\n    let pattern = /^[0-9]*\\d$/;\n    return pattern.test(params);\n}\n\nfunction formateT(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n}\n\nfunction timerJoin(params = '') {\n    let date = '';\n    if (params) {\n        date = new Date(Number(params));\n    } else {\n        date = new Date();\n    }\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n\n    let hours = formateT(date.getHours());\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n    return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds;\n}\n\nconst rosesPlus = async (auth, money) => {\n    const [level] = await connection.query('SELECT * FROM level ');\n    let level0 = level[0];\n\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n    let userInfo = user[0];\n    const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n    if (money >= 10000) {\n        if (f1.length > 0) {\n            let infoF1 = f1[0];\n            let rosesF1 = (money / 100) * level0.f1;\n            await connection.query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n            const [f2] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF1.invite]);\n            if (f2.length > 0) {\n                let infoF2 = f2[0];\n                let rosesF2 = (money / 100) * level0.f2;\n                await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n                const [f3] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF2.invite]);\n                if (f3.length > 0) {\n                    let infoF3 = f3[0];\n                    let rosesF3 = (money / 100) * level0.f3;\n                    await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n                    const [f4] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF3.invite]);\n                    if (f4.length > 0) {\n                        let infoF4 = f4[0];\n                        let rosesF4 = (money / 100) * level0.f4;\n                        await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n                    }\n                }\n            }\n\n        }\n    }\n}\n\nconst validateBet = async (join, list_join, x, money, game) => {\n    let checkJoin = isNumber(list_join);\n    let checkX = isNumber(x);\n    const checks = ['a', 'b', 'c', 'd', 'e', 'total'].includes(join);\n    const checkGame = ['1', '3', '5', '10'].includes(String(game));\n    const checkMoney = ['1', '10', '100', '1000'].includes(money);\n\n    if (!checks || list_join.length > 10 || !checkX || !checkMoney || !checkGame) {\n        return false;\n    }\n\n    if (checkJoin) {\n        let arr = list_join.split('');\n        let length = arr.length;\n        for (let i = 0; i < length; i++) {\n            const joinNum = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].includes(arr[i]);\n            if (!joinNum) {\n                return false;\n            }\n        }\n    } else {\n        let arr = list_join.split('');\n        let length = arr.length;\n        for (let i = 0; i < length; i++) {\n            const joinStr = [\"c\", \"l\", \"b\", \"s\"].includes(arr[i]);\n            if (!joinStr) {\n                return false;\n            }\n        }\n\n    }\n\n    return true;\n}\n\nconst betK5D = async (req, res) => {\n    try {\n        let { join, list_join, x, money, game,selectedValues } = req.body;\n        let auth = req.cookies.auth;\n\n        let validate = await validateBet(join, list_join, x, money, game);\n\n        if (!validate) {\n            return res.status(200).json({\n                message: 'Invalid bet',\n                status: false\n            });\n        }\n\n        const [k5DNow] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n        const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money`,`win_wallet` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        console.log(k5DNow,user,'data')\n        if (k5DNow.length < 1 || user.length < 1) {\n            return res.status(200).json({\n                message: 'Error!',\n                status: false\n            });\n        }\n        let userInfo = user[0];\n        let period = k5DNow[0];\n\n        let date = new Date();\n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n        let id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n\n        let total = money * x * (String(list_join).split('').length);\n        let fee = total * 0.03;\n        let price = total - fee;\n\n      \n        let check = userInfo.money+userInfo.win_wallet - total;\n        if (check >= 0) {\n            let finalWinWallet = userInfo.win_wallet;\n            let finalWallet = userInfo.money;\n    \n            finalWallet = finalWallet - total;\n    \n            if(finalWallet<0){\n             finalWinWallet = finalWinWallet + finalWallet ;\n             finalWallet = 0 ;\n            }    \n            let timeNow = Date.now();\n            let sqlvalues;\n\n            if (selectedValues.length > 1) {\n              // If multiple selected values, map through and build the array of values\n              sqlvalues = selectedValues.map(selected => [\n                ++id_product, // Incrementing id_product\n                userInfo.phone, \n                userInfo.code, \n                userInfo.invite, \n                period.period, \n                userInfo.level, \n                money * x, \n                money * x * 0.97, \n                x, \n                money * x * 0.03, \n                game, \n                join, \n                selected, // This seems like a variable coming from selectedValues\n                0, // Status\n                timeNow // Timestamp\n              ]);\n            } else {\n              // Single entry case, still wrap in an array for consistency\n              sqlvalues = [[\n                id_product, \n                userInfo.phone, \n                userInfo.code, \n                userInfo.invite, \n                period.period, \n                userInfo.level, \n                total, \n                price, \n                x, \n                fee, \n                game, \n                join, \n                list_join, \n                0, // Status\n                timeNow // Timestamp\n              ]];\n            }\n            \n            // Construct the SQL query with placeholders\n            const numRows = sqlvalues.length;\n            const placeholders = sqlvalues.map(() => '(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)').join(', ');\n            \n            const sql = `INSERT INTO result_5d (id_product, phone, code, invite, stage, level, money, price, amount, fee, game, join_bet, bet, status, time) VALUES ${placeholders}`;\n            \n            // Flatten the sqlvalues array for binding\n            const flattenedValues = sqlvalues.flat();\n            \n            try {\n              await connection.execute(sql, flattenedValues);\n              console.log('Rows inserted successfully');\n            } catch (error) {\n              console.error('Error inserting data:', error);\n            }\n            \n            \n            await connection.execute('UPDATE `users` SET `money` = ?,`win_wallet` = ? ,vip_exp = vip_exp + ?WHERE `token` = ? ', [finalWallet,finalWinWallet,money,auth]);\n            const [users] = await connection.query('SELECT `money`, `level`,`win_wallet` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n            await rosesPlus(auth, money * x);\n            const [level] = await connection.query('SELECT * FROM level ');\n            let level0 = level[0];\n            const sql2 = `INSERT INTO roses SET phone = ?,code = ?,invite = ?,f1 = ?,f2 = ?,f3 = ?,f4 = ?,time = ?`;\n            let total_m = total;\n            let f1 = (total_m / 100) * level0.f1;\n            let f2 = (total_m / 100) * level0.f2;\n            let f3 = (total_m / 100) * level0.f3;\n            let f4 = (total_m / 100) * level0.f4;\n            await connection.execute(sql2, [userInfo.phone, userInfo.code, userInfo.invite, f1, f2, f3, f4, timeNow]);\n            return res.status(200).json({\n                message: 'Successful bet',\n                status: true,\n                // data: result,\n                change: users[0].level,\n                money: users[0].money,\n                win_wallet:users[0].win_wallet\n            });\n        } else {\n            return res.status(200).json({\n                message: 'The amount is not enough',\n                status: false\n            });\n        }\n    } catch (error) {\n        if (error) console.log(error);\n    }\n}\n\nconst listOrderOld = async (req, res) => {\n    let { gameJoin, pageno, pageto } = req.body;\n    let auth = req.cookies.auth;\n\n    let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n    if (!checkGame || pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n\n    let game = Number(gameJoin);\n\n    const [k5d] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT ${pageno}, ${pageto} `);\n    const [k5dAll] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = '${game}' `);\n    const [period] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n    if (k5d.length == 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            page: 1,\n            status: false\n        });\n    }\n    if (!pageno || !pageto || !user[0] || !k5d[0] || !period[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: false\n        });\n    }\n    let page = Math.ceil(k5dAll.length / 10);\n    return res.status(200).json({\n        code: 0,\n        msg: \"Get success\",\n        data: {\n            gameslist: k5d,\n        },\n        period: period[0].period,\n        page: page,\n        status: true\n    });\n}\n\nconst GetMyEmerdList = async (req, res) => {\n    let { gameJoin, pageno, pageto } = req.body;\n    let auth = req.cookies.auth;\n\n    let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n    if (!checkGame || pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    let game = Number(gameJoin);\n\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n    const [result_5d] = await connection.query(`SELECT * FROM result_5d WHERE phone = ? AND game = '${game}' ORDER BY id DESC LIMIT ${Number(pageno) + ',' + Number(pageto)}`, [user[0].phone]);\n    const [result_5dAll] = await connection.query(`SELECT * FROM result_5d WHERE phone = ? AND game = '${game}' ORDER BY id DESC `, [user[0].phone]);\n\n    if (!result_5d[0]) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            page: 1,\n            status: false\n        });\n    }\n    if (!pageno || !pageto || !user[0] || !result_5d[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: true\n        });\n    }\n    let page = Math.ceil(result_5dAll.length / 10);\n\n    let datas = result_5d.map((data) => {\n        let { id, phone, code, invite, level, game, ...others } = data;\n        return others;\n    });\n\n    return res.status(200).json({\n        code: 0,\n        msg: \"Get success\",\n        data: {\n            gameslist: datas,\n        },\n        page: page,\n        status: true\n    });\n}\n\nfunction makeid(length) {\n    var result = '';\n    var characters = '0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nconst add5D = async(game) => {\n    try {\n        let join = '';\n        if (game == 1) join = 'k5d'; \n        if (game == 3) join = 'k5d3';\n        if (game == 5) join = 'k5d5';\n        if (game == 10) join = 'k5d10';\n\n        let result2 = makeid(5);\n        let timeNow = Date.now();\n        let [k5D] = await connection.query(`SELECT period FROM 5d WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n        const [setting] = await connection.query('SELECT * FROM `admin` ');\n        let period = k5D[0].period;\n\n        let nextResult = '';\n        if (game == 1) nextResult = setting[0].k5d;\n        if (game == 3) nextResult = setting[0].k5d3;\n        if (game == 5) nextResult = setting[0].k5d5;\n        if (game == 10) nextResult = setting[0].k5d10;\n\n        // console.log(setting[0],'admin setting');\n\n        const [waiting] = await connection.query(\n            `SELECT * FROM result_5d WHERE status = 0 AND level = 0 AND game = '${game}' ORDER BY id ASC `\n          );\n\n        //   console.log(waiting,'current bets');\n\n        let newArr = '';\n        if (nextResult == '-1' && !waiting[1]) {\n            await connection.execute(`UPDATE 5d SET result = ?,status = ? WHERE period = ? AND game = \"${game}\"`, [result2, 1, period]);\n            newArr = '-1';\n        }\n        \n        else if(nextResult == '-1' && waiting[1]){\n            function calculatePayout(waiting, winningString) {\n                let totalPayout = 0;\n                let results = winningString.split('').map(Number); // Convert the string to an array of numbers\n                \n                // Calculate the sum for 'total' category\n                const totalSum = results.reduce((acc, val) => acc + val, 0);\n                \n                for (let bet of waiting) {\n                    let payout = 0;\n                    let betValue = bet.money * bet.amount;\n                    let index = bet.join_bet.charCodeAt(0) - 'a'.charCodeAt(0); // index 0 for 'a', 1 for 'b', etc.\n                    \n                    if (bet.join_bet === 'total') {\n                        if (bet.bet === 'c' && totalSum % 2 === 0) payout = betValue * 2;\n                        else if (bet.bet === 'l' && totalSum % 2 !== 0) payout = betValue * 2;\n                        else if (bet.bet === 'b' && totalSum > 22) payout = betValue * 2;\n                        else if (bet.bet === 's' && totalSum <= 22) payout = betValue * 2;\n                    } else {\n                        let result = results[index];\n                        if (bet.bet === String(result)) payout = betValue * 9;\n                        else if (bet.bet === 'c' && result % 2 === 0) payout = betValue * 2;\n                        else if (bet.bet === 'l' && result % 2 !== 0) payout = betValue * 2;\n                        else if (bet.bet === 'b' && result > 4) payout = betValue * 2;\n                        else if (bet.bet === 's' && result <= 4) payout = betValue * 2;\n                    }\n                    \n                    totalPayout += payout;\n                }\n                \n                return totalPayout;\n            }\n            \n            function findOptimalWinningString(waiting) {\n                const totalReceivedBets = waiting.reduce((acc, bet) => acc + (bet.money * bet.amount), 0);\n                const minRequiredProfit = totalReceivedBets * 0.25; // 25% of total received bets\n                \n                let smallestPayoutOptions = [];\n                let minPayout = Infinity;\n                let zeroPayoutOptions = [];\n            \n                for (let i = 0; i <= 99999; i++) {\n                    let winningString = String(i).padStart(5, '0'); // Generate the 5-digit string\n                    let payout = calculatePayout(waiting, winningString);\n                    let profit = totalReceivedBets - payout;\n            \n                    if (payout === 0) {\n                        zeroPayoutOptions.push(winningString);\n                    } else if (profit >= minRequiredProfit) {\n                        if (payout < minPayout) {\n                            minPayout = payout;\n                            smallestPayoutOptions = [winningString]; // Start a new list with this option\n                        } else if (payout === minPayout) {\n                            smallestPayoutOptions.push(winningString); // Add to the list of smallest payout options\n                        }\n                    }\n                }\n            \n                if (smallestPayoutOptions.length > 0) {\n                    // Randomly select from smallest payout options\n                    return smallestPayoutOptions[Math.floor(Math.random() * smallestPayoutOptions.length)];\n                } else {\n                    // If no valid smallest payout option, randomly select from zero payout options\n                    return zeroPayoutOptions[Math.floor(Math.random() * zeroPayoutOptions.length)];\n                }\n            }\n            \n            const optimalWinningString = findOptimalWinningString(waiting);\n            console.log(\"Optimal Winning String:\", optimalWinningString);\n            await connection.execute(`UPDATE 5d SET result = ?,status = ? WHERE period = ? AND game = ${game}`, [optimalWinningString, 1, period]);\n            \n        }\n        \n        else {\n            let result = '';\n            let arr = nextResult.split('|');\n            let check = arr.length;\n            if (check == 1) {\n                newArr = '-1';\n            } else {\n                for (let i = 1; i < arr.length; i++) {\n                    newArr += arr[i] + '|';\n                }\n                newArr = newArr.slice(0, -1);\n            }\n            result = arr[0];\n            await connection.execute(`UPDATE 5d SET result = ?,status = ? WHERE period = ? AND game = ${game}`, [result, 1, period]);\n        }\n        const sql = `INSERT INTO 5d SET period = ?, result = ?, game = ?, status = ?, time = ?`;\n        await connection.execute(sql, [Number(period) + 1, 0, game, 0, timeNow]);\n\n        if (game == 1) join = 'k5d';\n        if (game == 3) join = 'k5d3';\n        if (game == 5) join = 'k5d5';\n        if (game == 10) join = 'k5d10'; \n\n        await connection.execute(`UPDATE admin SET ${join} = ?`, [newArr]);\n    } catch (error) {\n        if (error) {\n            console.log(error);\n        }\n    }\n}\n\nasync function funHanding(game) {\n    const [k5d] = await connection.query(`SELECT * FROM 5d WHERE status != 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n    let k5dInfo = k5d[0];\n \n    // update ket qua\n    await connection.execute(`UPDATE result_5d SET result = ? WHERE status = 0 AND game = ${game}`, [k5dInfo.result]);\n    let result = String(k5dInfo.result).split('');\n    let a = result[0];\n    let b = result[1];\n    let c = result[2];\n    let d = result[3];\n    let e = result[4];\n    let total = 0;\n    for (let i = 0; i < result.length; i++) {\n        total += Number(result[i]);\n    }\n\n    // xá»­ lÃ½ game a\n    const [joinA] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'a' `);\n    let lengthA = joinA.length;\n    for (let i = 0; i < lengthA; i++) {\n        let info = joinA[i];\n        let sult = info.bet.split('');\n        let check = isNumber(info.bet);\n        if (check) {\n            const joinNum = sult.includes(a);\n            if (!joinNum) {\n                await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n            }\n        }\n        \n    }\n    if (lengthA > 0) {\n        if(a == '0' || a == '1' || a == '2' || a == '3' || a == '4') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'b' `)\n        };\n        if(a == '5' || a == '6' || a == '7' || a == '8' || a == '9') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 's' `)\n        };\n        if(Number(a) % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'l' `)\n        };\n        if(Number(a) % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'a' AND bet = 'c' `)\n        };\n    }\n\n    // xá»­ lÃ½ game b\n    const [joinB] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'b' `);\n    let lengthB = joinB.length;\n    for (let i = 0; i < lengthB; i++) {\n        let info = joinB[i];\n        let sult = info.bet.split('');\n        let check = isNumber(info.bet);\n        if (check) {\n            const joinNum = sult.includes(b);\n            if (!joinNum) {\n                await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n            }\n        }\n        \n    }\n    if (lengthB > 0) {\n        if(b == '0' || b == '1' || b == '2' || b == '3' || b == '4') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'b' `);\n        };\n        if(b == '5' || b == '6' || b == '7' || b == '8' || b == '9') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 's' `);\n        };\n        if(Number(b) % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'l' `);\n        };\n        if(Number(b) % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'b' AND bet = 'c' `);\n        };\n    }\n\n    // xá»­ lÃ½ game c\n    const [joinC] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'c' `);\n    let lengthC = joinC.length;\n    for (let i = 0; i < lengthC; i++) {\n        let info = joinC[i];\n        let sult = info.bet.split('');\n        let check = isNumber(info.bet);\n        if (check) {\n            const joinNum = sult.includes(c);\n            if (!joinNum) {\n                await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n            }\n        }\n        \n    }\n    if (lengthC > 0) {\n        if(c == '0' || c == '1' || c == '2' || c == '3' || c == '4') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'b' `);\n        };\n        if(c == '5' || c == '6' || c == '7' || c == '8' || c == '9') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 's' `);\n        };\n        if(Number(c) % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'l' `);\n        };\n        if(Number(c) % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'c' AND bet = 'c' `);\n        };\n    }\n    \n    // xá»­ lÃ½ game d\n    const [joinD] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'd' `);\n    let lengthD = joinD.length;\n    for (let i = 0; i < lengthD; i++) {\n        let info = joinD[i];\n        let sult = info.bet.split('');\n        let check = isNumber(info.bet);\n        if (check) {\n            const joinNum = sult.includes(d);\n            if (!joinNum) {\n                await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n            }\n        }\n        \n    }\n    if (lengthD > 0) {\n        if(d == '0' || d == '1' || d == '2' || d == '3' || d == '4') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'b' `);\n        };\n        if(d == '5' || d == '6' || d == '7' || d == '8' || d == '9') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 's' `);\n        };\n        if(Number(d) % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'l' `);\n        };\n        if(Number(d) % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'd' AND bet = 'c' `);\n        };\n    }\n\n    // xá»­ lÃ½ game e\n    const [joinE] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'e' `);\n    let lengthE = joinE.length;\n    for (let i = 0; i < lengthE; i++) {\n        let info = joinE[i];\n        let sult = info.bet.split('');\n        let check = isNumber(info.bet);\n        if (check) {\n            const joinNum = sult.includes(e);\n            if (!joinNum) {\n                await connection.execute(`UPDATE result_5d SET status = 2 WHERE id = ? `, [info.id]);\n            }\n        }\n        \n    }\n    if (lengthE > 0) {\n        if(e == '0' || e == '1' || e == '2' || e == '3' || e == '4') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'b' `);\n        };\n        if(e == '5' || e == '6' || e == '7' || e == '8' || e == '9') {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 's' `);\n        };\n        if(Number(e) % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'l' `);\n        };\n        if(Number(e) % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'e' AND bet = 'c' `);\n        };\n    }\n\n    // xá»­ lÃ½ game e\n    const [joinTotal] = await connection.execute(`SELECT id, bet FROM result_5d WHERE status = 0 AND game = ${game} AND join_bet = 'total' `);\n    if (joinTotal.length > 0) {\n        if(total <= 22) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'b' `);\n        };\n        if(total > 22) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 's' `);\n        };\n        if(total % 2 == 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'l' `);\n        };\n        if(total % 2 != 0) {\n            await connection.execute(`UPDATE result_5d SET status = 2 WHERE join_bet = 'total' AND bet = 'c' `);\n        };\n    }\n}\n\nconst handling5D = async(typeid) => {\n\n    let game = Number(typeid);\n\n    await funHanding(game);\n\n    const [order] = await connection.execute(`SELECT id, phone, bet, price, money, fee, amount FROM result_5d WHERE status = 0 AND game = ${game} `);\n    for (let i = 0; i < order.length; i++) {\n        let orders = order[i];\n        let id = orders.id;\n        let phone = orders.phone;\n        let nhan_duoc = 0;\n        let check = isNumber(orders.bet); \n        if (check) {\n            let arr = orders.bet.split('');\n            // let total = (orders.money / arr.length / orders.amount);\n            let total = orders.money;\n            let fee = total * 0.03;\n            let price = total - fee;\n            nhan_duoc += price * 9;\n        } else {\n            nhan_duoc += orders.price * 2;\n        }\n\n        await connection.execute('UPDATE `result_5d` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n        const sql = 'UPDATE `users` SET `win_wallet` = `win_wallet` + ? WHERE `phone` = ? ';\n        await connection.execute(sql, [nhan_duoc, phone]);\n    }\n}\n\n\nmodule.exports = {\n    K5DPage,\n    K5DPage3,\n    K5DPage5,\n    K5DPage10,\n    betK5D,\n    listOrderOld,\n    GetMyEmerdList,\n    add5D,\n    handling5D\n}"],"mappings":"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","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/k3Controller.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const {\n  closeSync\n} = require(\"fs\");\nconst connection = require(\"../config/connectDB\");\nrequire('dotenv').config();\nconst K3Page = async (req, res) => {\n  return res.render(\"bet/k3/k3.ejs\");\n};\nconst isNumber = params => {\n  let pattern = /^[0-9]*\\d$/;\n  return pattern.test(params);\n};\nfunction formateT(params) {\n  let result = params < 10 ? \"0\" + params : params;\n  return result;\n}\nfunction timerJoin(params = '') {\n  let date = '';\n  if (params) {\n    date = new Date(Number(params));\n  } else {\n    date = new Date();\n  }\n  let years = formateT(date.getFullYear());\n  let months = formateT(date.getMonth() + 1);\n  let days = formateT(date.getDate());\n  let hours = formateT(date.getHours());\n  let minutes = formateT(date.getMinutes());\n  let seconds = formateT(date.getSeconds());\n  return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds;\n}\nconst rosesPlus = async (auth, money) => {\n  const [level] = await connection.query('SELECT * FROM level ');\n  let level0 = level[0];\n  const [user] = await connection.query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n  let userInfo = user[0];\n  const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n  if (money >= 10000) {\n    if (f1.length > 0) {\n      let infoF1 = f1[0];\n      let rosesF1 = money / 100 * level0.f1;\n      await connection.query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n      const [f2] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF1.invite]);\n      if (f2.length > 0) {\n        let infoF2 = f2[0];\n        let rosesF2 = money / 100 * level0.f2;\n        await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n        const [f3] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF2.invite]);\n        if (f3.length > 0) {\n          let infoF3 = f3[0];\n          let rosesF3 = money / 100 * level0.f3;\n          await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n          const [f4] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF3.invite]);\n          if (f4.length > 0) {\n            let infoF4 = f4[0];\n            let rosesF4 = money / 100 * level0.f4;\n            await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n          }\n        }\n      }\n    }\n  }\n};\nconst validateBet = async (join, list_join, x, money, game) => {\n  let checkJoin = isNumber(list_join);\n  let checkX = isNumber(x);\n  const checks = ['a', 'b', 'c', 'd', 'e', 'total'].includes(join);\n  const checkGame = ['1', '3', '5', '10'].includes(String(game));\n  const checkMoney = ['1000', '10000', '100000', '1000000'].includes(money);\n  if (!checks || list_join.length > 10 || !checkX || !checkMoney || !checkGame) {\n    return false;\n  }\n  if (checkJoin) {\n    let arr = list_join.split('');\n    let length = arr.length;\n    for (let i = 0; i < length; i++) {\n      const joinNum = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].includes(arr[i]);\n      if (!joinNum) {\n        return false;\n      }\n    }\n  } else {\n    let arr = list_join.split('');\n    let length = arr.length;\n    for (let i = 0; i < length; i++) {\n      const joinStr = [\"c\", \"l\", \"b\", \"s\"].includes(arr[i]);\n      if (!joinStr) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\nconst betK3 = async (req, res) => {\n  try {\n    let {\n      listJoin,\n      game,\n      gameJoin,\n      xvalue,\n      money\n    } = req.body;\n    let auth = req.cookies.auth;\n\n    // let validate = await validateBet(join, list_join, x, money, game);\n\n    // if (!validate) {\n    //     return res.status(200).json({\n    //         message: 'Äáº·t cÆ°á»£c khÃ´ng há»£p lá»',\n    //         status: false\n    //     });\n    // }\n\n    const [k3Now] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money`,`win_wallet` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n    if (k3Now.length < 1 || user.length < 1) {\n      return res.status(200).json({\n        message: 'Error!',\n        status: false\n      });\n    }\n    let userInfo = user[0];\n    let period = k3Now[0];\n    let date = new Date();\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n    let id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n    let total = 0;\n    if (gameJoin == 1) {\n      total = money * xvalue * String(listJoin).split(',').length;\n    } else if (gameJoin == 2) {\n      let twoSame = listJoin.split('@')[0]; // Chá»n 2 sá» phÃ¹ há»£p\n      let motDuyNhat = listJoin.split('@')[1]; // Chá»n má»t cáº·p sá» duy nháº¥t\n      if (twoSame.length > 0) {\n        twoSame = twoSame.split(',').length;\n      }\n      let lengthArr = 0;\n      let count = 0;\n      if (motDuyNhat.length > 0) {\n        let arr = motDuyNhat.split('&');\n        for (let i = 0; i < arr.length; i++) {\n          motDuyNhat = arr[i].split('|');\n          count = motDuyNhat[1].split(',').length;\n        }\n        lengthArr = arr.length;\n        count = count;\n      }\n      total = money * xvalue * (lengthArr * count) + twoSame * money * xvalue;\n    } else if (gameJoin == 3) {\n      let baDuyNhat = listJoin.split('@')[0]; // Chá»n 3 sá» duy nháº¥t\n      let countBaDuyNhat = 0;\n      if (baDuyNhat.length > 0) {\n        countBaDuyNhat = baDuyNhat.split(',').length;\n      }\n      let threeSame = listJoin.split('@')[1].length; // Chá»n 3 sá» giá»ng nhau\n      total = money * xvalue * countBaDuyNhat + threeSame * money * xvalue;\n    } else if (gameJoin == 4) {\n      let threeNumberUnlike = listJoin.split('@')[0]; // Chá»n 3 sá» duy nháº¥t\n      let twoLienTiep = listJoin.split('@')[1]; // Chá»n 3 sá» liÃªn tiáº¿p\n      let twoNumberUnlike = listJoin.split('@')[2]; // Chá»n 3 sá» duy nháº¥t\n\n      let threeUn = 0;\n      if (threeNumberUnlike.length > 0) {\n        let arr = threeNumberUnlike.split(',').length;\n        if (arr <= 4) {\n          threeUn += xvalue * (money * arr);\n        }\n        if (arr == 5) {\n          threeUn += xvalue * (money * arr) * 2;\n        }\n        if (arr == 6) {\n          threeUn += xvalue * (money * 5) * 4;\n        }\n      }\n      let twoUn = 0;\n      if (twoNumberUnlike.length > 0) {\n        let arr = twoNumberUnlike.split(',').length;\n        if (arr <= 3) {\n          twoUn += xvalue * (money * arr);\n        }\n        if (arr == 4) {\n          twoUn += xvalue * (money * arr) * 1.5;\n        }\n        if (arr == 5) {\n          twoUn += xvalue * (money * arr) * 2;\n        }\n        if (arr == 6) {\n          twoUn += xvalue * (money * arr * 2.5);\n        }\n      }\n      let UnlienTiep = 0;\n      if (twoLienTiep == 'u') {\n        UnlienTiep += xvalue * money;\n      }\n      total = threeUn + twoUn + UnlienTiep;\n    }\n    let fee = total * 0.02;\n    let price = total - fee;\n    let typeGame = '';\n    if (gameJoin == 1) typeGame = 'total';\n    if (gameJoin == 2) typeGame = 'two-same';\n    if (gameJoin == 3) typeGame = 'three-same';\n    if (gameJoin == 4) typeGame = 'unlike';\n    let check = userInfo.money + userInfo.win_wallet - total;\n    if (check >= 0) {\n      let currentWallet = userInfo.money;\n      let currentWinWallet = userInfo.win_wallet;\n      currentWallet = currentWallet - total;\n      if (currentWallet < 0) {\n        currentWinWallet = currentWinWallet + currentWallet;\n        currentWallet = 0;\n      }\n      let timeNow = Date.now();\n      const sql = `INSERT INTO result_k3 SET id_product = ?,phone = ?,code = ?,invite = ?,stage = ?,level = ?,money = ?,price = ?,amount = ?,fee = ?,game = ?,join_bet = ?, typeGame = ?,bet = ?,status = ?,time = ?`;\n      await connection.execute(sql, [id_product, userInfo.phone, userInfo.code, userInfo.invite, period.period, userInfo.level, total, price, xvalue, fee, game, gameJoin, typeGame, listJoin, 0, timeNow]);\n      await connection.execute('UPDATE `users` SET `money` = ?,`win_wallet` = ? ,vip_exp = vip_exp + ?WHERE `token` = ? ', [currentWallet, currentWinWallet, money, auth]);\n      const [users] = await connection.query('SELECT `money`, `level`,`win_wallet` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n      await rosesPlus(auth, total);\n      const [level] = await connection.query('SELECT * FROM level ');\n      let level0 = level[0];\n      const sql2 = `INSERT INTO roses SET phone = ?,code = ?,invite = ?,f1 = ?,f2 = ?,f3 = ?,f4 = ?,time = ?`;\n      let total_m = total;\n      let f1 = total_m / 100 * level0.f1;\n      let f2 = total_m / 100 * level0.f2;\n      let f3 = total_m / 100 * level0.f3;\n      let f4 = total_m / 100 * level0.f4;\n      await connection.execute(sql2, [userInfo.phone, userInfo.code, userInfo.invite, f1, f2, f3, f4, timeNow]);\n      return res.status(200).json({\n        message: 'Bet successfully',\n        status: true,\n        // data: result,\n        change: users[0].level,\n        money: users[0].money,\n        win_wallet: users[0].win_wallet\n      });\n    } else {\n      return res.status(200).json({\n        message: 'The amount is not enough',\n        status: false\n      });\n    }\n  } catch (error) {}\n};\nfunction makeid(length) {\n  var result = '';\n  var characters = '123456';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\nconst addK3 = async game => {\n  try {\n    let join = '';\n    if (game == 1) join = 'k3d';\n    if (game == 3) join = 'k3d3';\n    if (game == 5) join = 'k3d5';\n    if (game == 10) join = 'k3d10';\n    let result2 = makeid(3);\n    let timeNow = Date.now();\n    let [currentBet] = await connection.execute(`SELECT * FROM result_k3 WHERE status = 0 AND game = ${game}`);\n    console.log(currentBet, 'current bets');\n    let [k5D] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n    const [setting] = await connection.query('SELECT * FROM `admin` ');\n    let period = k5D[0].period;\n    let nextResult = '';\n    if (game == 1) nextResult = setting[0].k3d;\n    if (game == 3) nextResult = setting[0].k3d3;\n    if (game == 5) nextResult = setting[0].k3d5;\n    if (game == 10) nextResult = setting[0].k3d10;\n    let newArr = '';\n    if (nextResult == '-1' && !currentBet[1]) {\n      await connection.execute(`UPDATE k3 SET result = ?,status = ? WHERE period = ? AND game = \"${game}\"`, [result2, 1, period]);\n      newArr = '-1';\n    } else if (nextResult == '-1' && currentBet[1]) {\n      const totalBetAmount = currentBet.reduce((sum, bet) => sum + bet.money, 0);\n      const resultString = generateResultString(currentBet, totalBetAmount);\n      const payout = calculatePayout(currentBet, resultString);\n      await connection.execute(`UPDATE k3 SET result = ?,status = ? WHERE period = ? AND game = \"${game}\"`, [resultString, 1, period]);\n      newArr = '-1';\n    } else {\n      let result = '';\n      let arr = nextResult.split('|');\n      let check = arr.length;\n      if (check == 1) {\n        newArr = '-1';\n      } else {\n        for (let i = 1; i < arr.length; i++) {\n          newArr += arr[i] + '|';\n        }\n        newArr = newArr.slice(0, -1);\n      }\n      result = arr[0];\n      await connection.execute(`UPDATE k3 SET result = ?,status = ? WHERE period = ? AND game = ${game}`, [result, 1, period]);\n    }\n    const sql = `INSERT INTO k3 SET period = ?, result = ?, game = ?, status = ?, time = ?`;\n    await connection.execute(sql, [Number(period) + 1, 0, game, 0, timeNow]);\n    if (game == 1) join = 'k3d';\n    if (game == 3) join = 'k3d3';\n    if (game == 5) join = 'k3d5';\n    if (game == 10) join = 'k3d10';\n    await connection.execute(`UPDATE admin SET ${join} = ?`, [newArr]);\n  } catch (error) {\n    if (error) {}\n  }\n};\nasync function funHanding(game) {\n  const [k5d] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n  let k5dInfo = k5d[0];\n\n  // update ket qua\n  await connection.execute(`UPDATE result_k3 SET result = ? WHERE status = 0 AND game = ${game}`, [k5dInfo.result]);\n  let result = String(k5dInfo.result).split('');\n  let total = 0;\n  for (let i = 0; i < result.length; i++) {\n    total += Number(result[i]);\n  }\n\n  // xá»­ lÃ½ game Tá»ng sá»\n  const [totalNumber] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'total' `);\n  let totalN = totalNumber.length;\n  for (let i = 0; i < totalN; i++) {\n    let sult = totalNumber[i].bet.split(',');\n    // let result = sult.includes(String(total));\n    // if (!result) {\n    //     await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [totalNumber[i].id]);\n    // }\n    let lengWin = sult.filter(function (age) {\n      return age == total;\n    });\n    let check1 = false;\n    let check2 = false;\n    let check3 = false;\n    let check4 = false;\n    if (total >= 3 && total <= 10 && sult.includes('s')) {\n      check1 = true;\n    } else {\n      check1 = false;\n    }\n    if (total >= 11 && total <= 18 && sult.includes('b')) {\n      check2 = true;\n    } else {\n      check2 = false;\n    }\n    if (total % 2 == 0 && sult.includes('c')) {\n      check3 = true;\n    } else {\n      check3 = false;\n    }\n    if (total % 2 != 0 && sult.includes('l')) {\n      check4 = true;\n    } else {\n      check4 = false;\n    }\n    if (!check1 && !check2 && !check3 && !check4) {\n      await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [totalNumber[i].id]);\n    }\n    if (lengWin.length >= 1) {\n      await connection.execute(`UPDATE result_k3 SET status = 0 WHERE id = ? `, [totalNumber[i].id]);\n    }\n  }\n\n  // xá»­ lÃ½ game 2 sá» trÃ¹ng nhau\n  const [totaltwoSame] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'two-same' `);\n  let totalTwoSame = totaltwoSame.length;\n  for (let i = 0; i < totalTwoSame; i++) {\n    let sult = totaltwoSame[i].bet.split('@');\n    let id = totaltwoSame[i].id;\n    if (sult[0].length > 0 && sult[1].length > 0) {\n      let array = sult[0].split(',');\n      let kq = String(k5dInfo.result).split('');\n      let kq1 = kq[0] + kq[1];\n      let kq2 = kq[1] + kq[2];\n      let check1 = false;\n      let check2 = false;\n      let array2 = sult[1].split('&');\n      for (let i = 0; i < array2.length; i++) {\n        let newArr = array2[i].split('|')[0];\n        let newArr2 = array2[i].split('|')[1].split(',');\n        let resultA1 = newArr.includes(String(kq1));\n        let resultA2 = newArr.includes(String(kq2));\n        if (!resultA1 && !resultA2) {\n          check1 = true;\n        } else if (resultA1 && !resultA2) {\n          let resultA4 = newArr2.includes(String(kq[2]));\n          if (!resultA4) {\n            check1 = true;\n          }\n        } else if (!resultA1 && resultA2) {\n          let resultA3 = newArr2.includes(String(kq[0]));\n          if (!resultA3) {\n            check1 = true;\n          }\n        }\n      }\n      let result1 = array.includes(String(kq1));\n      let result2 = array.includes(String(kq2));\n      if (!result1 && !result2) {\n        check2 = true;\n      }\n      if (check1 && check2) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    } else if (sult[0].length > 0 && sult[1].length <= 0) {\n      let array = sult[0].split(',');\n      let kq = String(k5dInfo.result).split('');\n      let kq1 = kq[0] + kq[1];\n      let kq2 = kq[1] + kq[2];\n      let result1 = array.includes(String(kq1));\n      let result2 = array.includes(String(kq2));\n      if (!result1 && !result2) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    } else if (sult[0].length <= 0 && sult[1].length > 0) {\n      let kq = String(k5dInfo.result).split('');\n      let kq1 = kq[0] + kq[1];\n      let kq2 = kq[1] + kq[2];\n      let kq3 = kq[0];\n      let kq4 = kq[2];\n      let check = false;\n      let array2 = sult[1].split('&');\n      for (let i = 0; i < array2.length; i++) {\n        let newArr = array2[i].split('|')[0];\n        let newArr2 = array2[i].split('|')[1].split(',');\n        let resultA1 = newArr.includes(String(kq1));\n        let resultA2 = newArr.includes(String(kq2));\n        let resultA3 = newArr2.includes(String(kq3));\n        let resultA4 = newArr2.includes(String(kq4));\n        if (!resultA1 && !resultA2) {\n          if (!resultA3 && !resultA4) {\n            await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n          }\n        } else if (resultA1 && !resultA2) {\n          let resultA4 = newArr2.includes(String(kq[2]));\n          if (resultA4) {\n            check = true;\n          }\n        } else if (!resultA1 && resultA2) {\n          let resultA3 = newArr2.includes(String(kq[0]));\n          if (resultA3) {\n            check = true;\n          }\n        }\n      }\n      if (!check) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    }\n  }\n\n  // xá»­ lÃ½ game 3 sá» trÃ¹ng nhau\n  const [ThreeSame] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'three-same' `);\n  let ThreeSameL = ThreeSame.length;\n  for (let i = 0; i < ThreeSameL; i++) {\n    let sult = ThreeSame[i].bet.split('@');\n    let id = ThreeSame[i].id;\n    if (sult[0].length > 0 && sult[1].length > 0) {\n      let array = sult[0].split(',');\n      let kq = String(k5dInfo.result);\n      let check1 = false;\n      let check2 = false;\n      let resultA1 = array.includes(String(kq));\n      if (!resultA1) {\n        check1 = true;\n      }\n      let result = ['111', '222', '333', '444', '555', '666'].includes(String(kq));\n      if (!result) {\n        check2 = true;\n      }\n      if (check1 && check2) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    } else if (sult[0].length > 0 && sult[1].length <= 0) {\n      let array = sult[0].split(',');\n      let kq = String(k5dInfo.result);\n      let result = array.includes(String(kq));\n      if (!result) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    } else if (sult[0].length <= 0 && sult[1].length > 0) {\n      let kq = String(k5dInfo.result);\n      let result = ['111', '222', '333', '444', '555', '666'].includes(String(kq));\n      if (!result) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    }\n  }\n\n  // xá»­ lÃ½ game 3 sá» khÃ¡c nhau\n  const [Unlike] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'unlike' `);\n  let Unlikes = Unlike.length;\n  for (let i = 0; i < Unlikes; i++) {\n    let sult = Unlike[i].bet.split('@');\n    let id = Unlike[i].id;\n    if (sult[0].length > 1 && sult[1] == 'u' && sult[2].length > 1) {\n      let array = sult[0].split(',');\n      let array2 = sult[2].split(',');\n      let kq = String(k5dInfo.result).split('');\n      let check1 = false;\n      let check2 = false;\n      let check3 = false;\n      for (let i = 0; i < kq.length; i++) {\n        let resultA1 = array.includes(String(kq[i]));\n        if (resultA1) {\n          check1 = true;\n        }\n      }\n      let kq1 = kq[0] + kq[1];\n      let kq2 = kq[1] + kq[2];\n      let kq3 = kq[0] + kq[2];\n      for (let i = 0; i < kq.length; i++) {\n        let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n        let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n        let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n        if (resultA1 || resultA2 || resultA3) {\n          check3 = true;\n        }\n      }\n      for (let i = 0; i < kq.length; i++) {\n        let resultA1 = array2.includes(String(kq[i]));\n        if (resultA1) {\n          check2 = true;\n        }\n      }\n      if (check1 && check2 && check3) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    } else if (sult[0].length > 1 && sult[1] == 'y' && sult[2].length > 1) {\n      let array = sult[0].split(',');\n      let array2 = sult[2].split(',');\n      let kq = String(k5dInfo.result).split('');\n      let check1 = false;\n      let check2 = false;\n      for (let i = 0; i < kq.length; i++) {\n        let resultA1 = array.includes(String(kq[i]));\n        if (resultA1) {\n          check1 = true;\n        }\n      }\n      for (let i = 0; i < kq.length; i++) {\n        let resultA1 = array2.includes(String(kq[i]));\n        if (resultA1) {\n          check2 = true;\n        }\n      }\n      if (check1 && check2) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    } else if (sult[0].length > 1 && sult[1] == 'u' && sult[2].length <= 1) {\n      let array = sult[0].split(',');\n      let array2 = sult[2].split(',');\n      let kq = String(k5dInfo.result).split('');\n      let check1 = false;\n      let check2 = false;\n      for (let i = 0; i < kq.length; i++) {\n        let resultA1 = array.includes(String(kq[i]));\n        if (resultA1) {\n          check1 = true;\n        }\n      }\n      let kq1 = kq[0] + kq[1];\n      let kq2 = kq[1] + kq[2];\n      let kq3 = kq[0] + kq[2];\n      for (let i = 0; i < kq.length; i++) {\n        let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n        let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n        let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n        if (resultA1 || resultA2 || resultA3) {\n          check2 = true;\n        }\n      }\n      if (check1 && check2) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    } else if (sult[0].length <= 1 && sult[1] == 'u' && sult[2].length > 1) {\n      let array = sult[0].split(',');\n      let array2 = sult[2].split(',');\n      let kq = String(k5dInfo.result).split('');\n      let check1 = false;\n      let check2 = false;\n      for (let i = 0; i < kq.length; i++) {\n        let resultA1 = array2.includes(String(kq[i]));\n        if (resultA1) {\n          check1 = true;\n        }\n      }\n      let kq1 = kq[0] + kq[1];\n      let kq2 = kq[1] + kq[2];\n      let kq3 = kq[0] + kq[2];\n      for (let i = 0; i < kq.length; i++) {\n        let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n        let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n        let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n        if (resultA1 || resultA2 || resultA3) {\n          check2 = true;\n        }\n      }\n      if (check1 && check2) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    } else if (sult[0].length > 1 && sult[1] == 'y' && sult[2].length <= 1) {\n      let array = sult[0].split(',');\n      let array2 = sult[2].split(',');\n      let kq = String(k5dInfo.result).split('');\n      let check1 = 0;\n      let checkedElements = new Set(); // To track unique elements\n\n      for (let i = 0; i < kq.length; i++) {\n        let currentElement = String(kq[i]);\n\n        // Check if the array includes the element and it's not already checked\n        if (array.includes(currentElement) && !checkedElements.has(currentElement)) {\n          check1++;\n          checkedElements.add(currentElement); // Mark the element as checked\n        }\n      }\n      if (check1 < 3) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    } else if (sult[0].length <= 1 && sult[1] == 'u' && sult[2].length <= 1) {\n      let array = sult[0].split(',');\n      let array2 = sult[2].split(',');\n      // let kq = String(k5dInfo.result).split('');\n      // let check1 = false;\n\n      // let kq1 = kq[0] + kq[1];\n      // let kq2 = kq[1] + kq[2];\n      // let kq3 = kq[0] + kq[2];\n      // for (let i = 0; i < kq.length; i++) {\n      //     let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n      //     let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n      //     let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n      //     if (resultA1 || resultA2 || resultA3) {\n      //         check1 = true;\n      //     }\n      // }\n\n      if (isConsecutive(String(k5dInfo.result)) == false) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    } else if (sult[0].length <= 1 && sult[1] == 'y' && sult[2].length > 1) {\n      let array = sult[0].split(',');\n      let array2 = sult[2].split(',');\n      let kq = String(k5dInfo.result).split('');\n      let check1 = 0;\n      let checkedElements = new Set(); // To track unique elements\n\n      for (let i = 0; i < kq.length; i++) {\n        let currentElement = String(kq[i]);\n\n        // Check if the array includes the element and it's not already checked\n        if (array2.includes(currentElement) && !checkedElements.has(currentElement)) {\n          check1++;\n          checkedElements.add(currentElement); // Mark the element as checked\n        }\n      }\n      if (check1 < 2) {\n        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n      }\n    }\n  }\n}\nconst priceGet = {\n  total: {\n    't3': 207.36,\n    't4': 69.12,\n    't5': 34.56,\n    't6': 20.74,\n    't7': 13.83,\n    't8': 9.88,\n    't9': 8.3,\n    't10': 7.68,\n    't11': 7.68,\n    't12': 8.3,\n    't13': 9.88,\n    't14': 13.83,\n    't15': 20.74,\n    't16': 34.56,\n    't17': 69.12,\n    't18': 207.36,\n    'b': 1.92,\n    's': 1.92,\n    'l': 1.92,\n    'c': 1.92\n  },\n  two: {\n    twoSame: 13.83,\n    twoD: 69.12\n  },\n  three: {\n    threeD: 207.36,\n    threeSame: 34.56\n  },\n  unlike: {\n    unlikeThree: 34.56,\n    threeL: 8.64,\n    unlikeTwo: 6.91\n  }\n};\nfunction calculatePayout(currentBet, result) {\n  let payout = 0;\n  currentBet.forEach((val, index) => {\n    const {\n      typeGame,\n      bet,\n      money\n    } = val;\n    let amount = money;\n    const totalSum = result.split('').reduce((sum, num) => sum + parseInt(num), 0);\n    switch (typeGame) {\n      case 'total':\n        if (bet === `${totalSum}`) {\n          payout += amount * priceGet.total[`t${bet}`];\n        } else if (bet === 'b' && totalSum > 10) {\n          payout += amount * priceGet.total['b'];\n        } else if (bet === 's' && totalSum <= 10) {\n          payout += amount * priceGet.total['s'];\n        } else if (bet === 'l' && totalSum % 2 !== 0) {\n          payout += amount * priceGet.total['l'];\n        } else if (bet === 'c' && totalSum % 2 === 0) {\n          payout += amount * priceGet.total['c'];\n        }\n        break;\n      case 'two-same':\n        let arr = bet.split('@')[0].split(',');\n        if (arr.some(element => {\n          const digits = element.split('');\n          return digits.every(digit => {\n            const mainCount = result.split(digit).length - 1;\n            const elementCount = element.split(digit).length - 1;\n            return mainCount >= elementCount;\n          });\n        })) {\n          payout += amount * priceGet.two.twoSame;\n          //  else if (pairCount === 3 && betValue.length === 4) { \n          //     payout += amount * priceGet.two.twoD;\n          // }\n        }\n        break;\n      case 'three-same':\n        if (bet.split('@')[0].split(',').includes(result)) {\n          payout += amount * priceGet.three.threeD;\n        } else if (bet === '@3' && result[0] === result[1] && result[1] === result[2]) {\n          payout += amount * priceGet.three.threeSame;\n        }\n        break;\n      case 'unlike':\n        if (bet.startsWith('@y@') && new Set(result).size >= 2 && result.split('').filter(num => bet.split('@')[2].split(',').includes(num)).length >= 2) {\n          payout += amount * priceGet.unlike.unlikeTwo;\n        } else if (bet.includes('@u@') && isConsecutive(result)) {\n          payout += amount * priceGet.unlike.threeL;\n        } else if (bet.includes('@') && bet[bet.length - 1] === '@' && bet[bet.length - 2] === 'y' && bet[bet.length - 3] === '@' && new Set(result).size === 3 && result.split('').every(num => bet.split('@')[0].split(',').includes(num))) {\n          payout += amount * priceGet.unlike.unlikeThree;\n        }\n        break;\n      default:\n        break;\n    }\n  });\n  console.log(payout, 'calculated payout for', result);\n  return payout;\n}\nfunction isConsecutive(result) {\n  const sortedResult = result.split('').map(Number).sort((a, b) => a - b);\n  return sortedResult[2] - sortedResult[1] === 1 && sortedResult[1] - sortedResult[0] === 1;\n}\nfunction generateResultString(currentBet, totalBetAmount) {\n  const possibleResults = [];\n  const zeropayouts = [];\n  const diceOptions = ['1', '2', '3', '4', '5', '6'];\n  for (let i = 0; i < diceOptions.length; i++) {\n    for (let j = 0; j < diceOptions.length; j++) {\n      for (let k = 0; k < diceOptions.length; k++) {\n        const resultString = `${diceOptions[i]}${diceOptions[j]}${diceOptions[k]}`;\n        const potentialPayout = calculatePayout(currentBet, resultString);\n        const profitMargin = (totalBetAmount - potentialPayout) / totalBetAmount * 100;\n        if (potentialPayout == 0) {\n          zeropayouts.push(resultString);\n        } else if (profitMargin >= 25) {\n          possibleResults.push(resultString);\n        }\n      }\n    }\n  }\n  if (possibleResults.length > 0) {\n    return possibleResults[Math.floor(Math.random() * possibleResults.length)];\n  }\n  if (zeropayouts.length > 0) {\n    return zeropayouts[Math.floor(Math.random() * zeropayouts.length)];\n  }\n  let fallbackResult = '';\n  let minPayout = Infinity;\n  for (let i = 0; i < diceOptions.length; i++) {\n    for (let j = 0; j < diceOptions.length; j++) {\n      for (let k = 0; k < diceOptions.length; k++) {\n        const resultString = `${diceOptions[i]}${diceOptions[j]}${diceOptions[k]}`;\n        const potentialPayout = calculatePayout(currentBet, resultString);\n        if (potentialPayout === 0) {\n          return resultString;\n        }\n        if (potentialPayout < minPayout) {\n          minPayout = potentialPayout;\n          fallbackResult = resultString;\n        }\n      }\n    }\n  }\n  return fallbackResult;\n}\nasync function plusMoney(game) {\n  const [order] = await connection.execute(`SELECT id, phone, bet, price, money, fee, amount, result, typeGame FROM result_k3 WHERE status = 0 AND game = ${game} `);\n  for (let i = 0; i < order.length; i++) {\n    let orders = order[i];\n    let phone = orders.phone;\n    let id = orders.id;\n    let nhan_duoc = 0;\n    let result = orders.result;\n    if (orders.typeGame == \"total\") {\n      let arr = orders.bet.split(',');\n      let totalResult = orders.result.split('');\n      let totalResult2 = 0;\n      for (let i = 0; i < 3; i++) {\n        totalResult2 += Number(totalResult[i]);\n      }\n      // let total = (orders.money / arr.length / orders.amount);\n      let total = orders.money;\n      let fee = total * 0.03;\n      let price = total - fee;\n      let lengWin = arr.filter(function (age) {\n        return age == totalResult2;\n      });\n      let lengWin2 = arr.filter(function (age) {\n        return !isNumber(age);\n      });\n      if (totalResult2 % 2 == 0 && lengWin2.includes('c')) {\n        console.log('condition1');\n        nhan_duoc += price * 1.92;\n      }\n      if (totalResult2 % 2 != 0 && lengWin2.includes('l')) {\n        console.log('condition2');\n        nhan_duoc += price * 1.92;\n      }\n      if (totalResult2 >= 11 && totalResult2 <= 18 && lengWin2.includes('b')) {\n        console.log('condition3');\n        nhan_duoc += price * 1.92;\n      }\n      if (totalResult2 >= 3 && totalResult2 <= 11 && lengWin2.includes('s')) {\n        nhan_duoc += price * 1.92;\n        console.log('condition4');\n      }\n      let get = 0;\n      switch (lengWin[0]) {\n        case '3':\n          get = 207.36;\n          console.log('condition5');\n          break;\n        case '4':\n          get = 69.12;\n          console.log('condition6');\n          break;\n        case '5':\n          get = 34.56;\n          console.log('condition7');\n          break;\n        case '6':\n          get = 20.74;\n          console.log('condition8');\n          break;\n        case '7':\n          get = 13.83;\n          console.log('condition9');\n          break;\n        case '8':\n          get = 9.88;\n          console.log('condition10');\n          break;\n        case '9':\n          console.log('condition11');\n          get = 8.3;\n          break;\n        case '10':\n          console.log('condition12');\n          get = 7.68;\n          break;\n        case '11':\n          get = 7.68;\n          console.log('condition13');\n          break;\n        case '12':\n          get = 8.3;\n          console.log('condition14');\n          break;\n        case '13':\n          get = 9.88;\n          console.log('condition15');\n          break;\n        case '14':\n          get = 13.83;\n          console.log('condition16');\n          break;\n        case '15':\n          get = 20.74;\n          console.log('condition17');\n          break;\n        case '16':\n          get = 34.56;\n          console.log('condition18');\n          break;\n        case '17':\n          get = 69.12;\n          console.log('condition19');\n          break;\n        case '18':\n          get = 207.36;\n          console.log('condition20');\n          break;\n      }\n      nhan_duoc += price * get;\n      await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n      const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n      await connection.execute(sql, [nhan_duoc, phone]);\n    }\n    nhan_duoc = 0;\n    if (orders.typeGame == \"two-same\") {\n      let kq = result.split('');\n      let kq1 = kq[0] + kq[1];\n      let kq2 = kq[1] + kq[2];\n      let array = orders.bet.split('@');\n      let arr1 = array[0].split(',');\n      let arr2 = array[1];\n      let arr3 = array[1].split('&');\n      for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] != \"\") {\n          let check1 = arr1[i].includes(kq1);\n          let check2 = arr1[i].includes(kq2);\n          if (check1 || check2) {\n            let lengthArr = 0;\n            let count = 0;\n            if (arr2.length > 0) {\n              let arr = arr2.split('&');\n              for (let i = 0; i < arr.length; i++) {\n                arr2 = arr[i].split('|');\n                count = arr2[1].split(',').length;\n              }\n              lengthArr = arr.length;\n              count = count;\n            }\n            let total = orders.money / orders.amount / (lengthArr + arr1.length);\n            nhan_duoc += total * 12.83;\n            console.log('condition21');\n          }\n        }\n      }\n      arr2 = array[1];\n      for (let i = 0; i < arr3.length; i++) {\n        if (arr3[i] != \"\") {\n          let files = arr3[i].split('|');\n          let check1 = files[0].includes(kq1);\n          let check2 = files[0].includes(kq2);\n          if (check1 || check2) {\n            let lengthArr = 0;\n            let count = 0;\n            if (arr2.length > 0) {\n              let arr = arr2.split('&');\n              for (let i = 0; i < arr.length; i++) {\n                arr2 = arr[i].split('|');\n                count = arr2[1].split(',').length;\n              }\n              lengthArr = arr.length;\n              count = count;\n            }\n            let bale = 0;\n            for (let i = 0; i < arr1.length; i++) {\n              if (arr1[i] != \"\") {\n                bale = arr1.length;\n              }\n            }\n            let total = orders.money / orders.amount / (lengthArr + bale);\n            nhan_duoc += total * 69.12;\n            console.log('condition22');\n          }\n        }\n      }\n      nhan_duoc -= orders.fee;\n      await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n      const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n      await connection.execute(sql, [nhan_duoc, phone]);\n    }\n    nhan_duoc = 0;\n    if (orders.typeGame == \"three-same\") {\n      let kq = result;\n      let array = orders.bet.split('@');\n      let arr1 = array[0].split(',');\n      let arr2 = array[1];\n      for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] != \"\") {\n          let check1 = arr1[i].includes(kq);\n          let bala = 0;\n          if (arr2 != \"\") {\n            bala = 1;\n          }\n          if (check1) {\n            let total = orders.money / (arr1.length + bala) / orders.amount;\n            nhan_duoc += total * 207.36 - orders.fee;\n            console.log('condition23');\n          }\n        }\n      }\n      if (arr2 != \"\") {\n        let bala = 0;\n        for (let i = 0; i < arr1.length; i++) {\n          if (arr1[i] != \"\") {\n            bala = arr1.length;\n          }\n        }\n        let total = orders.money / (1 + bala) / orders.amount;\n        nhan_duoc += total * 34.56 - orders.fee;\n        console.log('condition24');\n      }\n      await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n      const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n      await connection.execute(sql, [nhan_duoc, phone]);\n    }\n    nhan_duoc = 0;\n    if (orders.typeGame == \"unlike\") {\n      console.log(orders, 'unlike types win bets');\n      let sult = orders.bet.split('@');\n      let total = orders.money;\n      if (sult[0].length > 1 && sult[1] == 'y' && sult[2].length <= 1) {\n        nhan_duoc += (total - orders.fee) * 34.56;\n      } else if (sult[0].length <= 1 && sult[1] == 'y' && sult[2].length > 1) {\n        nhan_duoc += (total - orders.fee) * 6.91;\n      } else if (sult[0].length <= 1 && sult[1] == 'u' && sult[2].length <= 1) {\n        nhan_duoc += (total - orders.fee) * 8.64;\n      }\n      // let kq = result.split('');\n      // let array = orders.bet.split('@');\n      // let arr1 = array[0].split(',');\n      // let arr2 = array[1];\n      // let arr3 = array[2].split(',');\n\n      // for (let i = 0; i < arr1.length; i++) {\n      //     if (arr1[i] != \"\") {\n      //         let check1 = kq.includes(arr1[i]);\n      //         let bala = 0;\n      //         let bala2 = 0;\n      //         for (let i = 0; i < arr3.length; i++) {\n      //             if (arr3[i].length != \"\") {\n      //                 bala = arr3.length;\n      //             }\n      //         }\n      //         if (arr2 == \"u\") {\n      //             bala2 = 1;\n      //         }\n      //         if (!check1) {\n      //             let total = (orders.money / (arr1.length + bala + bala2) / orders.amount);\n      //             nhan_duoc += total * 34.56 - orders.fee;\n      //             console.log('condition25')\n      //             if (arr2 == \"u\") {\n      //                 let total = (orders.money / (1 + bala + bala2) / orders.amount);\n      //                 nhan_duoc += (total - orders.fee) * 8.64;\n      //                 console.log('condition26')\n      //             }\n      //         }\n      //     }\n      // }\n      // if (arr2 == \"u\") {\n      //     let bala = 0;\n      //     let bala2 = 0;\n      //     for (let i = 0; i < arr1.length; i++) {\n      //         if (arr1[i] != \"\") {\n      //             bala = arr1.length;\n      //         }\n      //     }\n      //     for (let i = 0; i < arr3.length; i++) {\n      //         if (arr3[i].length != \"\") {\n      //             bala2 = arr3.length;\n      //         }\n      //     }\n      //     let total = (orders.money / (1 + bala + bala2) / orders.amount);\n      //     nhan_duoc += (total - orders.fee) * 8.64;\n      //     console.log('condition27')\n      // }\n      // for (let i = 0; i < arr3.length; i++) {\n      //     if (arr1[i] != \"\") {\n      //         let check1 = kq.includes(arr3[i]);\n      //         let bala = 0;\n      //         for (let i = 0; i < arr1.length; i++) {\n      //             if (arr1[i].length != \"\") {\n      //                 bala = arr1.length;\n      //             }\n      //         }\n      //         if (!check1) {\n      //             let total = (orders.money / (arr3.length + bala) / orders.amount);\n      //             nhan_duoc += total * 6.91 - orders.fee;\n      //             console.log('condition28')\n      //         }\n      //     }\n      // }\n      await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n      const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n      await connection.execute(sql, [nhan_duoc, phone]);\n    }\n  }\n}\nconst handlingK3 = async typeid => {\n  let game = Number(typeid);\n  await funHanding(game);\n  await plusMoney(game);\n};\nconst listOrderOld = async (req, res) => {\n  let {\n    gameJoin,\n    pageno,\n    pageto\n  } = req.body;\n  let auth = req.cookies.auth;\n  let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n  if (!checkGame || pageno < 0 || pageto < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n  let game = Number(gameJoin);\n  const [k5d] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT ${pageno}, ${pageto} `);\n  const [k5dAll] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = '${game}' `);\n  const [period] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n  if (k5d.length == 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      page: 1,\n      status: false\n    });\n  }\n  if (!pageno || !pageto || !user[0] || !k5d[0] || !period[0]) {\n    return res.status(200).json({\n      message: 'Error!',\n      status: false\n    });\n  }\n  let page = Math.ceil(k5dAll.length / 10);\n  return res.status(200).json({\n    code: 0,\n    msg: \"Get success\",\n    data: {\n      gameslist: k5d\n    },\n    period: period[0].period,\n    page: page,\n    status: true\n  });\n};\nconst GetMyEmerdList = async (req, res) => {\n  let {\n    gameJoin,\n    pageno,\n    pageto\n  } = req.body;\n  let auth = req.cookies.auth;\n  let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n  if (!checkGame || pageno < 0 || pageto < 0) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      status: false\n    });\n  }\n  let game = Number(gameJoin);\n  const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n  const [result_5d] = await connection.query(`SELECT * FROM result_k3 WHERE phone = ? AND game = '${game}' ORDER BY id DESC LIMIT ${Number(pageno) + ',' + Number(pageto)}`, [user[0].phone]);\n  const [result_5dAll] = await connection.query(`SELECT * FROM result_k3 WHERE phone = ? AND game = '${game}' ORDER BY id DESC `, [user[0].phone]);\n  if (!result_5d[0]) {\n    return res.status(200).json({\n      code: 0,\n      msg: \"No more data\",\n      data: {\n        gameslist: []\n      },\n      page: 1,\n      status: false\n    });\n  }\n  if (!pageno || !pageto || !user[0] || !result_5d[0]) {\n    return res.status(200).json({\n      message: 'Error!',\n      status: true\n    });\n  }\n  let page = Math.ceil(result_5dAll.length / 10);\n  let datas = result_5d.map(data => {\n    let {\n      id,\n      phone,\n      code,\n      invite,\n      level,\n      game,\n      ...others\n    } = data;\n    return others;\n  });\n  return res.status(200).json({\n    code: 0,\n    msg: \"Get success\",\n    data: {\n      gameslist: datas\n    },\n    page: page,\n    status: true\n  });\n};\nmodule.exports = {\n  K3Page,\n  betK3,\n  addK3,\n  handlingK3,\n  listOrderOld,\n  GetMyEmerdList\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["closeSync","require","connection","config","K3Page","req","res","render","isNumber","params","pattern","test","formateT","result","timerJoin","date","Date","Number","years","getFullYear","months","getMonth","days","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","rosesPlus","auth","money","level","query","level0","user","userInfo","f1","invite","length","infoF1","rosesF1","phone","f2","infoF2","rosesF2","f3","infoF3","rosesF3","f4","infoF4","rosesF4","validateBet","join","list_join","x","game","checkJoin","checkX","checks","includes","checkGame","String","checkMoney","arr","split","i","joinNum","joinStr","betK3","listJoin","gameJoin","xvalue","body","cookies","k3Now","status","json","message","period","id_product","Math","floor","random","total","twoSame","motDuyNhat","lengthArr","count","baDuyNhat","countBaDuyNhat","threeSame","threeNumberUnlike","twoLienTiep","twoNumberUnlike","threeUn","twoUn","UnlienTiep","fee","price","typeGame","check","win_wallet","currentWallet","currentWinWallet","timeNow","now","sql","execute","code","users","sql2","total_m","change","error","makeid","characters","charactersLength","charAt","addK3","result2","currentBet","console","log","k5D","setting","nextResult","k3d","k3d3","k3d5","k3d10","newArr","totalBetAmount","reduce","sum","bet","resultString","generateResultString","payout","calculatePayout","slice","funHanding","k5d","k5dInfo","totalNumber","totalN","sult","lengWin","filter","age","check1","check2","check3","check4","id","totaltwoSame","totalTwoSame","array","kq","kq1","kq2","array2","newArr2","resultA1","resultA2","resultA4","resultA3","result1","kq3","kq4","ThreeSame","ThreeSameL","Unlike","Unlikes","checkedElements","Set","currentElement","has","add","isConsecutive","priceGet","two","twoD","three","threeD","unlike","unlikeThree","threeL","unlikeTwo","forEach","val","index","amount","totalSum","num","parseInt","some","element","digits","every","digit","mainCount","elementCount","startsWith","size","sortedResult","map","sort","a","b","possibleResults","zeropayouts","diceOptions","j","k","potentialPayout","profitMargin","push","fallbackResult","minPayout","Infinity","plusMoney","order","orders","nhan_duoc","totalResult","totalResult2","lengWin2","get","arr1","arr2","arr3","files","bale","bala","handlingK3","typeid","listOrderOld","pageno","pageto","msg","data","gameslist","k5dAll","page","ceil","GetMyEmerdList","result_5d","result_5dAll","datas","others","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["k3Controller.js"],"sourcesContent":["const { closeSync } = require(\"fs\");\nconst connection = require(\"../config/connectDB\");\nrequire('dotenv').config();\n\nconst K3Page = async (req, res) => {\n    return res.render(\"bet/k3/k3.ejs\");\n}\n\nconst isNumber = (params) => {\n    let pattern = /^[0-9]*\\d$/;\n    return pattern.test(params);\n}\n\nfunction formateT(params) {\n    let result = (params < 10) ? \"0\" + params : params;\n    return result;\n}\n\nfunction timerJoin(params = '') {\n    let date = '';\n    if (params) {\n        date = new Date(Number(params));\n    } else {\n        date = new Date();\n    }\n    let years = formateT(date.getFullYear());\n    let months = formateT(date.getMonth() + 1);\n    let days = formateT(date.getDate());\n\n    let hours = formateT(date.getHours());\n    let minutes = formateT(date.getMinutes());\n    let seconds = formateT(date.getSeconds());\n    return years + '-' + months + '-' + days + ' ' + hours + ':' + minutes + ':' + seconds;\n}\n\nconst rosesPlus = async (auth, money) => {\n    const [level] = await connection.query('SELECT * FROM level ');\n    let level0 = level[0];\n\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n    let userInfo = user[0];\n    const [f1] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [userInfo.invite]);\n    if (money >= 10000) {\n        if (f1.length > 0) {\n            let infoF1 = f1[0];\n            let rosesF1 = (money / 100) * level0.f1;\n            await connection.query('UPDATE users SET money = money + ?, roses_f1 = roses_f1 + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF1, rosesF1, rosesF1, rosesF1, infoF1.phone]);\n            const [f2] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF1.invite]);\n            if (f2.length > 0) {\n                let infoF2 = f2[0];\n                let rosesF2 = (money / 100) * level0.f2;\n                await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF2, rosesF2, rosesF2, infoF2.phone]);\n                const [f3] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF2.invite]);\n                if (f3.length > 0) {\n                    let infoF3 = f3[0];\n                    let rosesF3 = (money / 100) * level0.f3;\n                    await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF3, rosesF3, rosesF3, infoF3.phone]);\n                    const [f4] = await connection.query('SELECT `phone`, `code`, `invite`, `rank` FROM users WHERE code = ? AND veri = 1  LIMIT 1 ', [infoF3.invite]);\n                    if (f4.length > 0) {\n                        let infoF4 = f4[0];\n                        let rosesF4 = (money / 100) * level0.f4;\n                        await connection.query('UPDATE users SET money = money + ?, roses_f = roses_f + ?, roses_today = roses_today + ? WHERE phone = ? ', [rosesF4, rosesF4, rosesF4, infoF4.phone]);\n                    }\n                }\n            }\n\n        }\n    }\n}\n\nconst validateBet = async (join, list_join, x, money, game) => {\n    let checkJoin = isNumber(list_join);\n    let checkX = isNumber(x);\n    const checks = ['a', 'b', 'c', 'd', 'e', 'total'].includes(join);\n    const checkGame = ['1', '3', '5', '10'].includes(String(game));\n    const checkMoney = ['1000', '10000', '100000', '1000000'].includes(money);\n\n    if (!checks || list_join.length > 10 || !checkX || !checkMoney || !checkGame) {\n        return false;\n    }\n\n    if (checkJoin) {\n        let arr = list_join.split('');\n        let length = arr.length;\n        for (let i = 0; i < length; i++) {\n            const joinNum = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'].includes(arr[i]);\n            if (!joinNum) {\n                return false;\n            }\n        }\n    } else {\n        let arr = list_join.split('');\n        let length = arr.length;\n        for (let i = 0; i < length; i++) {\n            const joinStr = [\"c\", \"l\", \"b\", \"s\"].includes(arr[i]);\n            if (!joinStr) {\n                return false;\n            }\n        }\n\n    }\n\n    return true;\n}\n\nconst betK3 = async (req, res) => {\n    try {\n        let { listJoin, game, gameJoin, xvalue, money } = req.body;\n        let auth = req.cookies.auth;\n\n        // let validate = await validateBet(join, list_join, x, money, game);\n\n        // if (!validate) {\n        //     return res.status(200).json({\n        //         message: 'Äáº·t cÆ°á»£c khÃ´ng há»£p lá»',\n        //         status: false\n        //     });\n        // }\n\n        const [k3Now] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n        const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money`,`win_wallet` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n        if (k3Now.length < 1 || user.length < 1) {\n            return res.status(200).json({\n                message: 'Error!',\n                status: false\n            });\n        }\n        let userInfo = user[0];\n        let period = k3Now[0];\n\n        let date = new Date();\n        let years = formateT(date.getFullYear());\n        let months = formateT(date.getMonth() + 1);\n        let days = formateT(date.getDate());\n        let id_product = years + months + days + Math.floor(Math.random() * 1000000000000000);\n\n        let total = 0;\n        if (gameJoin == 1) {\n            total = money * xvalue * (String(listJoin).split(',').length);\n        } else if (gameJoin == 2) {\n            let twoSame = listJoin.split('@')[0]; // Chá»n 2 sá» phÃ¹ há»£p\n            let motDuyNhat = listJoin.split('@')[1]; // Chá»n má»t cáº·p sá» duy nháº¥t\n            if (twoSame.length > 0) {\n                twoSame = twoSame.split(',').length;\n            }\n            let lengthArr = 0;\n            let count = 0;\n            if (motDuyNhat.length > 0) {\n                let arr = motDuyNhat.split('&');\n                for (let i = 0; i < arr.length; i++) {\n                    motDuyNhat = arr[i].split('|');\n                    count = motDuyNhat[1].split(',').length;\n                }\n                lengthArr = arr.length;\n                count = count;\n            }\n            total = money * xvalue * (lengthArr * count) + (twoSame * money * xvalue);\n        } else if (gameJoin == 3) {\n            let baDuyNhat = listJoin.split('@')[0]; // Chá»n 3 sá» duy nháº¥t\n            let countBaDuyNhat = 0;\n            if (baDuyNhat.length > 0) {\n                countBaDuyNhat = baDuyNhat.split(',').length;\n            }\n            let threeSame = listJoin.split('@')[1].length; // Chá»n 3 sá» giá»ng nhau\n            total = money * xvalue * countBaDuyNhat + (threeSame * money * xvalue);\n        } else if (gameJoin == 4) {\n            let threeNumberUnlike = listJoin.split('@')[0]; // Chá»n 3 sá» duy nháº¥t\n            let twoLienTiep = listJoin.split('@')[1]; // Chá»n 3 sá» liÃªn tiáº¿p\n            let twoNumberUnlike = listJoin.split('@')[2]; // Chá»n 3 sá» duy nháº¥t\n\n            let threeUn = 0;\n            if (threeNumberUnlike.length > 0) {\n                let arr = threeNumberUnlike.split(',').length;\n                if (arr <= 4) {\n                    threeUn += xvalue * (money * arr);\n                }\n                if (arr == 5) {\n                    threeUn += xvalue * (money * arr) * 2;\n                }\n                if (arr == 6) {\n                    threeUn += xvalue * (money * 5) * 4;\n                }\n            }\n            let twoUn = 0;\n            if (twoNumberUnlike.length > 0) {\n                let arr = twoNumberUnlike.split(',').length;\n                if (arr <= 3) {\n                    twoUn += xvalue * (money * arr);\n                }\n                if (arr == 4) {\n                    twoUn += xvalue * (money * arr) * 1.5;\n                }\n                if (arr == 5) {\n                    twoUn += xvalue * (money * arr) * 2;\n                }\n                if (arr == 6) {\n                    twoUn += xvalue * (money * arr * 2.5);\n                }\n            }\n            let UnlienTiep = 0;\n            if (twoLienTiep == 'u') {\n                UnlienTiep += xvalue * money;\n            }\n            total = threeUn + twoUn + UnlienTiep;\n        }\n        let fee = total * 0.02;\n        let price = total - fee;\n\n        let typeGame = '';\n        if (gameJoin == 1) typeGame = 'total';\n        if (gameJoin == 2) typeGame = 'two-same';\n        if (gameJoin == 3) typeGame = 'three-same';\n        if (gameJoin == 4) typeGame = 'unlike';\n\n\n        let check = userInfo.money + userInfo.win_wallet - total;\n        if (check >= 0) {\n            let currentWallet = userInfo.money;\n            let currentWinWallet = userInfo.win_wallet;\n            currentWallet = currentWallet - total;\n            if (currentWallet < 0) {\n                currentWinWallet = currentWinWallet + currentWallet;\n                currentWallet = 0;\n            }\n            let timeNow = Date.now();\n            const sql = `INSERT INTO result_k3 SET id_product = ?,phone = ?,code = ?,invite = ?,stage = ?,level = ?,money = ?,price = ?,amount = ?,fee = ?,game = ?,join_bet = ?, typeGame = ?,bet = ?,status = ?,time = ?`;\n            await connection.execute(sql, [id_product, userInfo.phone, userInfo.code, userInfo.invite, period.period, userInfo.level, total, price, xvalue, fee, game, gameJoin, typeGame, listJoin, 0, timeNow]);\n            await connection.execute('UPDATE `users` SET `money` = ?,`win_wallet` = ? ,vip_exp = vip_exp + ?WHERE `token` = ? ', [currentWallet, currentWinWallet,money,auth]);\n            const [users] = await connection.query('SELECT `money`, `level`,`win_wallet` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n            await rosesPlus(auth, total);\n            const [level] = await connection.query('SELECT * FROM level ');\n            let level0 = level[0];\n            const sql2 = `INSERT INTO roses SET phone = ?,code = ?,invite = ?,f1 = ?,f2 = ?,f3 = ?,f4 = ?,time = ?`;\n            let total_m = total;\n            let f1 = (total_m / 100) * level0.f1;\n            let f2 = (total_m / 100) * level0.f2;\n            let f3 = (total_m / 100) * level0.f3;\n            let f4 = (total_m / 100) * level0.f4;\n            await connection.execute(sql2, [userInfo.phone, userInfo.code, userInfo.invite, f1, f2, f3, f4, timeNow]);\n            return res.status(200).json({\n                message: 'Bet successfully',\n                status: true,\n                // data: result,\n                change: users[0].level,\n                money: users[0].money,\n                win_wallet: users[0].win_wallet\n            });\n        } else {\n            return res.status(200).json({\n                message: 'The amount is not enough',\n                status: false\n            });\n        }\n    } catch (error) {\n    }\n}\n\nfunction makeid(length) {\n    var result = '';\n    var characters = '123456';\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n}\n\nconst addK3 = async (game) => {\n    try {\n        let join = '';\n        if (game == 1) join = 'k3d';\n        if (game == 3) join = 'k3d3';\n        if (game == 5) join = 'k3d5';\n        if (game == 10) join = 'k3d10';\n\n        let result2 = makeid(3);\n        let timeNow = Date.now();\n        let [currentBet] = await connection.execute(`SELECT * FROM result_k3 WHERE status = 0 AND game = ${game}`);\n        console.log(currentBet, 'current bets');\n        let [k5D] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n        const [setting] = await connection.query('SELECT * FROM `admin` ');\n        let period = k5D[0].period;\n\n        let nextResult = '';\n        if (game == 1) nextResult = setting[0].k3d;\n        if (game == 3) nextResult = setting[0].k3d3;\n        if (game == 5) nextResult = setting[0].k3d5;\n        if (game == 10) nextResult = setting[0].k3d10;\n\n        let newArr = '';\n        if (nextResult == '-1' && !currentBet[1]) {\n            await connection.execute(`UPDATE k3 SET result = ?,status = ? WHERE period = ? AND game = \"${game}\"`, [result2, 1, period]);\n            newArr = '-1';\n        }\n\n        else if (nextResult == '-1' && currentBet[1]) {\n            const totalBetAmount = currentBet.reduce((sum, bet) => sum + bet.money, 0);\n            const resultString = generateResultString(currentBet, totalBetAmount);\n            const payout = calculatePayout(currentBet, resultString);\n            await connection.execute(`UPDATE k3 SET result = ?,status = ? WHERE period = ? AND game = \"${game}\"`, [resultString, 1, period]);\n            newArr = '-1';\n        }\n\n        else {\n            let result = '';\n            let arr = nextResult.split('|');\n            let check = arr.length;\n            if (check == 1) {\n                newArr = '-1';\n            } else {\n                for (let i = 1; i < arr.length; i++) {\n                    newArr += arr[i] + '|';\n                }\n                newArr = newArr.slice(0, -1);\n            }\n            result = arr[0];\n            await connection.execute(`UPDATE k3 SET result = ?,status = ? WHERE period = ? AND game = ${game}`, [result, 1, period]);\n        }\n        const sql = `INSERT INTO k3 SET period = ?, result = ?, game = ?, status = ?, time = ?`;\n        await connection.execute(sql, [Number(period) + 1, 0, game, 0, timeNow]);\n\n        if (game == 1) join = 'k3d';\n        if (game == 3) join = 'k3d3';\n        if (game == 5) join = 'k3d5';\n        if (game == 10) join = 'k3d10';\n\n        await connection.execute(`UPDATE admin SET ${join} = ?`, [newArr]);\n    } catch (error) {\n        if (error) {\n        }\n    }\n}\n\nasync function funHanding(game) {\n    const [k5d] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = ${game} ORDER BY id DESC LIMIT 1 `);\n    let k5dInfo = k5d[0];\n\n    // update ket qua\n    await connection.execute(`UPDATE result_k3 SET result = ? WHERE status = 0 AND game = ${game}`, [k5dInfo.result]);\n    let result = String(k5dInfo.result).split('');\n    let total = 0;\n    for (let i = 0; i < result.length; i++) {\n        total += Number(result[i]);\n    }\n\n    // xá»­ lÃ½ game Tá»ng sá»\n    const [totalNumber] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'total' `);\n    let totalN = totalNumber.length;\n    for (let i = 0; i < totalN; i++) {\n        let sult = totalNumber[i].bet.split(',');\n        // let result = sult.includes(String(total));\n        // if (!result) {\n        //     await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [totalNumber[i].id]);\n        // }\n        let lengWin = sult.filter(function (age) {\n            return age == total;\n        });\n\n        let check1 = false;\n        let check2 = false;\n        let check3 = false;\n        let check4 = false;\n        if (total >= 3 && total <= 10 && sult.includes('s')) {\n            check1 = true;\n        } else {\n            check1 = false;\n        }\n        if (total >= 11 && total <= 18 && sult.includes('b')) {\n            check2 = true;\n        } else {\n            check2 = false;\n        }\n        if (total % 2 == 0 && sult.includes('c')) {\n            check3 = true;\n        } else {\n            check3 = false;\n        }\n        if (total % 2 != 0 && sult.includes('l')) {\n            check4 = true;\n        } else {\n            check4 = false;\n        }\n        if (!check1 && !check2 && !check3 && !check4) {\n            await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [totalNumber[i].id]);\n        }\n        if (lengWin.length >= 1) {\n            await connection.execute(`UPDATE result_k3 SET status = 0 WHERE id = ? `, [totalNumber[i].id]);\n        }\n    }\n\n    // xá»­ lÃ½ game 2 sá» trÃ¹ng nhau\n    const [totaltwoSame] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'two-same' `);\n    let totalTwoSame = totaltwoSame.length;\n    for (let i = 0; i < totalTwoSame; i++) {\n        let sult = totaltwoSame[i].bet.split('@');\n        let id = totaltwoSame[i].id;\n        if (sult[0].length > 0 && sult[1].length > 0) {\n            let array = sult[0].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n\n            let check1 = false;\n            let check2 = false;\n\n            let array2 = sult[1].split('&');\n            for (let i = 0; i < array2.length; i++) {\n                let newArr = array2[i].split('|')[0];\n                let newArr2 = array2[i].split('|')[1].split(',');\n                let resultA1 = newArr.includes(String(kq1));\n                let resultA2 = newArr.includes(String(kq2));\n                if (!resultA1 && !resultA2) {\n                    check1 = true;\n                } else if (resultA1 && !resultA2) {\n                    let resultA4 = newArr2.includes(String(kq[2]));\n                    if (!resultA4) {\n                        check1 = true;\n                    }\n                } else if (!resultA1 && resultA2) {\n                    let resultA3 = newArr2.includes(String(kq[0]));\n                    if (!resultA3) {\n                        check1 = true;\n                    }\n                }\n            }\n\n            let result1 = array.includes(String(kq1));\n            let result2 = array.includes(String(kq2));\n            if (!result1 && !result2) {\n                check2 = true;\n            }\n            if (check1 && check2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length > 0 && sult[1].length <= 0) {\n            let array = sult[0].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let result1 = array.includes(String(kq1));\n            let result2 = array.includes(String(kq2));\n            if (!result1 && !result2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length <= 0 && sult[1].length > 0) {\n            let kq = String(k5dInfo.result).split('');\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let kq3 = kq[0];\n            let kq4 = kq[2];\n            let check = false;\n\n            let array2 = sult[1].split('&');\n            for (let i = 0; i < array2.length; i++) {\n                let newArr = array2[i].split('|')[0];\n                let newArr2 = array2[i].split('|')[1].split(',');\n                let resultA1 = newArr.includes(String(kq1));\n                let resultA2 = newArr.includes(String(kq2));\n                let resultA3 = newArr2.includes(String(kq3));\n                let resultA4 = newArr2.includes(String(kq4));\n                if (!resultA1 && !resultA2) {\n                    if (!resultA3 && !resultA4) {\n                        await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n                    }\n                } else if (resultA1 && !resultA2) {\n                    let resultA4 = newArr2.includes(String(kq[2]));\n                    if (resultA4) {\n                        check = true;\n                    }\n                } else if (!resultA1 && resultA2) {\n                    let resultA3 = newArr2.includes(String(kq[0]));\n                    if (resultA3) {\n                        check = true;\n                    }\n                }\n            }\n            if (!check) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        }\n\n    }\n\n    // xá»­ lÃ½ game 3 sá» trÃ¹ng nhau\n    const [ThreeSame] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'three-same' `);\n    let ThreeSameL = ThreeSame.length;\n    for (let i = 0; i < ThreeSameL; i++) {\n        let sult = ThreeSame[i].bet.split('@');\n        let id = ThreeSame[i].id;\n        if (sult[0].length > 0 && sult[1].length > 0) {\n            let array = sult[0].split(',');\n            let kq = String(k5dInfo.result);\n\n            let check1 = false;\n            let check2 = false;\n\n            let resultA1 = array.includes(String(kq));\n            if (!resultA1) {\n                check1 = true;\n            }\n            let result = ['111', '222', '333', '444', '555', '666'].includes(String(kq));\n            if (!result) {\n                check2 = true;\n            }\n            if (check1 && check2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length > 0 && sult[1].length <= 0) {\n            let array = sult[0].split(',');\n            let kq = String(k5dInfo.result);\n            let result = array.includes(String(kq));\n            if (!result) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length <= 0 && sult[1].length > 0) {\n            let kq = String(k5dInfo.result);\n            let result = ['111', '222', '333', '444', '555', '666'].includes(String(kq));\n            if (!result) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        }\n\n    }\n\n    // xá»­ lÃ½ game 3 sá» khÃ¡c nhau\n    const [Unlike] = await connection.execute(`SELECT id, bet FROM result_k3 WHERE status = 0 AND game = ${game} AND typeGame = 'unlike' `);\n    let Unlikes = Unlike.length;\n    for (let i = 0; i < Unlikes; i++) {\n        let sult = Unlike[i].bet.split('@');\n        let id = Unlike[i].id;\n\n        if (sult[0].length > 1 && sult[1] == 'u' && sult[2].length > 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n            let check2 = false;\n            let check3 = false;\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array.includes(String(kq[i]));\n                if (resultA1) {\n                    check1 = true;\n                }\n            }\n\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let kq3 = kq[0] + kq[2];\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n                let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n                let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n                if (resultA1 || resultA2 || resultA3) {\n                    check3 = true;\n                }\n            }\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array2.includes(String(kq[i]));\n                if (resultA1) {\n                    check2 = true;\n                }\n            }\n\n            if (check1 && check2 && check3) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n\n        } else if (sult[0].length > 1 && sult[1] == 'y' && sult[2].length > 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n            let check2 = false;\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array.includes(String(kq[i]));\n                if (resultA1) {\n                    check1 = true;\n                }\n            }\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array2.includes(String(kq[i]));\n                if (resultA1) {\n                    check2 = true;\n                }\n            }\n\n            if (check1 && check2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length > 1 && sult[1] == 'u' && sult[2].length <= 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n            let check2 = false;\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array.includes(String(kq[i]));\n                if (resultA1) {\n                    check1 = true;\n                }\n            }\n\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let kq3 = kq[0] + kq[2];\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n                let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n                let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n                if (resultA1 || resultA2 || resultA3) {\n                    check2 = true;\n                }\n            }\n\n            if (check1 && check2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length <= 1 && sult[1] == 'u' && sult[2].length > 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = false;\n            let check2 = false;\n\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = array2.includes(String(kq[i]));\n                if (resultA1) {\n                    check1 = true;\n                }\n            }\n\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let kq3 = kq[0] + kq[2];\n            for (let i = 0; i < kq.length; i++) {\n                let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n                let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n                let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n                if (resultA1 || resultA2 || resultA3) {\n                    check2 = true;\n                }\n            }\n\n            if (check1 && check2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length > 1 && sult[1] == 'y' && sult[2].length <= 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = 0;\n\n            let checkedElements = new Set(); // To track unique elements\n\n            for (let i = 0; i < kq.length; i++) {\n                let currentElement = String(kq[i]);\n\n                // Check if the array includes the element and it's not already checked\n                if (array.includes(currentElement) && !checkedElements.has(currentElement)) {\n                    check1++;\n                    checkedElements.add(currentElement); // Mark the element as checked\n                }\n            }\n\n            if (check1 < 3) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length <= 1 && sult[1] == 'u' && sult[2].length <= 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            // let kq = String(k5dInfo.result).split('');\n            // let check1 = false;\n\n            // let kq1 = kq[0] + kq[1];\n            // let kq2 = kq[1] + kq[2];\n            // let kq3 = kq[0] + kq[2];\n            // for (let i = 0; i < kq.length; i++) {\n            //     let resultA1 = ['11', '22', '33', '44', '55', '66'].includes(String(kq1));\n            //     let resultA2 = ['11', '22', '33', '44', '55', '66'].includes(String(kq2));\n            //     let resultA3 = ['11', '22', '33', '44', '55', '66'].includes(String(kq3));\n            //     if (resultA1 || resultA2 || resultA3) {\n            //         check1 = true;\n            //     }\n            // }\n\n            if (isConsecutive(String(k5dInfo.result)) == false) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        } else if (sult[0].length <= 1 && sult[1] == 'y' && sult[2].length > 1) {\n            let array = sult[0].split(',');\n            let array2 = sult[2].split(',');\n            let kq = String(k5dInfo.result).split('');\n            let check1 = 0;\n            let checkedElements = new Set(); // To track unique elements\n\n            for (let i = 0; i < kq.length; i++) {\n                let currentElement = String(kq[i]);\n\n                // Check if the array includes the element and it's not already checked\n                if (array2.includes(currentElement) && !checkedElements.has(currentElement)) {\n                    check1++;\n                    checkedElements.add(currentElement); // Mark the element as checked\n                }\n            }\n\n            if (check1 < 2) {\n                await connection.execute(`UPDATE result_k3 SET status = 2 WHERE id = ? `, [id]);\n            }\n        }\n    }\n}\n\nconst priceGet = {\n    total: {\n        't3': 207.36,\n        't4': 69.12,\n        't5': 34.56,\n        't6': 20.74,\n        't7': 13.83,\n        't8': 9.88,\n        't9': 8.3,\n        't10': 7.68,\n        't11': 7.68,\n        't12': 8.3,\n        't13': 9.88,\n        't14': 13.83,\n        't15': 20.74,\n        't16': 34.56,\n        't17': 69.12,\n        't18': 207.36,\n        'b': 1.92,\n        's': 1.92,\n        'l': 1.92,\n        'c': 1.92,\n    },\n    two: {\n        twoSame: 13.83,\n        twoD: 69.12\n    },\n    three: {\n        threeD: 207.36,\n        threeSame: 34.56\n    },\n    unlike: {\n        unlikeThree: 34.56,\n        threeL: 8.64,\n        unlikeTwo: 6.91\n    }\n}\n\nfunction calculatePayout(currentBet, result) {\n    let payout = 0;\n\n    currentBet.forEach((val, index) => {\n        const { typeGame, bet, money } = val;\n        let amount = money;\n        const totalSum = result.split('').reduce((sum, num) => sum + parseInt(num), 0);\n\n        switch (typeGame) {\n            case 'total':\n                if (bet === `${totalSum}`) {\n                    payout += amount * priceGet.total[`t${bet}`];\n                } else if (bet === 'b' && totalSum > 10) {\n                    payout += amount * priceGet.total['b'];\n                } else if (bet === 's' && totalSum <= 10) {\n                    payout += amount * priceGet.total['s'];\n                } else if (bet === 'l' && totalSum % 2 !== 0) {\n                    payout += amount * priceGet.total['l'];\n                } else if (bet === 'c' && totalSum % 2 === 0) {\n                    payout += amount * priceGet.total['c'];\n                }\n                break;\n\n            case 'two-same':\n                let arr = bet.split('@')[0].split(',');\n                if (arr.some(element => {\n                    const digits = element.split('');\n                    return digits.every(digit => {\n                        const mainCount = result.split(digit).length - 1;\n                        const elementCount = element.split(digit).length - 1;\n                        return mainCount >= elementCount;\n                    });\n                })) {\n                    payout += amount * priceGet.two.twoSame;\n                    //  else if (pairCount === 3 && betValue.length === 4) { \n                    //     payout += amount * priceGet.two.twoD;\n                    // }\n                }\n                break;\n\n            case 'three-same':\n                if (bet.split('@')[0].split(',').includes(result)) {\n                    payout += amount * priceGet.three.threeD;\n                } else if (bet === '@3' && result[0] === result[1] && result[1] === result[2]) {\n                    payout += amount * priceGet.three.threeSame;\n                }\n                break;\n\n            case 'unlike':\n                if (bet.startsWith('@y@') &&\n                    new Set(result).size >= 2 &&\n                    result.split('').filter(num => bet.split('@')[2].split(',').includes(num)).length >= 2) {\n                    payout += amount * priceGet.unlike.unlikeTwo;\n                } else if (bet.includes('@u@') && isConsecutive(result)) {\n                    payout += amount * priceGet.unlike.threeL;\n                } else if (bet.includes('@') &&\n                    bet[bet.length - 1] === '@' && bet[bet.length - 2] === 'y' && bet[bet.length - 3] === '@' &&\n                    new Set(result).size === 3 &&\n                    result.split('').every(num => bet.split('@')[0].split(',').includes(num))) {\n                    payout += amount * priceGet.unlike.unlikeThree;\n                }\n\n                break;\n\n            default:\n                break;\n        }\n    });\n\n    console.log(payout , 'calculated payout for',result);\n\n\n    return payout;\n}\n\nfunction isConsecutive(result) {\n    const sortedResult = result.split('').map(Number).sort((a, b) => a - b);\n    return sortedResult[2] - sortedResult[1] === 1 && sortedResult[1] - sortedResult[0] === 1;\n}\n\n\nfunction generateResultString(currentBet, totalBetAmount) {\n    const possibleResults = [];\n    const zeropayouts = [];\n    const diceOptions = ['1', '2', '3', '4', '5', '6'];\n\n    for (let i = 0; i < diceOptions.length; i++) {\n        for (let j = 0; j < diceOptions.length; j++) {\n            for (let k = 0; k < diceOptions.length; k++) {\n                const resultString = `${diceOptions[i]}${diceOptions[j]}${diceOptions[k]}`;\n                const potentialPayout = calculatePayout(currentBet, resultString);\n                const profitMargin = ((totalBetAmount - potentialPayout) / totalBetAmount) * 100;\n\n                if(potentialPayout == 0){\n                    zeropayouts.push(resultString);\n                }\n               \n\n               else if (profitMargin >= 25) {\n                    possibleResults.push(resultString);\n                }\n            }\n        }\n    }\n\n    if (possibleResults.length > 0) {\n        return possibleResults[Math.floor(Math.random() * possibleResults.length)];\n    }\n\n    if(zeropayouts.length>0){\n        return zeropayouts[Math.floor(Math.random() * zeropayouts.length)];\n    }\n\n    let fallbackResult = '';\n    let minPayout = Infinity;\n\n    for (let i = 0; i < diceOptions.length; i++) {\n        for (let j = 0; j < diceOptions.length; j++) {\n            for (let k = 0; k < diceOptions.length; k++) {\n                const resultString = `${diceOptions[i]}${diceOptions[j]}${diceOptions[k]}`;\n                const potentialPayout = calculatePayout(currentBet, resultString);\n\n                if (potentialPayout === 0) {\n                    return resultString;\n                }\n\n                if (potentialPayout < minPayout) {\n                    minPayout = potentialPayout;\n                    fallbackResult = resultString;\n                }\n            }\n        }\n    }\n\n    return fallbackResult;\n}\n\n\nasync function plusMoney(game) {\n    const [order] = await connection.execute(`SELECT id, phone, bet, price, money, fee, amount, result, typeGame FROM result_k3 WHERE status = 0 AND game = ${game} `);\n    for (let i = 0; i < order.length; i++) {\n        let orders = order[i];\n        let phone = orders.phone;\n        let id = orders.id;\n        let nhan_duoc = 0;\n        let result = orders.result;\n        if (orders.typeGame == \"total\") {\n            let arr = orders.bet.split(',');\n            let totalResult = orders.result.split('');\n            let totalResult2 = 0;\n            for (let i = 0; i < 3; i++) {\n                totalResult2 += Number(totalResult[i]);\n            }\n            // let total = (orders.money / arr.length / orders.amount);\n            let total = orders.money;\n            let fee = total * 0.03;\n            let price = total - fee;\n\n\n\n            let lengWin = arr.filter(function (age) {\n                return age == totalResult2;\n            });\n\n            let lengWin2 = arr.filter(function (age) {\n                return !isNumber(age);\n            });\n\n            if (totalResult2 % 2 == 0 && lengWin2.includes('c')) {\n                console.log('condition1')\n                nhan_duoc += price * 1.92;\n            }\n\n            if (totalResult2 % 2 != 0 && lengWin2.includes('l')) {\n                console.log('condition2')\n                nhan_duoc += price * 1.92;\n            }\n\n            if (totalResult2 >= 11 && totalResult2 <= 18 && lengWin2.includes('b')) {\n                console.log('condition3')\n                nhan_duoc += price * 1.92;\n            }\n\n            if (totalResult2 >= 3 && totalResult2 <= 11 && lengWin2.includes('s')) {\n                nhan_duoc += price * 1.92;\n                console.log('condition4')\n            }\n\n            let get = 0;\n            switch (lengWin[0]) {\n                case '3':\n                    get = 207.36;\n                    console.log('condition5')\n                    break;\n                case '4':\n                    get = 69.12;\n                    console.log('condition6')\n                    break;\n                case '5':\n                    get = 34.56;\n                    console.log('condition7')\n                    break;\n                case '6':\n                    get = 20.74;\n                    console.log('condition8')\n                    break;\n                case '7':\n                    get = 13.83;\n                    console.log('condition9')\n                    break;\n                case '8':\n                    get = 9.88;\n                    console.log('condition10')\n                    break;\n                case '9':\n                    console.log('condition11')\n                    get = 8.3;\n                    break;\n                case '10':\n                    console.log('condition12')\n                    get = 7.68;\n                    break;\n                case '11':\n                    get = 7.68;\n                    console.log('condition13')\n                    break;\n                case '12':\n                    get = 8.3;\n                    console.log('condition14')\n                    break;\n                case '13':\n                    get = 9.88;\n                    console.log('condition15')\n                    break;\n                case '14':\n                    get = 13.83;\n                    console.log('condition16')\n                    break;\n                case '15':\n                    get = 20.74;\n                    console.log('condition17')\n                    break;\n                case '16':\n                    get = 34.56;\n                    console.log('condition18')\n                    break;\n                case '17':\n                    get = 69.12;\n                    console.log('condition19')\n                    break;\n                case '18':\n                    get = 207.36;\n                    console.log('condition20')\n                    break;\n            }\n            nhan_duoc += price * get;\n            await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n            const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n            await connection.execute(sql, [nhan_duoc, phone]);\n        }\n        nhan_duoc = 0;\n        if (orders.typeGame == \"two-same\") {\n            let kq = result.split('');\n            let kq1 = kq[0] + kq[1];\n            let kq2 = kq[1] + kq[2];\n            let array = orders.bet.split('@');\n            let arr1 = array[0].split(',');\n            let arr2 = array[1];\n            let arr3 = array[1].split('&');\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] != \"\") {\n                    let check1 = arr1[i].includes(kq1);\n                    let check2 = arr1[i].includes(kq2);\n                    if (check1 || check2) {\n                        let lengthArr = 0;\n                        let count = 0;\n                        if (arr2.length > 0) {\n                            let arr = arr2.split('&');\n                            for (let i = 0; i < arr.length; i++) {\n                                arr2 = arr[i].split('|');\n                                count = arr2[1].split(',').length;\n                            }\n                            lengthArr = arr.length;\n                            count = count;\n                        }\n                        let total = orders.money / orders.amount / (lengthArr + arr1.length);\n                        nhan_duoc += total * 12.83;\n                        console.log('condition21')\n                    }\n                }\n            }\n            arr2 = array[1];\n            for (let i = 0; i < arr3.length; i++) {\n                if (arr3[i] != \"\") {\n                    let files = arr3[i].split('|');\n                    let check1 = files[0].includes(kq1);\n                    let check2 = files[0].includes(kq2);\n                    if (check1 || check2) {\n                        let lengthArr = 0;\n                        let count = 0;\n                        if (arr2.length > 0) {\n                            let arr = arr2.split('&');\n                            for (let i = 0; i < arr.length; i++) {\n                                arr2 = arr[i].split('|');\n                                count = arr2[1].split(',').length;\n                            }\n                            lengthArr = arr.length;\n                            count = count;\n                        }\n                        let bale = 0;\n                        for (let i = 0; i < arr1.length; i++) {\n                            if (arr1[i] != \"\") {\n                                bale = arr1.length;\n                            }\n                        }\n                        let total = orders.money / orders.amount / (lengthArr + bale);\n                        nhan_duoc += total * 69.12;\n                        console.log('condition22')\n                    }\n                }\n            }\n            nhan_duoc -= orders.fee;\n\n            await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n            const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n            await connection.execute(sql, [nhan_duoc, phone]);\n        }\n\n        nhan_duoc = 0;\n        if (orders.typeGame == \"three-same\") {\n            let kq = result;\n            let array = orders.bet.split('@');\n            let arr1 = array[0].split(',');\n            let arr2 = array[1];\n\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] != \"\") {\n                    let check1 = arr1[i].includes(kq);\n                    let bala = 0;\n                    if (arr2 != \"\") {\n                        bala = 1;\n                    }\n                    if (check1) {\n                        let total = (orders.money / (arr1.length + bala) / orders.amount);\n                        nhan_duoc += total * 207.36 - orders.fee;\n                        console.log('condition23')\n                    }\n                }\n            }\n            if (arr2 != \"\") {\n                let bala = 0;\n                for (let i = 0; i < arr1.length; i++) {\n                    if (arr1[i] != \"\") {\n                        bala = arr1.length;\n                    }\n                }\n                let total = (orders.money / (1 + bala) / orders.amount);\n                nhan_duoc += total * 34.56 - orders.fee;\n                console.log('condition24')\n            }\n            await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n            const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n            await connection.execute(sql, [nhan_duoc, phone]);\n        }\n\n        nhan_duoc = 0;\n        if (orders.typeGame == \"unlike\") {\n        console.log(orders,'unlike types win bets');\n         let sult = orders.bet.split('@');\n         let total = orders.money;\n         if(sult[0].length > 1 && sult[1] == 'y' && sult[2].length <= 1){\n            nhan_duoc +=(total- orders.fee)* 34.56 ;\n         }\n\n         else if (sult[0].length <= 1 && sult[1] == 'y' && sult[2].length > 1){\n          nhan_duoc +=(total- orders.fee)* 6.91;\n         }\n\n         else if (sult[0].length <= 1 && sult[1] == 'u' && sult[2].length <= 1){\n             nhan_duoc +=(total- orders.fee)* 8.64;\n         }\n            // let kq = result.split('');\n            // let array = orders.bet.split('@');\n            // let arr1 = array[0].split(',');\n            // let arr2 = array[1];\n            // let arr3 = array[2].split(',');\n\n            // for (let i = 0; i < arr1.length; i++) {\n            //     if (arr1[i] != \"\") {\n            //         let check1 = kq.includes(arr1[i]);\n            //         let bala = 0;\n            //         let bala2 = 0;\n            //         for (let i = 0; i < arr3.length; i++) {\n            //             if (arr3[i].length != \"\") {\n            //                 bala = arr3.length;\n            //             }\n            //         }\n            //         if (arr2 == \"u\") {\n            //             bala2 = 1;\n            //         }\n            //         if (!check1) {\n            //             let total = (orders.money / (arr1.length + bala + bala2) / orders.amount);\n            //             nhan_duoc += total * 34.56 - orders.fee;\n            //             console.log('condition25')\n            //             if (arr2 == \"u\") {\n            //                 let total = (orders.money / (1 + bala + bala2) / orders.amount);\n            //                 nhan_duoc += (total - orders.fee) * 8.64;\n            //                 console.log('condition26')\n            //             }\n            //         }\n            //     }\n            // }\n            // if (arr2 == \"u\") {\n            //     let bala = 0;\n            //     let bala2 = 0;\n            //     for (let i = 0; i < arr1.length; i++) {\n            //         if (arr1[i] != \"\") {\n            //             bala = arr1.length;\n            //         }\n            //     }\n            //     for (let i = 0; i < arr3.length; i++) {\n            //         if (arr3[i].length != \"\") {\n            //             bala2 = arr3.length;\n            //         }\n            //     }\n            //     let total = (orders.money / (1 + bala + bala2) / orders.amount);\n            //     nhan_duoc += (total - orders.fee) * 8.64;\n            //     console.log('condition27')\n            // }\n            // for (let i = 0; i < arr3.length; i++) {\n            //     if (arr1[i] != \"\") {\n            //         let check1 = kq.includes(arr3[i]);\n            //         let bala = 0;\n            //         for (let i = 0; i < arr1.length; i++) {\n            //             if (arr1[i].length != \"\") {\n            //                 bala = arr1.length;\n            //             }\n            //         }\n            //         if (!check1) {\n            //             let total = (orders.money / (arr3.length + bala) / orders.amount);\n            //             nhan_duoc += total * 6.91 - orders.fee;\n            //             console.log('condition28')\n            //         }\n            //     }\n            // }\n            await connection.execute('UPDATE `result_k3` SET `get` = ?, `status` = 1 WHERE `id` = ? ', [nhan_duoc, id]);\n            const sql = 'UPDATE `users` SET `money` = `money` + ? WHERE `phone` = ? ';\n            await connection.execute(sql, [nhan_duoc, phone]);\n        }\n    }\n}\n\nconst handlingK3 = async (typeid) => {\n\n    let game = Number(typeid);\n\n    await funHanding(game);\n\n    await plusMoney(game);\n}\n\nconst listOrderOld = async (req, res) => {\n    let { gameJoin, pageno, pageto } = req.body;\n    let auth = req.cookies.auth;\n\n    let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n    if (!checkGame || pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1  LIMIT 1 ', [auth]);\n\n    let game = Number(gameJoin);\n\n    const [k5d] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = '${game}' ORDER BY id DESC LIMIT ${pageno}, ${pageto} `);\n    const [k5dAll] = await connection.query(`SELECT * FROM k3 WHERE status != 0 AND game = '${game}' `);\n    const [period] = await connection.query(`SELECT period FROM k3 WHERE status = 0 AND game = '${game}' ORDER BY id DESC LIMIT 1 `);\n    if (k5d.length == 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            page: 1,\n            status: false\n        });\n    }\n    if (!pageno || !pageto || !user[0] || !k5d[0] || !period[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: false\n        });\n    }\n    let page = Math.ceil(k5dAll.length / 10);\n    return res.status(200).json({\n        code: 0,\n        msg: \"Get success\",\n        data: {\n            gameslist: k5d,\n        },\n        period: period[0].period,\n        page: page,\n        status: true\n    });\n}\n\nconst GetMyEmerdList = async (req, res) => {\n    let { gameJoin, pageno, pageto } = req.body;\n    let auth = req.cookies.auth;\n\n    let checkGame = ['1', '3', '5', '10'].includes(String(gameJoin));\n    if (!checkGame || pageno < 0 || pageto < 0) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            status: false\n        });\n    }\n\n    let game = Number(gameJoin);\n\n    const [user] = await connection.query('SELECT `phone`, `code`, `invite`, `level`, `money` FROM users WHERE token = ? AND veri = 1 LIMIT 1 ', [auth]);\n    const [result_5d] = await connection.query(`SELECT * FROM result_k3 WHERE phone = ? AND game = '${game}' ORDER BY id DESC LIMIT ${Number(pageno) + ',' + Number(pageto)}`, [user[0].phone]);\n    const [result_5dAll] = await connection.query(`SELECT * FROM result_k3 WHERE phone = ? AND game = '${game}' ORDER BY id DESC `, [user[0].phone]);\n\n    if (!result_5d[0]) {\n        return res.status(200).json({\n            code: 0,\n            msg: \"No more data\",\n            data: {\n                gameslist: [],\n            },\n            page: 1,\n            status: false\n        });\n    }\n    if (!pageno || !pageto || !user[0] || !result_5d[0]) {\n        return res.status(200).json({\n            message: 'Error!',\n            status: true\n        });\n    }\n    let page = Math.ceil(result_5dAll.length / 10);\n\n    let datas = result_5d.map((data) => {\n        let { id, phone, code, invite, level, game, ...others } = data;\n        return others;\n    });\n\n    return res.status(200).json({\n        code: 0,\n        msg: \"Get success\",\n        data: {\n            gameslist: datas,\n        },\n        page: page,\n        status: true\n    });\n}\n\n\nmodule.exports = {\n    K3Page,\n    betK3,\n    addK3,\n    handlingK3,\n    listOrderOld,\n    GetMyEmerdList\n}"],"mappings":"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","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/paymentController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const connection = require(\"../config/connectDB\");\nconst axios = require('axios');\nconst moment = require(\"moment\");\nconst crypto = require(\"crypto\");\nconst querystring = require(\"querystring\");\nlet timeNow = Date.now();\nconst PaymentStatusMap = {\n  PENDING: 0,\n  SUCCESS: 1,\n  CANCELLED: 2\n};\nconst PaymentMethodsMap = {\n  UPI_GATEWAY: \"upi_gateway\",\n  UPI_MANUAL: \"upi_manual\",\n  USDT_MANUAL: \"usdt_manual\",\n  WOW_PAY: \"wow_pay\",\n  USDT: \"usdt\"\n};\nconst initiateManualUPIPayment = async (req, res) => {\n  const query = req.query;\n  const [bank_recharge_momo] = await connection.query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\n  let bank_recharge_momo_data;\n  if (bank_recharge_momo.length) {\n    bank_recharge_momo_data = bank_recharge_momo[0];\n  }\n  const momo = {\n    bank_name: bank_recharge_momo_data?.name_bank || \"\",\n    username: bank_recharge_momo_data?.name_user || \"\",\n    upi_id: bank_recharge_momo_data?.stk || \"\",\n    usdt_wallet_address: bank_recharge_momo_data?.qr_code_image || \"\"\n  };\n  return res.render(\"wallet/manual_payment.ejs\", {\n    Amount: query?.am,\n    extra: query?.extra,\n    ekyc: query?.ekyc,\n    UpiId: momo.upi_id\n  });\n};\nconst initiateManualUSDTPayment = async (req, res) => {\n  const query = req.query;\n  const [bank_recharge_momo] = await connection.query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\n  let bank_recharge_momo_data;\n  if (bank_recharge_momo.length) {\n    bank_recharge_momo_data = bank_recharge_momo[0];\n  }\n  const momo = {\n    bank_name: bank_recharge_momo_data?.name_bank || \"\",\n    username: bank_recharge_momo_data?.name_user || \"\",\n    upi_id: bank_recharge_momo_data?.stk || \"\",\n    usdt_wallet_address: bank_recharge_momo_data?.qr_code_image || \"\"\n  };\n  return res.render(\"wallet/usdt_manual_payment.ejs\", {\n    Amount: query?.am,\n    UsdtWalletAddress: momo.usdt_wallet_address\n  });\n};\nconst addManualUPIPaymentRequest = async (req, res) => {\n  try {\n    const data = req.body;\n    let auth = req.cookies.auth;\n    let money = parseInt(data.money);\n    let utr = parseInt(data.utr);\n    const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY);\n    if (!money || !(money >= minimumMoneyAllowed)) {\n      return res.status(400).json({\n        message: `Money is Required and it should be â¹${minimumMoneyAllowed} or above!`,\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    if (!utr && utr?.length != 12) {\n      return res.status(400).json({\n        message: `UPI Ref No. or UTR is Required And it should be 12 digit long`,\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    const user = await getUserDataByAuthToken(auth);\n    const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({\n      phone: user.phone,\n      status: PaymentStatusMap.PENDING,\n      type: PaymentMethodsMap.UPI_GATEWAY\n    });\n    if (pendingRechargeList.length !== 0) {\n      const deleteRechargeQueries = pendingRechargeList.map(recharge => {\n        return rechargeTable.cancelById(recharge.id);\n      });\n      await Promise.all(deleteRechargeQueries);\n    }\n    const orderId = getRechargeOrderId();\n    const newRecharge = {\n      orderId: orderId,\n      transactionId: 'NULL',\n      utr: utr,\n      phone: user.phone,\n      money: money,\n      type: PaymentMethodsMap.UPI_MANUAL,\n      status: 0,\n      today: rechargeTable.getCurrentTimeForTodayField(),\n      url: \"NULL\",\n      time: timeNow\n    };\n    const recharge = await rechargeTable.create(newRecharge);\n    return res.status(200).json({\n      message: 'Payment Requested successfully Your Balance will update shortly!',\n      recharge: recharge,\n      status: true,\n      timeStamp: timeNow\n    });\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      status: false,\n      message: \"Something went wrong!\",\n      timestamp: timeNow\n    });\n  }\n};\nconst addManualUSDTPaymentRequest = async (req, res) => {\n  try {\n    const data = req.body;\n    let auth = req.cookies.auth;\n    let money_usdt = parseInt(data.money);\n    let money = money_usdt * 82;\n    let utr = parseInt(data.utr);\n    const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY);\n    if (!money || !(money >= minimumMoneyAllowed)) {\n      return res.status(400).json({\n        message: `Money is Required and it should be â¹${minimumMoneyAllowed} or ${(minimumMoneyAllowed / 82).toFixed(2)} or above!`,\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    if (!utr) {\n      return res.status(400).json({\n        message: `Ref No. or UTR is Required`,\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    const user = await getUserDataByAuthToken(auth);\n    const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({\n      phone: user.phone,\n      status: PaymentStatusMap.PENDING,\n      type: PaymentMethodsMap.UPI_GATEWAY\n    });\n    if (pendingRechargeList.length !== 0) {\n      const deleteRechargeQueries = pendingRechargeList.map(recharge => {\n        return rechargeTable.cancelById(recharge.id);\n      });\n      await Promise.all(deleteRechargeQueries);\n    }\n    const orderId = getRechargeOrderId();\n    const newRecharge = {\n      orderId: orderId,\n      transactionId: 'NULL',\n      utr: utr,\n      phone: user.phone,\n      money: money,\n      type: PaymentMethodsMap.USDT_MANUAL,\n      status: 0,\n      today: rechargeTable.getCurrentTimeForTodayField(),\n      url: \"NULL\",\n      time: timeNow\n    };\n    const recharge = await rechargeTable.create(newRecharge);\n    return res.status(200).json({\n      message: 'Payment Requested successfully Your Balance will update shortly!',\n      recharge: recharge,\n      status: true,\n      timeStamp: timeNow\n    });\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      status: false,\n      message: \"Something went wrong!\",\n      timestamp: timeNow\n    });\n  }\n};\nconst initiateUPIPayment = async (req, res) => {\n  const type = PaymentMethodsMap.UPI_GATEWAY;\n  let auth = req.cookies.auth;\n  let money = parseInt(req.body.money);\n  const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY);\n  if (!money || !(money >= minimumMoneyAllowed)) {\n    return res.status(400).json({\n      message: `Money is Required and it should be â¹${minimumMoneyAllowed} or above!`,\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  try {\n    const user = await getUserDataByAuthToken(auth);\n    const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({\n      phone: user.phone,\n      status: PaymentStatusMap.PENDING,\n      type: PaymentMethodsMap.UPI_GATEWAY\n    });\n    if (pendingRechargeList.length !== 0) {\n      const deleteRechargeQueries = pendingRechargeList.map(recharge => {\n        return rechargeTable.cancelById(recharge.id);\n      });\n      await Promise.all(deleteRechargeQueries);\n    }\n    const orderId = getRechargeOrderId();\n    const ekqrResponse = await axios.post('https://api.ekqr.in/api/create_order', {\n      key: process.env.UPI_GATEWAY_PAYMENT_KEY,\n      client_txn_id: orderId,\n      amount: String(money),\n      p_info: process.env.PAYMENT_INFO,\n      customer_name: user.username,\n      customer_email: process.env.PAYMENT_EMAIL,\n      customer_mobile: user.phone,\n      redirect_url: `${process.env.APP_BASE_URL}/wallet/verify/upi`,\n      udf1: process.env.APP_NAME\n    });\n    const ekqrData = ekqrResponse?.data;\n    if (ekqrData === undefined || ekqrData.status === false) {\n      throw Error(\"Gateway er!#ror from ekqr!\");\n    }\n    const newRecharge = {\n      orderId: orderId,\n      transactionId: 'NULL',\n      utr: null,\n      phone: user.phone,\n      money: money,\n      type: type,\n      status: 0,\n      today: rechargeTable.getCurrentTimeForTodayField(),\n      url: ekqrData.data.payment_url,\n      time: timeNow\n    };\n    const recharge = await rechargeTable.create(newRecharge);\n    console.log(ekqrData);\n    return res.status(200).json({\n      message: 'Payment Initiated successfully',\n      recharge: recharge,\n      urls: {\n        web_url: ekqrData.data.payment_url,\n        bhim_link: ekqrData.data?.upi_intent?.bhim_link || \"\",\n        phonepe_link: ekqrData.data?.upi_intent?.phonepe_link || \"\",\n        paytm_link: ekqrData.data?.upi_intent?.paytm_link || \"\",\n        gpay_link: ekqrData.data?.upi_intent?.gpay_link || \"\"\n      },\n      status: true,\n      timeStamp: timeNow\n    });\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      status: false,\n      message: \"Something went wrong!\",\n      timestamp: timeNow\n    });\n  }\n};\nconst verifyUPIPayment = async (req, res) => {\n  const type = PaymentMethodsMap.UPI_GATEWAY;\n  let auth = req.cookies.auth;\n  let orderId = req.query.client_txn_id;\n  if (!auth || !orderId) {\n    return res.status(400).json({\n      message: `orderId is Required!`,\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  try {\n    const user = await getUserDataByAuthToken(auth);\n    const recharge = await rechargeTable.getRechargeByOrderId({\n      orderId\n    });\n    if (!recharge) {\n      return res.status(400).json({\n        message: `Unable to find recharge with this order id!`,\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    const ekqrResponse = await axios.post('https://api.ekqr.in/api/check_order_status', {\n      key: process.env.UPI_GATEWAY_PAYMENT_KEY,\n      client_txn_id: orderId,\n      txn_date: rechargeTable.getDMYDateOfTodayFiled(recharge.today)\n    });\n    const ekqrData = ekqrResponse?.data;\n    if (ekqrData === undefined || ekqrData.status === false) {\n      throw Error(\"Gateway error from ekqr!\");\n    }\n    if (ekqrData.data.status === \"created\") {\n      return res.status(200).json({\n        message: 'Your payment request is just created',\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    if (ekqrData.data.status === \"scanning\") {\n      return res.status(200).json({\n        message: 'Waiting for confirmation',\n        status: false,\n        timeStamp: timeNow\n      });\n    }\n    if (ekqrData.data.status === 'success') {\n      if (recharge.status === PaymentStatusMap.PENDING || recharge.status === PaymentStatusMap.CANCELLED) {\n        await rechargeTable.setStatusToSuccessByIdAndOrderId({\n          id: recharge.id,\n          orderId: recharge.orderId\n        });\n        await addUserAccountBalance({\n          phone: user.phone,\n          money: recharge.money,\n          code: user.code,\n          invite: user.invite\n        });\n      }\n\n      // return res.status(200).json({\n      //     status: true,\n      //     message: \"Payment verified\",\n      //     timestamp: timeNow\n      // })\n      return res.redirect(\"/wallet/rechargerecord\");\n    }\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      status: false,\n      message: \"Something went wrong!\",\n      timestamp: timeNow\n    });\n  }\n};\nconst initiateWowPayPayment = async (req, res) => {\n  const type = PaymentMethodsMap.WOW_PAY;\n  let auth = req.cookies.auth;\n  let money = parseInt(req.query.money);\n  const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY);\n  if (!money || !(money >= minimumMoneyAllowed)) {\n    return res.status(400).json({\n      message: `Money is Required and it should be â¹${minimumMoneyAllowed} or above!`,\n      status: false,\n      timeStamp: timeNow\n    });\n  }\n  try {\n    const user = await getUserDataByAuthToken(auth);\n    const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({\n      phone: user.phone,\n      status: PaymentStatusMap.PENDING,\n      type: PaymentMethodsMap.UPI_GATEWAY\n    });\n    if (pendingRechargeList.length !== 0) {\n      const deleteRechargeQueries = pendingRechargeList.map(recharge => {\n        return rechargeTable.cancelById(recharge.id);\n      });\n      await Promise.all(deleteRechargeQueries);\n    }\n    const orderId = getRechargeOrderId();\n    const date = wowpay.getCurrentDate();\n    const params = {\n      version: '1.0',\n      // mch_id: 222887002,\n      mch_id: process.env.WOWPAY_MERCHANT_ID,\n      mch_order_no: orderId,\n      // pay_type: '151',\n      pay_type: '151',\n      trade_amount: money,\n      order_date: date,\n      goods_name: user.phone,\n      // notify_url: `${process.env.APP_BASE_URL}/wallet/verify/wowpay`,\n      notify_url: `https://999club.site/wallet/verify/wowpay`,\n      mch_return_msg: user.phone\n      // payment_key: 'TZLMQ1QWJCUSFLH02LAYRZBJ1WK7IHSG',\n    };\n    params.page_url = 'https://999club.site/wallet/verify/wowpay';\n    params.sign = wowpay.generateSign(params, process.env.WOWPAY_MERCHANT_KEY);\n    // params.sign = wowpay.generateSign(params, 'TZLMQ1QWJCUSFLH02LAYRZBJ1WK7IHSG');\n    // params.sign = wowpay.generateSign(params, 'MZBG89MDIBEDWJOJQYEZVSNP8EEVMSPM');\n    params.sign_type = \"MD5\";\n    console.log(params);\n    const response = await axios({\n      method: \"post\",\n      url: 'https://pay6de1c7.wowpayglb.com/pay/web',\n      data: querystring.stringify(params)\n    });\n    console.log(response.data);\n    if (response.data.respCode === \"SUCCESS\" && response.data.payInfo) {\n      return res.status(200).json({\n        message: \"Payment requested Successfully\",\n        payment_url: response.data.payInfo,\n        status: true,\n        timeStamp: timeNow\n      });\n    }\n    return res.status(400).json({\n      message: \"Payment request failed. Please try again Or Wrong Details.\",\n      status: false,\n      timeStamp: timeNow\n    });\n  } catch (error) {\n    console.log(error);\n    return res.status(500).json({\n      status: false,\n      message: \"Something went wrong!\",\n      timestamp: timeNow\n    });\n  }\n};\nconst verifyWowPayPayment = async (req, res) => {\n  try {\n    const type = PaymentMethodsMap.WOW_PAY;\n    let data = req.body;\n    if (!req.body) {\n      data = req.query;\n    }\n    console.log(data);\n    let merchant_key = process.env.WOWPAY_MERCHANT_KEY;\n    const params = {\n      mchId: process.env.WOWPAY_MERCHANT_ID,\n      amount: data.amount || '',\n      mchOrderNo: data.mchOrderNo || '',\n      merRetMsg: data.merRetMsg || '',\n      orderDate: data.orderDate || '',\n      orderNo: data.orderNo || '',\n      oriAmount: data.oriAmount || '',\n      tradeResult: data.tradeResult || '',\n      signType: data.signType || '',\n      sign: data.sign || ''\n    };\n    let signStr = \"\";\n    signStr += \"amount=\" + params.amount + \"&\";\n    signStr += \"mchId=\" + params.mchId + \"&\";\n    signStr += \"mchOrderNo=\" + params.mchOrderNo + \"&\";\n    signStr += \"merRetMsg=\" + params.merRetMsg + \"&\";\n    signStr += \"orderDate=\" + params.orderDate + \"&\";\n    signStr += \"orderNo=\" + params.orderNo + \"&\";\n    signStr += \"oriAmount=\" + params.oriAmount + \"&\";\n    signStr += \"tradeResult=\" + params.tradeResult;\n    let flag = wowpay.validateSignByKey(signStr, merchant_key, params.sign);\n    if (!flag) {\n      console.log({\n        status: false,\n        message: \"Something went wrong!\",\n        flag,\n        timestamp: timeNow\n      });\n      return res.status(400).json({\n        status: false,\n        message: \"Something went wrong!\",\n        flag,\n        timestamp: timeNow\n      });\n    }\n    const newRechargeParams = {\n      orderId: params.mchOrderNo,\n      transactionId: 'NULL',\n      utr: null,\n      phone: params.merRetMsg,\n      money: params.amount,\n      type: type,\n      status: PaymentStatusMap.SUCCESS,\n      today: rechargeTable.getCurrentTimeForTodayField(),\n      url: 'NULL',\n      time: timeNow\n    };\n    const recharge = await rechargeTable.getRechargeByOrderId({\n      orderId: newRechargeParams.orderId\n    });\n    if (!!recharge) {\n      console.log({\n        message: `Recharge already verified!`,\n        status: true,\n        timeStamp: timeNow\n      });\n      return res.status(400).json({\n        message: `Recharge already verified!`,\n        status: true,\n        timeStamp: timeNow\n      });\n    }\n    await rechargeTable.create(newRechargeParams);\n    await addUserAccountBalance({\n      phone: user.phone,\n      money: recharge.money,\n      code: user.code,\n      invite: user.invite\n    });\n    return res.redirect(\"/wallet/rechargerecord\");\n  } catch (error) {\n    console.log({\n      status: false,\n      message: \"Something went wrong!\",\n      timestamp: timeNow\n    });\n    return res.status(500).json({\n      status: false,\n      message: \"Something went wrong!\",\n      timestamp: timeNow\n    });\n  }\n};\n\n// helpers ---------------\nconst getUserDataByAuthToken = async authToken => {\n  let [users] = await connection.query('SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? ', [authToken]);\n  const user = users?.[0];\n  if (user === undefined || user === null) {\n    throw Error(\"Unable to get user data!\");\n  }\n  return {\n    phone: user.phone,\n    code: user.code,\n    username: user.name_user,\n    invite: user.invite\n  };\n};\nconst addUserAccountBalance = async ({\n  money,\n  phone,\n  invite\n}) => {\n  const user_money = money + money / 100 * 5;\n  const inviter_money = money + money / 100 * 3;\n  await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE `phone` = ?', [user_money, user_money, phone]);\n  const [inviter] = await connection.query('SELECT phone FROM users WHERE `code` = ?', [invite]);\n  if (inviter.length) {\n    console.log(inviter);\n    console.log(inviter_money, inviter_money, invite, inviter?.[0].phone);\n    await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE `code` = ? AND `phone` = ?', [inviter_money, inviter_money, invite, inviter?.[0].phone]);\n    console.log(\"SUCCESSFULLY ADD MONEY TO inviter\");\n  }\n};\nconst getRechargeOrderId = () => {\n  const date = new Date();\n  let id_time = date.getUTCFullYear() + '' + date.getUTCMonth() + 1 + '' + date.getUTCDate();\n  let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\n  return id_time + id_order;\n};\nconst rechargeTable = {\n  getRecordByPhoneAndStatus: async ({\n    phone,\n    status,\n    type\n  }) => {\n    if (![PaymentStatusMap.SUCCESS, PaymentStatusMap.CANCELLED, PaymentStatusMap.PENDING].includes(status)) {\n      throw Error(\"Invalid Payment Status!\");\n    }\n    let recharge;\n    if (type) {\n      [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? AND type = ?', [phone, status, type]);\n    } else {\n      [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ?', [phone, status]);\n    }\n    return recharge.map(item => ({\n      id: item.id,\n      orderId: item.id_order,\n      transactionId: item.transaction_id,\n      utr: item.utr,\n      phone: item.phone,\n      money: item.money,\n      type: item.type,\n      status: item.status,\n      today: item.today,\n      url: item.url,\n      time: item.time\n    }));\n  },\n  getRechargeByOrderId: async ({\n    orderId\n  }) => {\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE id_order = ?', [orderId]);\n    if (recharge.length === 0) {\n      return null;\n    }\n    return recharge.map(item => ({\n      id: item.id,\n      orderId: item.id_order,\n      transactionId: item.transaction_id,\n      utr: item.utr,\n      phone: item.phone,\n      money: item.money,\n      type: item.type,\n      status: item.status,\n      today: item.today,\n      url: item.url,\n      time: item.time\n    }))?.[0];\n  },\n  cancelById: async id => {\n    if (typeof id !== \"number\") {\n      throw Error(\"Invalid Recharge 'id' expected a number!\");\n    }\n    await connection.query('UPDATE recharge SET status = 2 WHERE id = ?', [id]);\n  },\n  setStatusToSuccessByIdAndOrderId: async ({\n    id,\n    orderId\n  }) => {\n    if (typeof id !== \"number\") {\n      throw Error(\"Invalid Recharge 'id' expected a number!\");\n    }\n    console.log(id, orderId);\n    const [re] = await connection.query('UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ?', [id, orderId]);\n    console.log(re);\n  },\n  getCurrentTimeForTodayField: () => {\n    return moment().format(\"YYYY-DD-MM h:mm:ss A\");\n  },\n  getDMYDateOfTodayFiled: today => {\n    return moment(today, \"YYYY-DD-MM h:mm:ss A\").format(\"DD-MM-YYYY\");\n  },\n  create: async newRecharge => {\n    if (newRecharge.url === undefined || newRecharge.url === null) {\n      newRecharge.url = \"0\";\n    }\n    await connection.query(`INSERT INTO recharge SET id_order = ?, transaction_id = ?, phone = ?, money = ?, type = ?, status = ?, today = ?, url = ?, time = ?, utr = ?`, [newRecharge.orderId, newRecharge.transactionId, newRecharge.phone, newRecharge.money, newRecharge.type, newRecharge.status, newRecharge.today, newRecharge.url, newRecharge.time, newRecharge?.utr || \"NULL\"]);\n    const [recharge] = await connection.query('SELECT * FROM recharge WHERE id_order = ?', [newRecharge.orderId]);\n    if (recharge.length === 0) {\n      throw Error(\"Unable to create recharge!\");\n    }\n    return recharge[0];\n  }\n};\nconst wowpay = {\n  generateSign: (params, secretKey) => {\n    let keys = Object.keys(params).sort();\n    let string = [];\n    for (let key of keys) {\n      if (key === 'sign') continue;\n      string.push(key + '=' + params[key]);\n    }\n    let signStr = string.join('&') + '&key=' + secretKey;\n    return crypto.createHash('md5').update(signStr).digest('hex');\n  },\n  validateSignByKey(signSource, key, retSign) {\n    if (key) {\n      signSource = signSource + \"&key=\" + key;\n    }\n    const signKey = crypto.createHash(\"md5\").update(signSource).digest(\"hex\");\n    return signKey === retSign;\n  },\n  getCurrentDate: () => {\n    return moment().format(\"YYYY-MM-DD H:mm:ss\");\n  }\n};\nmodule.exports = {\n  initiateUPIPayment,\n  verifyUPIPayment,\n  initiateWowPayPayment,\n  verifyWowPayPayment,\n  initiateManualUPIPayment,\n  addManualUPIPaymentRequest,\n  addManualUSDTPaymentRequest,\n  initiateManualUSDTPayment\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["connection","require","axios","moment","crypto","querystring","timeNow","Date","now","PaymentStatusMap","PENDING","SUCCESS","CANCELLED","PaymentMethodsMap","UPI_GATEWAY","UPI_MANUAL","USDT_MANUAL","WOW_PAY","USDT","initiateManualUPIPayment","req","res","query","bank_recharge_momo","bank_recharge_momo_data","length","momo","bank_name","name_bank","username","name_user","upi_id","stk","usdt_wallet_address","qr_code_image","render","Amount","am","extra","ekyc","UpiId","initiateManualUSDTPayment","UsdtWalletAddress","addManualUPIPaymentRequest","data","body","auth","cookies","money","parseInt","utr","minimumMoneyAllowed","process","env","MINIMUM_MONEY","status","json","message","timeStamp","user","getUserDataByAuthToken","pendingRechargeList","rechargeTable","getRecordByPhoneAndStatus","phone","type","deleteRechargeQueries","map","recharge","cancelById","id","Promise","all","orderId","getRechargeOrderId","newRecharge","transactionId","today","getCurrentTimeForTodayField","url","time","create","error","console","log","timestamp","addManualUSDTPaymentRequest","money_usdt","toFixed","initiateUPIPayment","ekqrResponse","post","key","UPI_GATEWAY_PAYMENT_KEY","client_txn_id","amount","String","p_info","PAYMENT_INFO","customer_name","customer_email","PAYMENT_EMAIL","customer_mobile","redirect_url","APP_BASE_URL","udf1","APP_NAME","ekqrData","undefined","Error","payment_url","urls","web_url","bhim_link","upi_intent","phonepe_link","paytm_link","gpay_link","verifyUPIPayment","getRechargeByOrderId","txn_date","getDMYDateOfTodayFiled","setStatusToSuccessByIdAndOrderId","addUserAccountBalance","code","invite","redirect","initiateWowPayPayment","date","wowpay","getCurrentDate","params","version","mch_id","WOWPAY_MERCHANT_ID","mch_order_no","pay_type","trade_amount","order_date","goods_name","notify_url","mch_return_msg","page_url","sign","generateSign","WOWPAY_MERCHANT_KEY","sign_type","response","method","stringify","respCode","payInfo","verifyWowPayPayment","merchant_key","mchId","mchOrderNo","merRetMsg","orderDate","orderNo","oriAmount","tradeResult","signType","signStr","flag","validateSignByKey","newRechargeParams","authToken","users","user_money","inviter_money","inviter","id_time","getUTCFullYear","getUTCMonth","getUTCDate","id_order","Math","floor","random","includes","item","transaction_id","re","format","secretKey","keys","Object","sort","string","push","join","createHash","update","digest","signSource","retSign","signKey","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["paymentController.js"],"sourcesContent":["const connection = require(\"../config/connectDB\");\r\nconst axios = require('axios');\r\nconst moment = require(\"moment\");\r\nconst crypto = require(\"crypto\");\r\nconst querystring = require(\"querystring\")\r\n\r\nlet timeNow = Date.now();\r\n\r\nconst PaymentStatusMap = {\r\n    PENDING: 0,\r\n    SUCCESS: 1,\r\n    CANCELLED: 2\r\n}\r\n\r\nconst PaymentMethodsMap = {\r\n    UPI_GATEWAY: \"upi_gateway\",\r\n    UPI_MANUAL: \"upi_manual\",\r\n    USDT_MANUAL: \"usdt_manual\",\r\n    WOW_PAY: \"wow_pay\",\r\n    USDT: \"usdt\",\r\n}\r\n\r\nconst initiateManualUPIPayment = async (req, res) => {\r\n    const query = req.query\r\n\r\n    const [bank_recharge_momo] = await connection.query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\r\n\r\n    let bank_recharge_momo_data\r\n    if (bank_recharge_momo.length) {\r\n        bank_recharge_momo_data = bank_recharge_momo[0]\r\n    }\r\n\r\n    const momo = {\r\n        bank_name: bank_recharge_momo_data?.name_bank || \"\",\r\n        username: bank_recharge_momo_data?.name_user || \"\",\r\n        upi_id: bank_recharge_momo_data?.stk || \"\",\r\n        usdt_wallet_address: bank_recharge_momo_data?.qr_code_image || \"\",\r\n    }\r\n\r\n    return res.render(\"wallet/manual_payment.ejs\", {\r\n        Amount: query?.am,\r\n        extra:query?.extra,\r\n        ekyc:query?.ekyc,\r\n        UpiId: momo.upi_id,\r\n    });\r\n}\r\n\r\nconst initiateManualUSDTPayment = async (req, res) => {\r\n    const query = req.query\r\n\r\n    const [bank_recharge_momo] = await connection.query(\"SELECT * FROM bank_recharge WHERE type = 'momo'\");\r\n\r\n    let bank_recharge_momo_data\r\n    if (bank_recharge_momo.length) {\r\n        bank_recharge_momo_data = bank_recharge_momo[0]\r\n    }\r\n\r\n    const momo = {\r\n        bank_name: bank_recharge_momo_data?.name_bank || \"\",\r\n        username: bank_recharge_momo_data?.name_user || \"\",\r\n        upi_id: bank_recharge_momo_data?.stk || \"\",\r\n        usdt_wallet_address: bank_recharge_momo_data?.qr_code_image || \"\",\r\n    }\r\n\r\n    return res.render(\"wallet/usdt_manual_payment.ejs\", {\r\n        Amount: query?.am,\r\n        UsdtWalletAddress: momo.usdt_wallet_address,\r\n    });\r\n}\r\n\r\nconst addManualUPIPaymentRequest = async (req, res) => {\r\n    try {\r\n        const data = req.body\r\n        let auth = req.cookies.auth;\r\n        let money = parseInt(data.money);\r\n        let utr = parseInt(data.utr);\r\n        const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY)\r\n\r\n        if (!money || !(money >= minimumMoneyAllowed)) {\r\n            return res.status(400).json({\r\n                message: `Money is Required and it should be â¹${minimumMoneyAllowed} or above!`,\r\n                status: false,\r\n                timeStamp: timeNow,\r\n            })\r\n        }\r\n\r\n        if (!utr && utr?.length != 12) {\r\n            return res.status(400).json({\r\n                message: `UPI Ref No. or UTR is Required And it should be 12 digit long`,\r\n                status: false,\r\n                timeStamp: timeNow,\r\n            })\r\n        }\r\n\r\n        const user = await getUserDataByAuthToken(auth)\r\n\r\n        const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({ phone: user.phone, status: PaymentStatusMap.PENDING, type: PaymentMethodsMap.UPI_GATEWAY })\r\n\r\n        if (pendingRechargeList.length !== 0) {\r\n            const deleteRechargeQueries = pendingRechargeList.map(recharge => {\r\n                return rechargeTable.cancelById(recharge.id)\r\n            });\r\n\r\n            await Promise.all(deleteRechargeQueries)\r\n        }\r\n\r\n        const orderId = getRechargeOrderId()\r\n\r\n        const newRecharge = {\r\n            orderId: orderId,\r\n            transactionId: 'NULL',\r\n            utr: utr,\r\n            phone: user.phone,\r\n            money: money,\r\n            type: PaymentMethodsMap.UPI_MANUAL,\r\n            status: 0,\r\n            today: rechargeTable.getCurrentTimeForTodayField(),\r\n            url: \"NULL\",\r\n            time: timeNow,\r\n        }\r\n\r\n        const recharge = await rechargeTable.create(newRecharge)\r\n\r\n        return res.status(200).json({\r\n            message: 'Payment Requested successfully Your Balance will update shortly!',\r\n            recharge: recharge,\r\n            status: true,\r\n            timeStamp: timeNow,\r\n        });\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n        res.status(500).json({\r\n            status: false,\r\n            message: \"Something went wrong!\",\r\n            timestamp: timeNow\r\n        })\r\n    }\r\n}\r\n\r\nconst addManualUSDTPaymentRequest = async (req, res) => {\r\n    try {\r\n        const data = req.body\r\n        let auth = req.cookies.auth;\r\n        let money_usdt = parseInt(data.money);\r\n        let money = money_usdt * 82;\r\n        let utr = parseInt(data.utr);\r\n        const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY)\r\n\r\n        if (!money || !(money >= minimumMoneyAllowed)) {\r\n            return res.status(400).json({\r\n                message: `Money is Required and it should be â¹${minimumMoneyAllowed} or ${(minimumMoneyAllowed / 82).toFixed(2)} or above!`,\r\n                status: false,\r\n                timeStamp: timeNow,\r\n            })\r\n        }\r\n\r\n        if (!utr) {\r\n            return res.status(400).json({\r\n                message: `Ref No. or UTR is Required`,\r\n                status: false,\r\n                timeStamp: timeNow,\r\n            })\r\n        }\r\n\r\n        const user = await getUserDataByAuthToken(auth)\r\n\r\n        const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({ phone: user.phone, status: PaymentStatusMap.PENDING, type: PaymentMethodsMap.UPI_GATEWAY })\r\n\r\n        if (pendingRechargeList.length !== 0) {\r\n            const deleteRechargeQueries = pendingRechargeList.map(recharge => {\r\n                return rechargeTable.cancelById(recharge.id)\r\n            });\r\n\r\n            await Promise.all(deleteRechargeQueries)\r\n        }\r\n\r\n        const orderId = getRechargeOrderId()\r\n\r\n        const newRecharge = {\r\n            orderId: orderId,\r\n            transactionId: 'NULL',\r\n            utr: utr,\r\n            phone: user.phone,\r\n            money: money,\r\n            type: PaymentMethodsMap.USDT_MANUAL,\r\n            status: 0,\r\n            today: rechargeTable.getCurrentTimeForTodayField(),\r\n            url: \"NULL\",\r\n            time: timeNow,\r\n        }\r\n\r\n        const recharge = await rechargeTable.create(newRecharge)\r\n\r\n        return res.status(200).json({\r\n            message: 'Payment Requested successfully Your Balance will update shortly!',\r\n            recharge: recharge,\r\n            status: true,\r\n            timeStamp: timeNow,\r\n        });\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n        res.status(500).json({\r\n            status: false,\r\n            message: \"Something went wrong!\",\r\n            timestamp: timeNow\r\n        })\r\n    }\r\n}\r\n\r\nconst initiateUPIPayment = async (req, res) => {\r\n    const type = PaymentMethodsMap.UPI_GATEWAY\r\n    let auth = req.cookies.auth;\r\n    let money = parseInt(req.body.money);\r\n\r\n    const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY)\r\n\r\n    if (!money || !(money >= minimumMoneyAllowed)) {\r\n        return res.status(400).json({\r\n            message: `Money is Required and it should be â¹${minimumMoneyAllowed} or above!`,\r\n            status: false,\r\n            timeStamp: timeNow,\r\n        })\r\n    }\r\n\r\n    try {\r\n        const user = await getUserDataByAuthToken(auth)\r\n\r\n        const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({ phone: user.phone, status: PaymentStatusMap.PENDING, type: PaymentMethodsMap.UPI_GATEWAY })\r\n\r\n        if (pendingRechargeList.length !== 0) {\r\n            const deleteRechargeQueries = pendingRechargeList.map(recharge => {\r\n                return rechargeTable.cancelById(recharge.id)\r\n            });\r\n\r\n            await Promise.all(deleteRechargeQueries)\r\n        }\r\n\r\n        const orderId = getRechargeOrderId()\r\n\r\n        const ekqrResponse = await axios.post('https://api.ekqr.in/api/create_order', {\r\n            key: process.env.UPI_GATEWAY_PAYMENT_KEY,\r\n            client_txn_id: orderId,\r\n            amount: String(money),\r\n            p_info: process.env.PAYMENT_INFO,\r\n            customer_name: user.username,\r\n            customer_email: process.env.PAYMENT_EMAIL,\r\n            customer_mobile: user.phone,\r\n            redirect_url: `${process.env.APP_BASE_URL}/wallet/verify/upi`,\r\n            udf1: process.env.APP_NAME,\r\n        })\r\n\r\n        const ekqrData = ekqrResponse?.data\r\n\r\n        if (ekqrData === undefined || ekqrData.status === false) {\r\n            throw Error(\"Gateway er!#ror from ekqr!\")\r\n        }\r\n\r\n        const newRecharge = {\r\n            orderId: orderId,\r\n            transactionId: 'NULL',\r\n            utr: null,\r\n            phone: user.phone,\r\n            money: money,\r\n            type: type,\r\n            status: 0,\r\n            today: rechargeTable.getCurrentTimeForTodayField(),\r\n            url: ekqrData.data.payment_url,\r\n            time: timeNow,\r\n        }\r\n\r\n        const recharge = await rechargeTable.create(newRecharge)\r\n\r\n        console.log(ekqrData)\r\n\r\n        return res.status(200).json({\r\n            message: 'Payment Initiated successfully',\r\n            recharge: recharge,\r\n            urls: {\r\n                web_url: ekqrData.data.payment_url,\r\n                bhim_link: ekqrData.data?.upi_intent?.bhim_link || \"\",\r\n                phonepe_link: ekqrData.data?.upi_intent?.phonepe_link || \"\",\r\n                paytm_link: ekqrData.data?.upi_intent?.paytm_link || \"\",\r\n                gpay_link: ekqrData.data?.upi_intent?.gpay_link || \"\",\r\n            },\r\n            status: true,\r\n            timeStamp: timeNow,\r\n        });\r\n    } catch (error) {\r\n        console.log(error)\r\n\r\n        res.status(500).json({\r\n            status: false,\r\n            message: \"Something went wrong!\",\r\n            timestamp: timeNow\r\n        })\r\n    }\r\n}\r\n\r\nconst verifyUPIPayment = async (req, res) => {\r\n    const type = PaymentMethodsMap.UPI_GATEWAY\r\n    let auth = req.cookies.auth;\r\n    let orderId = req.query.client_txn_id;\r\n\r\n    if (!auth || !orderId) {\r\n        return res.status(400).json({\r\n            message: `orderId is Required!`,\r\n            status: false,\r\n            timeStamp: timeNow,\r\n        })\r\n    }\r\n    try {\r\n        const user = await getUserDataByAuthToken(auth)\r\n\r\n        const recharge = await rechargeTable.getRechargeByOrderId({ orderId })\r\n\r\n        if (!recharge) {\r\n            return res.status(400).json({\r\n                message: `Unable to find recharge with this order id!`,\r\n                status: false,\r\n                timeStamp: timeNow,\r\n            })\r\n        }\r\n\r\n        const ekqrResponse = await axios.post('https://api.ekqr.in/api/check_order_status', {\r\n            key: process.env.UPI_GATEWAY_PAYMENT_KEY,\r\n            client_txn_id: orderId,\r\n            txn_date: rechargeTable.getDMYDateOfTodayFiled(recharge.today),\r\n        });\r\n\r\n        const ekqrData = ekqrResponse?.data\r\n\r\n        if (ekqrData === undefined || ekqrData.status === false) {\r\n            throw Error(\"Gateway error from ekqr!\")\r\n        }\r\n\r\n        if (ekqrData.data.status === \"created\") {\r\n            return res.status(200).json({\r\n                message: 'Your payment request is just created',\r\n                status: false,\r\n                timeStamp: timeNow,\r\n            });\r\n        }\r\n\r\n        if (ekqrData.data.status === \"scanning\") {\r\n            return res.status(200).json({\r\n                message: 'Waiting for confirmation',\r\n                status: false,\r\n                timeStamp: timeNow,\r\n            });\r\n        }\r\n\r\n        if (ekqrData.data.status === 'success') {\r\n\r\n            if (recharge.status === PaymentStatusMap.PENDING || recharge.status === PaymentStatusMap.CANCELLED) {\r\n\r\n                await rechargeTable.setStatusToSuccessByIdAndOrderId({\r\n                    id: recharge.id,\r\n                    orderId: recharge.orderId\r\n                })\r\n\r\n                await addUserAccountBalance({\r\n                    phone: user.phone,\r\n                    money: recharge.money,\r\n                    code: user.code,\r\n                    invite: user.invite,\r\n                })\r\n            }\r\n\r\n            // return res.status(200).json({\r\n            //     status: true,\r\n            //     message: \"Payment verified\",\r\n            //     timestamp: timeNow\r\n            // })\r\n            return res.redirect(\"/wallet/rechargerecord\")\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log(error)\r\n        res.status(500).json({\r\n            status: false,\r\n            message: \"Something went wrong!\",\r\n            timestamp: timeNow\r\n        })\r\n    }\r\n}\r\n\r\nconst initiateWowPayPayment = async (req, res) => {\r\n    const type = PaymentMethodsMap.WOW_PAY\r\n    let auth = req.cookies.auth;\r\n    let money = parseInt(req.query.money);\r\n\r\n    const minimumMoneyAllowed = parseInt(process.env.MINIMUM_MONEY)\r\n\r\n    if (!money || !(money >= minimumMoneyAllowed)) {\r\n        return res.status(400).json({\r\n            message: `Money is Required and it should be â¹${minimumMoneyAllowed} or above!`,\r\n            status: false,\r\n            timeStamp: timeNow,\r\n        })\r\n    }\r\n\r\n    try {\r\n        const user = await getUserDataByAuthToken(auth)\r\n\r\n        const pendingRechargeList = await rechargeTable.getRecordByPhoneAndStatus({ phone: user.phone, status: PaymentStatusMap.PENDING, type: PaymentMethodsMap.UPI_GATEWAY })\r\n\r\n        if (pendingRechargeList.length !== 0) {\r\n            const deleteRechargeQueries = pendingRechargeList.map(recharge => {\r\n                return rechargeTable.cancelById(recharge.id)\r\n            });\r\n\r\n            await Promise.all(deleteRechargeQueries)\r\n        }\r\n\r\n        const orderId = getRechargeOrderId()\r\n        const date = wowpay.getCurrentDate()\r\n\r\n        const params = {\r\n            version: '1.0',\r\n            // mch_id: 222887002,\r\n            mch_id: process.env.WOWPAY_MERCHANT_ID,\r\n            mch_order_no: orderId,\r\n            // pay_type: '151',\r\n            pay_type: '151',\r\n            trade_amount: money,\r\n            order_date: date,\r\n            goods_name: user.phone,\r\n            // notify_url: `${process.env.APP_BASE_URL}/wallet/verify/wowpay`,\r\n            notify_url: `https://999club.site/wallet/verify/wowpay`,\r\n            mch_return_msg: user.phone,\r\n            // payment_key: 'TZLMQ1QWJCUSFLH02LAYRZBJ1WK7IHSG',\r\n        };\r\n\r\n        params.page_url = 'https://999club.site/wallet/verify/wowpay';\r\n\r\n        params.sign = wowpay.generateSign(params, process.env.WOWPAY_MERCHANT_KEY);\r\n        // params.sign = wowpay.generateSign(params, 'TZLMQ1QWJCUSFLH02LAYRZBJ1WK7IHSG');\r\n        // params.sign = wowpay.generateSign(params, 'MZBG89MDIBEDWJOJQYEZVSNP8EEVMSPM');\r\n        params.sign_type = \"MD5\";\r\n\r\n\r\n        console.log(params)\r\n\r\n        const response = await axios({\r\n            method: \"post\",\r\n            url: 'https://pay6de1c7.wowpayglb.com/pay/web',\r\n            data: querystring.stringify(params)\r\n        })\r\n\r\n        console.log(response.data)\r\n\r\n        if (response.data.respCode === \"SUCCESS\" && response.data.payInfo) {\r\n            return res.status(200).json({\r\n                message: \"Payment requested Successfully\",\r\n                payment_url: response.data.payInfo,\r\n                status: true,\r\n                timeStamp: timeNow,\r\n            })\r\n        }\r\n\r\n\r\n        return res.status(400).json({\r\n            message: \"Payment request failed. Please try again Or Wrong Details.\",\r\n            status: false,\r\n            timeStamp: timeNow,\r\n        })\r\n    } catch (error) {\r\n        console.log(error)\r\n        return res.status(500).json({\r\n            status: false,\r\n            message: \"Something went wrong!\",\r\n            timestamp: timeNow\r\n        })\r\n    }\r\n}\r\n\r\n\r\nconst verifyWowPayPayment = async (req, res) => {\r\n    try {\r\n        const type = PaymentMethodsMap.WOW_PAY\r\n        let data = req.body;\r\n\r\n        if (!req.body) {\r\n            data = req.query;\r\n        }\r\n\r\n        console.log(data)\r\n\r\n        let merchant_key = process.env.WOWPAY_MERCHANT_KEY;\r\n\r\n        const params = {\r\n            mchId: process.env.WOWPAY_MERCHANT_ID,\r\n            amount: data.amount || '',\r\n            mchOrderNo: data.mchOrderNo || '',\r\n            merRetMsg: data.merRetMsg || '',\r\n            orderDate: data.orderDate || '',\r\n            orderNo: data.orderNo || '',\r\n            oriAmount: data.oriAmount || '',\r\n            tradeResult: data.tradeResult || '',\r\n            signType: data.signType || '',\r\n            sign: data.sign || '',\r\n        };\r\n\r\n        let signStr = \"\";\r\n        signStr += \"amount=\" + params.amount + \"&\";\r\n        signStr += \"mchId=\" + params.mchId + \"&\";\r\n        signStr += \"mchOrderNo=\" + params.mchOrderNo + \"&\";\r\n        signStr += \"merRetMsg=\" + params.merRetMsg + \"&\";\r\n        signStr += \"orderDate=\" + params.orderDate + \"&\";\r\n        signStr += \"orderNo=\" + params.orderNo + \"&\";\r\n        signStr += \"oriAmount=\" + params.oriAmount + \"&\";\r\n        signStr += \"tradeResult=\" + params.tradeResult;\r\n\r\n        let flag = wowpay.validateSignByKey(signStr, merchant_key, params.sign);\r\n\r\n        if (!flag) {\r\n            console.log({\r\n                status: false,\r\n                message: \"Something went wrong!\",\r\n                flag,\r\n                timestamp: timeNow\r\n            })\r\n            return res.status(400).json({\r\n                status: false,\r\n                message: \"Something went wrong!\",\r\n                flag,\r\n                timestamp: timeNow\r\n            })\r\n        }\r\n\r\n        const newRechargeParams = {\r\n            orderId: params.mchOrderNo,\r\n            transactionId: 'NULL',\r\n            utr: null,\r\n            phone: params.merRetMsg,\r\n            money: params.amount,\r\n            type: type,\r\n            status: PaymentStatusMap.SUCCESS,\r\n            today: rechargeTable.getCurrentTimeForTodayField(),\r\n            url: 'NULL',\r\n            time: timeNow,\r\n        }\r\n\r\n\r\n        const recharge = await rechargeTable.getRechargeByOrderId({ orderId: newRechargeParams.orderId })\r\n\r\n        if (!!recharge) {\r\n            console.log({\r\n                message: `Recharge already verified!`,\r\n                status: true,\r\n                timeStamp: timeNow,\r\n            })\r\n            return res.status(400).json({\r\n                message: `Recharge already verified!`,\r\n                status: true,\r\n                timeStamp: timeNow,\r\n            })\r\n        }\r\n\r\n        await rechargeTable.create(newRechargeParams)\r\n\r\n        await addUserAccountBalance({\r\n            phone: user.phone,\r\n            money: recharge.money,\r\n            code: user.code,\r\n            invite: user.invite,\r\n        })\r\n\r\n        return res.redirect(\"/wallet/rechargerecord\")\r\n    } catch (error) {\r\n        console.log({\r\n            status: false,\r\n            message: \"Something went wrong!\",\r\n            timestamp: timeNow\r\n        })\r\n        return res.status(500).json({\r\n            status: false,\r\n            message: \"Something went wrong!\",\r\n            timestamp: timeNow\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// helpers ---------------\r\nconst getUserDataByAuthToken = async (authToken) => {\r\n    let [users] = await connection.query('SELECT `phone`, `code`,`name_user`,`invite` FROM users WHERE `token` = ? ', [authToken]);\r\n    const user = users?.[0]\r\n\r\n\r\n    if (user === undefined || user === null) {\r\n        throw Error(\"Unable to get user data!\")\r\n    }\r\n\r\n    return {\r\n        phone: user.phone,\r\n        code: user.code,\r\n        username: user.name_user,\r\n        invite: user.invite,\r\n    }\r\n}\r\n\r\n\r\nconst addUserAccountBalance = async ({ money, phone, invite }) => {\r\n    const user_money = money + (money / 100) * 5\r\n    const inviter_money = money + (money / 100) * 3\r\n\r\n    await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE `phone` = ?', [user_money, user_money, phone]);\r\n\r\n    const [inviter] = await connection.query('SELECT phone FROM users WHERE `code` = ?', [invite]);\r\n\r\n    if (inviter.length) {\r\n        console.log(inviter)\r\n        console.log(inviter_money, inviter_money, invite, inviter?.[0].phone)\r\n        await connection.query('UPDATE users SET money = money + ?, total_money = total_money + ? WHERE `code` = ? AND `phone` = ?', [inviter_money, inviter_money, invite, inviter?.[0].phone]);\r\n        console.log(\"SUCCESSFULLY ADD MONEY TO inviter\")\r\n    }\r\n}\r\n\r\n\r\nconst getRechargeOrderId = () => {\r\n    const date = new Date();\r\n    let id_time = date.getUTCFullYear() + '' + date.getUTCMonth() + 1 + '' + date.getUTCDate();\r\n    let id_order = Math.floor(Math.random() * (99999999999999 - 10000000000000 + 1)) + 10000000000000;\r\n\r\n    return id_time + id_order\r\n}\r\n\r\nconst rechargeTable = {\r\n    getRecordByPhoneAndStatus: async ({ phone, status, type }) => {\r\n        if (![PaymentStatusMap.SUCCESS, PaymentStatusMap.CANCELLED, PaymentStatusMap.PENDING].includes(status)) {\r\n            throw Error(\"Invalid Payment Status!\")\r\n        }\r\n\r\n        let recharge\r\n\r\n        if (type) {\r\n            [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ? AND type = ?', [phone, status, type]);\r\n        } else {\r\n            [recharge] = await connection.query('SELECT * FROM recharge WHERE phone = ? AND status = ?', [phone, status]);\r\n        }\r\n\r\n        return recharge.map((item) => ({\r\n            id: item.id,\r\n            orderId: item.id_order,\r\n            transactionId: item.transaction_id,\r\n            utr: item.utr,\r\n            phone: item.phone,\r\n            money: item.money,\r\n            type: item.type,\r\n            status: item.status,\r\n            today: item.today,\r\n            url: item.url,\r\n            time: item.time,\r\n        }))\r\n    },\r\n    getRechargeByOrderId: async ({ orderId }) => {\r\n        const [recharge] = await connection.query('SELECT * FROM recharge WHERE id_order = ?', [orderId]);\r\n\r\n        if (recharge.length === 0) {\r\n            return null\r\n        }\r\n\r\n        return recharge.map((item) => ({\r\n            id: item.id,\r\n            orderId: item.id_order,\r\n            transactionId: item.transaction_id,\r\n            utr: item.utr,\r\n            phone: item.phone,\r\n            money: item.money,\r\n            type: item.type,\r\n            status: item.status,\r\n            today: item.today,\r\n            url: item.url,\r\n            time: item.time,\r\n        }))?.[0]\r\n    },\r\n    cancelById: async (id) => {\r\n        if (typeof id !== \"number\") {\r\n            throw Error(\"Invalid Recharge 'id' expected a number!\")\r\n        }\r\n\r\n\r\n        await connection.query('UPDATE recharge SET status = 2 WHERE id = ?', [id]);\r\n    },\r\n    setStatusToSuccessByIdAndOrderId: async ({ id, orderId }) => {\r\n        if (typeof id !== \"number\") {\r\n            throw Error(\"Invalid Recharge 'id' expected a number!\")\r\n        }\r\n\r\n\r\n        console.log(id, orderId)\r\n\r\n        const [re] = await connection.query('UPDATE recharge SET status = 1 WHERE id = ? AND id_order = ?', [id, orderId]);\r\n        console.log(re)\r\n    },\r\n    getCurrentTimeForTodayField: () => {\r\n        return moment().format(\"YYYY-DD-MM h:mm:ss A\")\r\n    },\r\n    getDMYDateOfTodayFiled: (today) => {\r\n        return moment(today, \"YYYY-DD-MM h:mm:ss A\").format(\"DD-MM-YYYY\")\r\n    },\r\n    create: async (newRecharge) => {\r\n\r\n        if (newRecharge.url === undefined || newRecharge.url === null) {\r\n            newRecharge.url = \"0\"\r\n        }\r\n\r\n        await connection.query(\r\n            `INSERT INTO recharge SET id_order = ?, transaction_id = ?, phone = ?, money = ?, type = ?, status = ?, today = ?, url = ?, time = ?, utr = ?`,\r\n            [newRecharge.orderId, newRecharge.transactionId, newRecharge.phone, newRecharge.money, newRecharge.type, newRecharge.status, newRecharge.today, newRecharge.url, newRecharge.time, newRecharge?.utr || \"NULL\"]\r\n        );\r\n\r\n        const [recharge] = await connection.query('SELECT * FROM recharge WHERE id_order = ?', [newRecharge.orderId]);\r\n\r\n        if (recharge.length === 0) {\r\n            throw Error(\"Unable to create recharge!\")\r\n        }\r\n\r\n        return recharge[0]\r\n    }\r\n}\r\n\r\n\r\nconst wowpay = {\r\n    generateSign: (params, secretKey) => {\r\n        let keys = Object.keys(params).sort();\r\n        let string = [];\r\n        for (let key of keys) {\r\n            if (key === 'sign') continue;\r\n            string.push(key + '=' + params[key]);\r\n        }\r\n        let signStr = string.join('&') + '&key=' + secretKey;\r\n\r\n        return crypto.createHash('md5').update(signStr).digest('hex');\r\n    },\r\n    validateSignByKey(signSource, key, retSign) {\r\n        if (key) {\r\n            signSource = signSource + \"&key=\" + key;\r\n        }\r\n\r\n        const signKey = crypto.createHash(\"md5\").update(signSource).digest(\"hex\");\r\n        return signKey === retSign;\r\n    },\r\n    getCurrentDate: () => {\r\n        return moment().format(\"YYYY-MM-DD H:mm:ss\")\r\n    }\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    initiateUPIPayment,\r\n    verifyUPIPayment,\r\n    initiateWowPayPayment,\r\n    verifyWowPayPayment,\r\n    initiateManualUPIPayment,\r\n    addManualUPIPaymentRequest,\r\n    addManualUSDTPaymentRequest,\r\n    initiateManualUSDTPayment,\r\n}"],"mappings":"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","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/dragonController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"// const connection = require(\"../config/connectDB\");\n\n// const Dragon = async (io) => {\n//   try {\n//     const [poolValue] = await connection.execute('SELECT * FROM admin');\n//     console.log(\"Admin Pool Value:\", poolValue);\n//   } catch (error) {\n//     console.error(\"â Error fetching admin pool value:\", error.message);\n//   }\n// };\n// const userDekh = async (req,res) =>{\n//     const auth = req?.cookies?.auth || null;\n//     const [user] = await connection.execute('SELECT phone,money,win_wallet FROM users WHERE token = ?',[auth]);\n//     const query = `\n//   SELECT * \n//   FROM aviator WHERE status != 0\n//   ORDER BY id DESC \n//   LIMIT 30;\n// `;\n// console.log(\"auth-------\",user);\n\n// const [result] = await connection.execute(query);\n// const [betHistory] = await connection.execute(\n//     `SELECT ar.*, a.*, \n//             DATE_FORMAT(ar.time, '%Y-%m-%d %H:%i:%s') AS formatted_time\n//      FROM aviator_result ar\n//      JOIN aviator a ON ar.period = a.id\n//      WHERE ar.phone = ?\n//      ORDER BY ar.period DESC`,  // Reverse order by period\n//     [user[0]?.phone]\n//   );\n\n//     res.render('aviator.ejs', {\n//         csrfToken: 'your_csrf_token',\n//         user: {\n//             currency: 'â¹',\n//             id: 12345,\n//         },\n//         wallet: user[0]?.money+user[0]?.win_wallet,\n//         settings: {\n//             minBetAmount: 10,\n//             maxBetAmount: 10000,\n//         },\n//         phone:user[0]?.phone,\n//         currentGameData: JSON.stringify({ id: 1, name: 'Game Name' }),\n//         result:result,\n//         betHistory:betHistory\n//     });\n// }\n\n// module.exports = { Dragon,userDekh };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIvVXNlcnMvaW5mYXlvdWRpZ2l0YWwvRGVza3RvcC9hdmF0aW9yL0dhb2dhbWVzL3NyYy9jb250cm9sbGVycy8iLCJzb3VyY2VzIjpbImRyYWdvbkNvbnRyb2xsZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gY29uc3QgY29ubmVjdGlvbiA9IHJlcXVpcmUoXCIuLi9jb25maWcvY29ubmVjdERCXCIpO1xuXG4vLyBjb25zdCBEcmFnb24gPSBhc3luYyAoaW8pID0+IHtcbi8vICAgdHJ5IHtcbi8vICAgICBjb25zdCBbcG9vbFZhbHVlXSA9IGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZSgnU0VMRUNUICogRlJPTSBhZG1pbicpO1xuLy8gICAgIGNvbnNvbGUubG9nKFwiQWRtaW4gUG9vbCBWYWx1ZTpcIiwgcG9vbFZhbHVlKTtcbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICBjb25zb2xlLmVycm9yKFwi4p2MIEVycm9yIGZldGNoaW5nIGFkbWluIHBvb2wgdmFsdWU6XCIsIGVycm9yLm1lc3NhZ2UpO1xuLy8gICB9XG4vLyB9O1xuLy8gY29uc3QgdXNlckRla2ggPSBhc3luYyAocmVxLHJlcykgPT57XG4vLyAgICAgY29uc3QgYXV0aCA9IHJlcT8uY29va2llcz8uYXV0aCB8fCBudWxsO1xuLy8gICAgIGNvbnN0IFt1c2VyXSA9IGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZSgnU0VMRUNUIHBob25lLG1vbmV5LHdpbl93YWxsZXQgRlJPTSB1c2VycyBXSEVSRSB0b2tlbiA9ID8nLFthdXRoXSk7XG4vLyAgICAgY29uc3QgcXVlcnkgPSBgXG4vLyAgIFNFTEVDVCAqIFxuLy8gICBGUk9NIGF2aWF0b3IgV0hFUkUgc3RhdHVzICE9IDBcbi8vICAgT1JERVIgQlkgaWQgREVTQyBcbi8vICAgTElNSVQgMzA7XG4vLyBgO1xuLy8gY29uc29sZS5sb2coXCJhdXRoLS0tLS0tLVwiLHVzZXIpO1xuXG5cbi8vIGNvbnN0IFtyZXN1bHRdID0gYXdhaXQgY29ubmVjdGlvbi5leGVjdXRlKHF1ZXJ5KTtcbi8vIGNvbnN0IFtiZXRIaXN0b3J5XSA9IGF3YWl0IGNvbm5lY3Rpb24uZXhlY3V0ZShcbi8vICAgICBgU0VMRUNUIGFyLiosIGEuKiwgXG4vLyAgICAgICAgICAgICBEQVRFX0ZPUk1BVChhci50aW1lLCAnJVktJW0tJWQgJUg6JWk6JXMnKSBBUyBmb3JtYXR0ZWRfdGltZVxuLy8gICAgICBGUk9NIGF2aWF0b3JfcmVzdWx0IGFyXG4vLyAgICAgIEpPSU4gYXZpYXRvciBhIE9OIGFyLnBlcmlvZCA9IGEuaWRcbi8vICAgICAgV0hFUkUgYXIucGhvbmUgPSA/XG4vLyAgICAgIE9SREVSIEJZIGFyLnBlcmlvZCBERVNDYCwgIC8vIFJldmVyc2Ugb3JkZXIgYnkgcGVyaW9kXG4vLyAgICAgW3VzZXJbMF0/LnBob25lXVxuLy8gICApO1xuICBcbiAgXG4gIFxuLy8gICAgIHJlcy5yZW5kZXIoJ2F2aWF0b3IuZWpzJywge1xuLy8gICAgICAgICBjc3JmVG9rZW46ICd5b3VyX2NzcmZfdG9rZW4nLFxuLy8gICAgICAgICB1c2VyOiB7XG4vLyAgICAgICAgICAgICBjdXJyZW5jeTogJ+KCuScsXG4vLyAgICAgICAgICAgICBpZDogMTIzNDUsXG4vLyAgICAgICAgIH0sXG4vLyAgICAgICAgIHdhbGxldDogdXNlclswXT8ubW9uZXkrdXNlclswXT8ud2luX3dhbGxldCxcbi8vICAgICAgICAgc2V0dGluZ3M6IHtcbi8vICAgICAgICAgICAgIG1pbkJldEFtb3VudDogMTAsXG4vLyAgICAgICAgICAgICBtYXhCZXRBbW91bnQ6IDEwMDAwLFxuLy8gICAgICAgICB9LFxuLy8gICAgICAgICBwaG9uZTp1c2VyWzBdPy5waG9uZSxcbi8vICAgICAgICAgY3VycmVudEdhbWVEYXRhOiBKU09OLnN0cmluZ2lmeSh7IGlkOiAxLCBuYW1lOiAnR2FtZSBOYW1lJyB9KSxcbi8vICAgICAgICAgcmVzdWx0OnJlc3VsdCxcbi8vICAgICAgICAgYmV0SGlzdG9yeTpiZXRIaXN0b3J5XG4vLyAgICAgfSk7XG4vLyB9XG5cblxuLy8gbW9kdWxlLmV4cG9ydHMgPSB7IERyYWdvbix1c2VyRGVraCB9O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQSIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":[],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["dragonController.js"],"sourcesContent":["// const connection = require(\"../config/connectDB\");\n\n// const Dragon = async (io) => {\n//   try {\n//     const [poolValue] = await connection.execute('SELECT * FROM admin');\n//     console.log(\"Admin Pool Value:\", poolValue);\n//   } catch (error) {\n//     console.error(\"â Error fetching admin pool value:\", error.message);\n//   }\n// };\n// const userDekh = async (req,res) =>{\n//     const auth = req?.cookies?.auth || null;\n//     const [user] = await connection.execute('SELECT phone,money,win_wallet FROM users WHERE token = ?',[auth]);\n//     const query = `\n//   SELECT * \n//   FROM aviator WHERE status != 0\n//   ORDER BY id DESC \n//   LIMIT 30;\n// `;\n// console.log(\"auth-------\",user);\n\n\n// const [result] = await connection.execute(query);\n// const [betHistory] = await connection.execute(\n//     `SELECT ar.*, a.*, \n//             DATE_FORMAT(ar.time, '%Y-%m-%d %H:%i:%s') AS formatted_time\n//      FROM aviator_result ar\n//      JOIN aviator a ON ar.period = a.id\n//      WHERE ar.phone = ?\n//      ORDER BY ar.period DESC`,  // Reverse order by period\n//     [user[0]?.phone]\n//   );\n  \n  \n  \n//     res.render('aviator.ejs', {\n//         csrfToken: 'your_csrf_token',\n//         user: {\n//             currency: 'â¹',\n//             id: 12345,\n//         },\n//         wallet: user[0]?.money+user[0]?.win_wallet,\n//         settings: {\n//             minBetAmount: 10,\n//             maxBetAmount: 10000,\n//         },\n//         phone:user[0]?.phone,\n//         currentGameData: JSON.stringify({ id: 1, name: 'Game Name' }),\n//         result:result,\n//         betHistory:betHistory\n//     });\n// }\n\n\n// module.exports = { Dragon,userDekh };\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/public/DragonTiger/assets/socket.io/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/public/DragonTiger/assets/socket.io/socket.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const db = require('../../../../config/connectDB');\nconst {\n  updateGameState,\n  getCardResult\n} = require('../gameState');\nfunction socketHandler(io) {\n  let lastPhase = \"betting\";\n  console.log(\"Socket handler initialized. Waiting for connections...\");\n  io.on('connection', socket => {\n    console.log('Client connected:', socket.id);\n    try {\n      const initialState = updateGameState();\n      socket.emit('game_update', initialState);\n      console.log(`Sent initial game_update to ${socket.id}`);\n    } catch (error) {\n      console.error(\"Error sending initial state:\", error);\n    }\n    socket.on(\"place_bet\", async data => {\n      let {\n        userId,\n        card,\n        betAmount,\n        matchId,\n        roundId\n      } = data;\n      userId = userId ?? null;\n      card = card ?? null;\n      betAmount = betAmount ?? null;\n      matchId = matchId ?? null;\n      roundId = roundId ?? null;\n      if (!userId || !card || !betAmount || !matchId || !roundId) {\n        console.warn(\"ð« Invalid bet data received:\", {\n          userId,\n          card,\n          betAmount,\n          matchId,\n          roundId\n        });\n        return socket.emit(\"bet_rejected\", {\n          error: \"Missing required fields.\"\n        });\n      }\n      try {\n        const query = `\n          INSERT INTO dragon_tiger (userId, card, amount, matchId, roundId)\n          VALUES (?, ?, ?, ?, ?)\n        `;\n        const [result] = await db.execute(query, [userId, card, betAmount, matchId, roundId]);\n        console.log(`â Bet stored. Insert ID: ${result.insertId}`);\n        socket.emit(\"bet_accepted\", {\n          id: result.insertId\n        });\n      } catch (err) {\n        console.error(\"â Failed to insert bet:\", err.message);\n        socket.emit(\"bet_rejected\", {\n          error: \"Database error.\"\n        });\n      }\n    });\n    socket.on(\"place_final_bets\", async data => {\n      const {\n        userId,\n        bets,\n        matchId,\n        roundId\n      } = data;\n\n      // Validate all required fields\n      if (!userId || !bets || typeof bets !== 'object' || !matchId || !roundId) {\n        console.error(\"â Missing or invalid data in 'place_final_bets':\", data);\n        socket.emit(\"bet_rejected\", {\n          error: \"Incomplete or invalid bet data.\"\n        });\n        return;\n      }\n      try {\n        const betEntries = Object.entries(bets); // e.g. { Dragon: 100, Tiger: 50 }\n\n        for (const [card, amount] of betEntries) {\n          // Log for debugging\n          console.log(\"ð Attempting to insert bet:\", {\n            userId,\n            card,\n            amount,\n            matchId,\n            roundId\n          });\n          if (typeof amount === 'number' && amount > 0 && card) {\n            await db.execute(`INSERT INTO dragon_tiger (userId, card, amount, matchId, roundId)\n                 VALUES (?, ?, ?, ?, ?)`, [userId, card, amount, matchId, roundId]);\n          } else {\n            console.warn(\"â ï¸ Skipping invalid bet:\", {\n              card,\n              amount\n            });\n          }\n        }\n        console.log(\"â Final bets saved for:\", userId);\n        socket.emit(\"bet_accepted\", {\n          message: \"Bets placed successfully\"\n        });\n      } catch (err) {\n        console.error(\"â Error saving final bets:\", err);\n        socket.emit(\"bet_rejected\", {\n          error: \"Database error.\"\n        });\n      }\n    });\n    socket.on('disconnect', () => {\n      console.log('Client disconnected:', socket.id);\n    });\n  });\n  setInterval(() => {\n    try {\n      const updatedData = updateGameState();\n      io.emit('game_update', updatedData);\n      if (updatedData.phase === \"card_reveal\" && lastPhase !== \"card_reveal\") {\n        const result = getCardResult();\n        console.log(\"Server emitting card_reveal:\", result);\n        io.emit(\"card_reveal\", result);\n      }\n      lastPhase = updatedData.phase;\n    } catch (error) {\n      console.error(\"Error in server interval:\", error);\n    }\n  }, 1000);\n}\nmodule.exports = socketHandler;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["db","require","updateGameState","getCardResult","socketHandler","io","lastPhase","console","log","on","socket","id","initialState","emit","error","data","userId","card","betAmount","matchId","roundId","warn","query","result","execute","insertId","err","message","bets","betEntries","Object","entries","amount","setInterval","updatedData","phase","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/public/DragonTiger/assets/socket.io/","sources":["socket.js"],"sourcesContent":["\nconst db = require('../../../../config/connectDB');\n\n\nconst { updateGameState, getCardResult } = require('../gameState'); \n\nfunction socketHandler(io) {\n  let lastPhase = \"betting\"; \n\n  console.log(\"Socket handler initialized. Waiting for connections...\");\n\n  io.on('connection', (socket) => {\n    console.log('Client connected:', socket.id);\n\n    try {\n        const initialState = updateGameState();\n        socket.emit('game_update', initialState);\n        console.log(`Sent initial game_update to ${socket.id}`);\n    } catch (error) {\n        console.error(\"Error sending initial state:\", error);\n    }\n\n    socket.on(\"place_bet\", async (data) => {\n      let { userId, card, betAmount, matchId, roundId } = data;\n    \n      userId = userId ?? null;\n      card = card ?? null;\n      betAmount = betAmount ?? null;\n      matchId = matchId ?? null;\n      roundId = roundId ?? null;\n    \n      if (!userId || !card || !betAmount || !matchId || !roundId) {\n        console.warn(\"ð« Invalid bet data received:\", { userId, card, betAmount, matchId, roundId });\n        return socket.emit(\"bet_rejected\", { error: \"Missing required fields.\" });\n      }\n    \n      try {\n        const query = `\n          INSERT INTO dragon_tiger (userId, card, amount, matchId, roundId)\n          VALUES (?, ?, ?, ?, ?)\n        `;\n        const [result] = await db.execute(query, [userId, card, betAmount, matchId, roundId]);\n    \n        console.log(`â Bet stored. Insert ID: ${result.insertId}`);\n        socket.emit(\"bet_accepted\", { id: result.insertId });\n    \n      } catch (err) {\n        console.error(\"â Failed to insert bet:\", err.message);\n        socket.emit(\"bet_rejected\", { error: \"Database error.\" });\n      }\n    });\n\n\n    socket.on(\"place_final_bets\", async (data) => {\n        const { userId, bets, matchId, roundId } = data;\n      \n        // Validate all required fields\n        if (!userId || !bets || typeof bets !== 'object' || !matchId || !roundId) {\n          console.error(\"â Missing or invalid data in 'place_final_bets':\", data);\n          socket.emit(\"bet_rejected\", { error: \"Incomplete or invalid bet data.\" });\n          return;\n        }\n      \n        try {\n          const betEntries = Object.entries(bets); // e.g. { Dragon: 100, Tiger: 50 }\n      \n          for (const [card, amount] of betEntries) {\n            // Log for debugging\n            console.log(\"ð Attempting to insert bet:\", { userId, card, amount, matchId, roundId });\n      \n            if (typeof amount === 'number' && amount > 0 && card) {\n              await db.execute(\n                `INSERT INTO dragon_tiger (userId, card, amount, matchId, roundId)\n                 VALUES (?, ?, ?, ?, ?)`,\n                [userId, card, amount, matchId, roundId]\n              );\n            } else {\n              console.warn(\"â ï¸ Skipping invalid bet:\", { card, amount });\n            }\n          }\n      \n          console.log(\"â Final bets saved for:\", userId);\n          socket.emit(\"bet_accepted\", { message: \"Bets placed successfully\" });\n      \n        } catch (err) {\n          console.error(\"â Error saving final bets:\", err);\n          socket.emit(\"bet_rejected\", { error: \"Database error.\" });\n        }\n      });\n      \n    \n\n\n    socket.on('disconnect', () => {\n      console.log('Client disconnected:', socket.id);\n    });\n\n\n  }); \n\n\n  setInterval(() => {\n    try {\n      const updatedData = updateGameState();\n      io.emit('game_update', updatedData);\n\n      if (updatedData.phase === \"card_reveal\" && lastPhase !== \"card_reveal\") {\n        const result = getCardResult();\n        console.log(\"Server emitting card_reveal:\", result);\n        io.emit(\"card_reveal\", result);\n      }\n      lastPhase = updatedData.phase;\n\n    } catch (error) {\n      console.error(\"Error in server interval:\", error);\n    }\n  }, 1000);\n\n}\n\nmodule.exports = socketHandler;"],"mappings":"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","ignoreList":[]}},"mtime":1745557696000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/public/DragonTiger/assets/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/public/DragonTiger/assets/gameState.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"let currentSecond = 30;\nlet inRevealPhase = false;\nfunction generate10DigitId() {\n  return Math.floor(1000000000 + Math.random() * 9000000000).toString();\n}\nlet gameData = {\n  gstatus: \"1\",\n  // \"1\" = betting, \"0\" = paused (card reveal)\n  timer: 30,\n  match_id: \"D/TId\",\n  roundId: generate10DigitId(),\n  title: \"20-20 Dragon Tiger 2\",\n  market: [{\n    MarketName: \"Dragon\",\n    Runners: [{\n      rate: \"2.00\",\n      runnerName: \"Dragon\"\n    }]\n  }, {\n    MarketName: \"Tie\",\n    Runners: [{\n      rate: \"50.00\",\n      runnerName: \"Tie\"\n    }]\n  }, {\n    MarketName: \"Tiger\",\n    Runners: [{\n      rate: \"2.00\",\n      runnerName: \"Tiger\"\n    }]\n  }]\n};\nfunction resetGameState() {\n  currentSecond = 30;\n  inRevealPhase = false;\n  gameData = {\n    ...gameData,\n    // reuse existing structure\n    gstatus: \"1\",\n    timer: 30,\n    roundId: generate10DigitId() // regenerate properly\n  };\n}\nfunction updateGameState() {\n  if (inRevealPhase) {\n    gameData.gstatus = \"0\";\n    gameData.timer = currentSecond;\n    currentSecond--;\n    if (currentSecond < 0) {\n      resetGameState();\n    }\n    return {\n      ...gameData,\n      phase: \"card_reveal\"\n    };\n  } else {\n    gameData.gstatus = currentSecond > 5 ? \"1\" : \"0\";\n    gameData.timer = currentSecond;\n    currentSecond--;\n    if (currentSecond < 0) {\n      inRevealPhase = true;\n      currentSecond = 5;\n    }\n    return {\n      ...gameData,\n      phase: \"betting\"\n    };\n  }\n}\n\n// Simulated card flip\nfunction getCardResult() {\n  const dragon = Math.floor(Math.random() * 13) + 1;\n  const tiger = Math.floor(Math.random() * 13) + 1;\n  let winner = \"Tie\";\n  if (dragon > tiger) winner = \"Dragon\";else if (tiger > dragon) winner = \"Tiger\";\n  return {\n    dragon,\n    tiger,\n    winner\n  };\n}\nmodule.exports = {\n  updateGameState,\n  getCardResult\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjdXJyZW50U2Vjb25kIiwiaW5SZXZlYWxQaGFzZSIsImdlbmVyYXRlMTBEaWdpdElkIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwidG9TdHJpbmciLCJnYW1lRGF0YSIsImdzdGF0dXMiLCJ0aW1lciIsIm1hdGNoX2lkIiwicm91bmRJZCIsInRpdGxlIiwibWFya2V0IiwiTWFya2V0TmFtZSIsIlJ1bm5lcnMiLCJyYXRlIiwicnVubmVyTmFtZSIsInJlc2V0R2FtZVN0YXRlIiwidXBkYXRlR2FtZVN0YXRlIiwicGhhc2UiLCJnZXRDYXJkUmVzdWx0IiwiZHJhZ29uIiwidGlnZXIiLCJ3aW5uZXIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvVXNlcnMvaW5mYXlvdWRpZ2l0YWwvRGVza3RvcC9hdmF0aW9yL0dhb2dhbWVzL3NyYy9wdWJsaWMvRHJhZ29uVGlnZXIvYXNzZXRzLyIsInNvdXJjZXMiOlsiZ2FtZVN0YXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBjdXJyZW50U2Vjb25kID0gMzA7XG5sZXQgaW5SZXZlYWxQaGFzZSA9IGZhbHNlO1xuXG5mdW5jdGlvbiBnZW5lcmF0ZTEwRGlnaXRJZCgpIHtcbiAgcmV0dXJuIE1hdGguZmxvb3IoMTAwMDAwMDAwMCArIE1hdGgucmFuZG9tKCkgKiA5MDAwMDAwMDAwKS50b1N0cmluZygpO1xufVxuXG5sZXQgZ2FtZURhdGEgPSB7XG4gIGdzdGF0dXM6IFwiMVwiLCAvLyBcIjFcIiA9IGJldHRpbmcsIFwiMFwiID0gcGF1c2VkIChjYXJkIHJldmVhbClcbiAgdGltZXI6IDMwLFxuICBtYXRjaF9pZDogXCJEL1RJZFwiLFxuICByb3VuZElkOiBnZW5lcmF0ZTEwRGlnaXRJZCgpLFxuICB0aXRsZTogXCIyMC0yMCBEcmFnb24gVGlnZXIgMlwiLFxuICBtYXJrZXQ6IFtcbiAgICB7XG4gICAgICBNYXJrZXROYW1lOiBcIkRyYWdvblwiLFxuICAgICAgUnVubmVyczogW3sgcmF0ZTogXCIyLjAwXCIsIHJ1bm5lck5hbWU6IFwiRHJhZ29uXCIgfV1cbiAgICB9LFxuICAgIHtcbiAgICAgIE1hcmtldE5hbWU6IFwiVGllXCIsXG4gICAgICBSdW5uZXJzOiBbeyByYXRlOiBcIjUwLjAwXCIsIHJ1bm5lck5hbWU6IFwiVGllXCIgfV1cbiAgICB9LFxuICAgIHtcbiAgICAgIE1hcmtldE5hbWU6IFwiVGlnZXJcIixcbiAgICAgIFJ1bm5lcnM6IFt7IHJhdGU6IFwiMi4wMFwiLCBydW5uZXJOYW1lOiBcIlRpZ2VyXCIgfV1cbiAgICB9XG4gIF1cbn07XG5cbmZ1bmN0aW9uIHJlc2V0R2FtZVN0YXRlKCkge1xuICBjdXJyZW50U2Vjb25kID0gMzA7XG4gIGluUmV2ZWFsUGhhc2UgPSBmYWxzZTtcbiAgZ2FtZURhdGEgPSB7XG4gICAgLi4uZ2FtZURhdGEsIC8vIHJldXNlIGV4aXN0aW5nIHN0cnVjdHVyZVxuICAgIGdzdGF0dXM6IFwiMVwiLFxuICAgIHRpbWVyOiAzMCxcbiAgICByb3VuZElkOiBnZW5lcmF0ZTEwRGlnaXRJZCgpIC8vIHJlZ2VuZXJhdGUgcHJvcGVybHlcbiAgfTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlR2FtZVN0YXRlKCkge1xuICBpZiAoaW5SZXZlYWxQaGFzZSkge1xuICAgIGdhbWVEYXRhLmdzdGF0dXMgPSBcIjBcIjtcbiAgICBnYW1lRGF0YS50aW1lciA9IGN1cnJlbnRTZWNvbmQ7XG4gICAgY3VycmVudFNlY29uZC0tO1xuXG4gICAgaWYgKGN1cnJlbnRTZWNvbmQgPCAwKSB7XG4gICAgICByZXNldEdhbWVTdGF0ZSgpO1xuICAgIH1cblxuICAgIHJldHVybiB7IC4uLmdhbWVEYXRhLCBwaGFzZTogXCJjYXJkX3JldmVhbFwiIH07XG4gIH0gZWxzZSB7XG4gICAgZ2FtZURhdGEuZ3N0YXR1cyA9IGN1cnJlbnRTZWNvbmQgPiA1ID8gXCIxXCIgOiBcIjBcIjtcbiAgICBnYW1lRGF0YS50aW1lciA9IGN1cnJlbnRTZWNvbmQ7XG4gICAgY3VycmVudFNlY29uZC0tO1xuXG4gICAgaWYgKGN1cnJlbnRTZWNvbmQgPCAwKSB7XG4gICAgICBpblJldmVhbFBoYXNlID0gdHJ1ZTtcbiAgICAgIGN1cnJlbnRTZWNvbmQgPSA1O1xuICAgIH1cblxuICAgIHJldHVybiB7IC4uLmdhbWVEYXRhLCBwaGFzZTogXCJiZXR0aW5nXCIgfTtcbiAgfVxufVxuXG4vLyBTaW11bGF0ZWQgY2FyZCBmbGlwXG5mdW5jdGlvbiBnZXRDYXJkUmVzdWx0KCkge1xuICBjb25zdCBkcmFnb24gPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMykgKyAxO1xuICBjb25zdCB0aWdlciA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEzKSArIDE7XG4gIGxldCB3aW5uZXIgPSBcIlRpZVwiO1xuICBpZiAoZHJhZ29uID4gdGlnZXIpIHdpbm5lciA9IFwiRHJhZ29uXCI7XG4gIGVsc2UgaWYgKHRpZ2VyID4gZHJhZ29uKSB3aW5uZXIgPSBcIlRpZ2VyXCI7XG4gIHJldHVybiB7IGRyYWdvbiwgdGlnZXIsIHdpbm5lciB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgdXBkYXRlR2FtZVN0YXRlLCBnZXRDYXJkUmVzdWx0IH07XG4iXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLGFBQWEsR0FBRyxFQUFFO0FBQ3RCLElBQUlDLGFBQWEsR0FBRyxLQUFLO0FBRXpCLFNBQVNDLGlCQUFpQkEsQ0FBQSxFQUFHO0VBQzNCLE9BQU9DLElBQUksQ0FBQ0MsS0FBSyxDQUFDLFVBQVUsR0FBR0QsSUFBSSxDQUFDRSxNQUFNLENBQUMsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQztBQUN2RTtBQUVBLElBQUlDLFFBQVEsR0FBRztFQUNiQyxPQUFPLEVBQUUsR0FBRztFQUFFO0VBQ2RDLEtBQUssRUFBRSxFQUFFO0VBQ1RDLFFBQVEsRUFBRSxPQUFPO0VBQ2pCQyxPQUFPLEVBQUVULGlCQUFpQixDQUFDLENBQUM7RUFDNUJVLEtBQUssRUFBRSxzQkFBc0I7RUFDN0JDLE1BQU0sRUFBRSxD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","map":{"version":3,"names":["currentSecond","inRevealPhase","generate10DigitId","Math","floor","random","toString","gameData","gstatus","timer","match_id","roundId","title","market","MarketName","Runners","rate","runnerName","resetGameState","updateGameState","phase","getCardResult","dragon","tiger","winner","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/public/DragonTiger/assets/","sources":["gameState.js"],"sourcesContent":["let currentSecond = 30;\nlet inRevealPhase = false;\n\nfunction generate10DigitId() {\n  return Math.floor(1000000000 + Math.random() * 9000000000).toString();\n}\n\nlet gameData = {\n  gstatus: \"1\", // \"1\" = betting, \"0\" = paused (card reveal)\n  timer: 30,\n  match_id: \"D/TId\",\n  roundId: generate10DigitId(),\n  title: \"20-20 Dragon Tiger 2\",\n  market: [\n    {\n      MarketName: \"Dragon\",\n      Runners: [{ rate: \"2.00\", runnerName: \"Dragon\" }]\n    },\n    {\n      MarketName: \"Tie\",\n      Runners: [{ rate: \"50.00\", runnerName: \"Tie\" }]\n    },\n    {\n      MarketName: \"Tiger\",\n      Runners: [{ rate: \"2.00\", runnerName: \"Tiger\" }]\n    }\n  ]\n};\n\nfunction resetGameState() {\n  currentSecond = 30;\n  inRevealPhase = false;\n  gameData = {\n    ...gameData, // reuse existing structure\n    gstatus: \"1\",\n    timer: 30,\n    roundId: generate10DigitId() // regenerate properly\n  };\n}\n\nfunction updateGameState() {\n  if (inRevealPhase) {\n    gameData.gstatus = \"0\";\n    gameData.timer = currentSecond;\n    currentSecond--;\n\n    if (currentSecond < 0) {\n      resetGameState();\n    }\n\n    return { ...gameData, phase: \"card_reveal\" };\n  } else {\n    gameData.gstatus = currentSecond > 5 ? \"1\" : \"0\";\n    gameData.timer = currentSecond;\n    currentSecond--;\n\n    if (currentSecond < 0) {\n      inRevealPhase = true;\n      currentSecond = 5;\n    }\n\n    return { ...gameData, phase: \"betting\" };\n  }\n}\n\n// Simulated card flip\nfunction getCardResult() {\n  const dragon = Math.floor(Math.random() * 13) + 1;\n  const tiger = Math.floor(Math.random() * 13) + 1;\n  let winner = \"Tie\";\n  if (dragon > tiger) winner = \"Dragon\";\n  else if (tiger > dragon) winner = \"Tiger\";\n  return { dragon, tiger, winner };\n}\n\nmodule.exports = { updateGameState, getCardResult };\n"],"mappings":"AAAA,IAAIA,aAAa,GAAG,EAAE;AACtB,IAAIC,aAAa,GAAG,KAAK;AAEzB,SAASC,iBAAiBA,CAAA,EAAG;EAC3B,OAAOC,IAAI,CAACC,KAAK,CAAC,UAAU,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,CAACC,QAAQ,CAAC,CAAC;AACvE;AAEA,IAAIC,QAAQ,GAAG;EACbC,OAAO,EAAE,GAAG;EAAE;EACdC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE,OAAO;EACjBC,OAAO,EAAET,iBAAiB,CAAC,CAAC;EAC5BU,KAAK,EAAE,sBAAsB;EAC7BC,MAAM,EAAE,CACN;IACEC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAS,CAAC;EAClD,CAAC,EACD;IACEH,UAAU,EAAE,KAAK;IACjBC,OAAO,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAM,CAAC;EAChD,CAAC,EACD;IACEH,UAAU,EAAE,OAAO;IACnBC,OAAO,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAQ,CAAC;EACjD,CAAC;AAEL,CAAC;AAED,SAASC,cAAcA,CAAA,EAAG;EACxBlB,aAAa,GAAG,EAAE;EAClBC,aAAa,GAAG,KAAK;EACrBM,QAAQ,GAAG;IACT,GAAGA,QAAQ;IAAE;IACbC,OAAO,EAAE,GAAG;IACZC,KAAK,EAAE,EAAE;IACTE,OAAO,EAAET,iBAAiB,CAAC,CAAC,CAAC;EAC/B,CAAC;AACH;AAEA,SAASiB,eAAeA,CAAA,EAAG;EACzB,IAAIlB,aAAa,EAAE;IACjBM,QAAQ,CAACC,OAAO,GAAG,GAAG;IACtBD,QAAQ,CAACE,KAAK,GAAGT,aAAa;IAC9BA,aAAa,EAAE;IAEf,IAAIA,aAAa,GAAG,CAAC,EAAE;MACrBkB,cAAc,CAAC,CAAC;IAClB;IAEA,OAAO;MAAE,GAAGX,QAAQ;MAAEa,KAAK,EAAE;IAAc,CAAC;EAC9C,CAAC,MAAM;IACLb,QAAQ,CAACC,OAAO,GAAGR,aAAa,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;IAChDO,QAAQ,CAACE,KAAK,GAAGT,aAAa;IAC9BA,aAAa,EAAE;IAEf,IAAIA,aAAa,GAAG,CAAC,EAAE;MACrBC,aAAa,GAAG,IAAI;MACpBD,aAAa,GAAG,CAAC;IACnB;IAEA,OAAO;MAAE,GAAGO,QAAQ;MAAEa,KAAK,EAAE;IAAU,CAAC;EAC1C;AACF;;AAEA;AACA,SAASC,aAAaA,CAAA,EAAG;EACvB,MAAMC,MAAM,GAAGnB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;EACjD,MAAMkB,KAAK,GAAGpB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;EAChD,IAAImB,MAAM,GAAG,KAAK;EAClB,IAAIF,MAAM,GAAGC,KAAK,EAAEC,MAAM,GAAG,QAAQ,CAAC,KACjC,IAAID,KAAK,GAAGD,MAAM,EAAEE,MAAM,GAAG,OAAO;EACzC,OAAO;IAAEF,MAAM;IAAEC,KAAK;IAAEC;EAAO,CAAC;AAClC;AAEAC,MAAM,CAACC,OAAO,GAAG;EAAEP,eAAe;EAAEE;AAAc,CAAC","ignoreList":[]}},"mtime":1745557696000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/cronJobContronler.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const connection = require(\"../config/connectDB\");\nconst winGoController = require(\"./winGoController\");\nconst k5Controller = require(\"./k5Controller\");\nconst k3Controller = require(\"./k3Controller\");\nconst cron = require('node-cron');\nconst async = require('async');\nconst cronJobGame1p = io => {\n  cron.schedule('*/1 * * * *', async () => {\n    await winGoController.addWinGo(1);\n    await winGoController.handlingWinGo1P(1);\n    const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo\" ORDER BY `id` DESC LIMIT 2 ', []);\n    const data = winGo1; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server', {\n      data: data\n    });\n    await k5Controller.add5D(1);\n    await k5Controller.handling5D(1);\n    const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 1 ORDER BY `id` DESC LIMIT 2 ', []);\n    const data2 = k5D; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server-5d', {\n      data: data2,\n      'game': '1'\n    });\n    await k3Controller.addK3(1);\n    await k3Controller.handlingK3(1);\n    const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 1 ORDER BY `id` DESC LIMIT 2 ', []);\n    const data3 = k3; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server-k3', {\n      data: data3,\n      'game': '1'\n    });\n  });\n  cron.schedule('*/3 * * * *', async () => {\n    await winGoController.addWinGo(3);\n    await winGoController.handlingWinGo1P(3);\n    const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo3\" ORDER BY `id` DESC LIMIT 2 ', []);\n    const data = winGo1; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server', {\n      data: data\n    });\n    await k5Controller.add5D(3);\n    await k5Controller.handling5D(3);\n    const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 3 ORDER BY `id` DESC LIMIT 2 ', []);\n    const data2 = k5D; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server-5d', {\n      data: data2,\n      'game': '3'\n    });\n    await k3Controller.addK3(3);\n    await k3Controller.handlingK3(3);\n    const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 3 ORDER BY `id` DESC LIMIT 2 ', []);\n    const data3 = k3; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server-k3', {\n      data: data3,\n      'game': '3'\n    });\n  });\n  cron.schedule('*/5 * * * *', async () => {\n    await winGoController.addWinGo(5);\n    await winGoController.handlingWinGo1P(5);\n    const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo5\" ORDER BY `id` DESC LIMIT 2 ', []);\n    const data = winGo1; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server', {\n      data: data\n    });\n    await k5Controller.add5D(5);\n    await k5Controller.handling5D(5);\n    const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 5 ORDER BY `id` DESC LIMIT 2 ', []);\n    const data2 = k5D; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server-5d', {\n      data: data2,\n      'game': '5'\n    });\n    await k3Controller.addK3(5);\n    await k3Controller.handlingK3(5);\n    const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 5 ORDER BY `id` DESC LIMIT 2 ', []);\n    const data3 = k3; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server-k3', {\n      data: data3,\n      'game': '5'\n    });\n  });\n  cron.schedule('*/10 * * * *', async () => {\n    await winGoController.addWinGo(10);\n    await winGoController.handlingWinGo1P(10);\n    const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo10\" ORDER BY `id` DESC LIMIT 2 ', []);\n    const data = winGo1; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server', {\n      data: data\n    });\n    await k5Controller.add5D(10);\n    await k5Controller.handling5D(10);\n    const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 10 ORDER BY `id` DESC LIMIT 2 ', []);\n    const data2 = k5D; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server-5d', {\n      data: data2,\n      'game': '10'\n    });\n    await k3Controller.addK3(10);\n    await k3Controller.handlingK3(10);\n    const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 10 ORDER BY `id` DESC LIMIT 2 ', []);\n    const data3 = k3; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\n    io.emit('data-server-k3', {\n      data: data3,\n      'game': '10'\n    });\n  });\n  cron.schedule('* * 0 * * *', async () => {\n    await connection.execute('UPDATE users SET roses_today = ?', [0]);\n    await connection.execute('UPDATE point_list SET money = ?', [0]);\n  });\n  cron.schedule('1 0 * * *', async () => {\n    await connection.execute(`\n            UPDATE users\n            SET \n                prev_daily = CASE\n                    WHEN today_daily = 7 THEN 0\n                    WHEN prev_daily = today_daily THEN prev_daily\n                    ELSE 0\n                END,\n                today_daily = CASE\n                    WHEN today_daily = 7 THEN 1\n                    WHEN prev_daily = today_daily THEN today_daily + 1\n                    ELSE 1\n                END,\n                claimed_today = FALSE\n        `);\n  });\n  cron.schedule('1 0 * * *', async () => {\n    await connection.execute(`\n            UPDATE users\n            SET \n                current_day = CASE\n                    WHEN current_day = 7 THEN 1\n                    ELSE current_day + 1\n                END,\n                weekly_claimed = CASE\n                    WHEN current_day = 7 THEN '0,0,0,0,0,0,0'\n                    ELSE weekly_claimed\n                END\n        `);\n  });\n\n  // partner reward\n  cron.schedule('5 0 * * *', async () => {\n    try {\n      const now = new Date();\n      const tenDaysAgo = new Date(now.getTime() - 10 * 24 * 60 * 60 * 1000);\n      const startOfDay = new Date(tenDaysAgo.setHours(0, 0, 0, 0)).getTime();\n      const endOfDay = new Date(tenDaysAgo.setHours(23, 59, 59, 999)).getTime();\n      const [users] = await connection.execute(`\n            SELECT phone,invite\n            FROM users \n            WHERE time BETWEEN ? AND ?\n        `, [startOfDay, endOfDay]);\n      if (users.length > 0) {\n        for (const user of users) {\n          const [recharges] = await connection.execute(`\n                    SELECT time, money \n                    FROM recharge \n                    WHERE phone = ? \n                    ORDER BY time ASC\n                `, [user.phone]);\n          let firstRecharge = null;\n          let secondRecharge = null;\n          let thirdRecharge = null;\n          let totalRecharge = 0;\n          let bonus1 = 0;\n          let bonus2 = 0;\n          let bonus3 = 0;\n          let invite = user.invite;\n          recharges.forEach((recharge, index) => {\n            totalRecharge += recharge.money;\n            if (index === 0) {\n              firstRecharge = recharge.money;\n            } else if (index === 1) {\n              secondRecharge = recharge.money;\n            } else if (index === 2) {\n              thirdRecharge = recharge.money;\n            }\n          });\n          if (firstRecharge) {\n            if (totalRecharge >= 25000 && firstRecharge >= 5000) {\n              bonus1 = 600;\n            } else if (totalRecharge >= 12500 && firstRecharge >= 2500) {\n              bonus1 = 300;\n            } else if (totalRecharge >= 2500 && firstRecharge >= 500) {\n              bonus1 = 130;\n            } else if (totalRecharge >= 1000 && firstRecharge >= 200) {\n              bonus1 = 60;\n            }\n            if (bonus1 > 0) {\n              await connection.execute('UPDATE users SET win_wallet = win_wallet + ? WHERE code = ?', [bonus1, invite]);\n              const [parent] = connection.execute('SELECT phone from users WHERE code = ?', [invite]);\n              await connection.execute('INSERT INTO partner_reward SET phone = ? , member_phone = ? , type = ? , amount = ?', [parent[0].phone, user.phone, 'First Deposit', bonus1]);\n            }\n          }\n          if (secondRecharge) {\n            if (totalRecharge >= 50000 && secondRecharge >= 10000) {\n              bonus2 = 600;\n            } else if (totalRecharge >= 25000 && secondRecharge >= 5000) {\n              bonus2 = 300;\n            } else if (totalRecharge >= 12500 && secondRecharge >= 2500) {\n              bonus2 = 200;\n            } else if (totalRecharge >= 5000 && secondRecharge >= 1000) {\n              bonus2 = 130;\n            } else if (totalRecharge >= 1500 && secondRecharge >= 300) {\n              bonus2 = 60;\n            }\n            if (bonus2 > 0) {\n              await connection.execute('UPDATE users SET win_wallet = win_wallet + ? WHERE code = ?', [bonus2, invite]);\n              const [parent] = connection.execute('SELECT phone from users WHERE code = ?', [invite]);\n              await connection.execute('INSERT INTO partner_reward SET phone = ? , member_phone = ? , type = ? , amount = ?', [parent[0].phone, user.phone, 'Second Deposit', bonus2]);\n            }\n          }\n          if (thirdRecharge) {\n            if (totalRecharge >= 100000 && thirdRecharge >= 20000) {\n              bonus3 = 600;\n            } else if (totalRecharge >= 50000 && thirdRecharge >= 10000) {\n              bonus3 = 300;\n            } else if (totalRecharge >= 25000 && thirdRecharge >= 5000) {\n              bonus3 = 200;\n            } else if (totalRecharge >= 12500 && thirdRecharge >= 2500) {\n              bonus3 = 130;\n            } else if (totalRecharge >= 5000 && thirdRecharge >= 1000) {\n              bonus3 = 60;\n            }\n            if (bonus3 > 0) {\n              await connection.execute('UPDATE users SET win_wallet = win_wallet + ? WHERE code = ?', [bonus3, invite]);\n              const [parent] = await connection.execute('SELECT phone from users WHERE code = ?', [invite]);\n              await connection.execute('INSERT INTO partner_reward SET phone = ? , member_phone = ? , type = ? , amount = ?', [parent[0].phone, user.phone, 'Third Deposit', bonus3]);\n            }\n          }\n        }\n      } else {\n        console.log('No users found who joined exactly 10 days ago.');\n      }\n    } catch (error) {\n      console.error('Error in cron job:', error);\n    }\n  });\n  const comission = [{\n    level1: 0.6,\n    level2: 0.18,\n    level3: 0.054,\n    level4: 0.016,\n    level5: 0.0048,\n    level6: 0.0014\n  }, {\n    level1: 0.65,\n    level2: 0.21,\n    level3: 0.068,\n    level4: 0.022,\n    level5: 0.0072,\n    level6: 0.0023\n  }, {\n    level1: 0.7,\n    level2: 0.24,\n    level3: 0.085,\n    level4: 0.03,\n    level5: 0.01,\n    level6: 0.0036\n  }, {\n    level1: 0.75,\n    level2: 0.28,\n    level3: 0.1,\n    level4: 0.039,\n    level5: 0.014,\n    level6: 0.0055\n  }, {\n    level1: 0.8,\n    level2: 0.32,\n    level3: 0.12,\n    level4: 0.051,\n    level5: 0.02,\n    level6: 0.0081\n  }, {\n    level1: 0.9,\n    level2: 0.4,\n    level3: 0.18,\n    level4: 0.082,\n    level5: 0.036,\n    level6: 0.016\n  }, {\n    level1: 1,\n    level2: 0.5,\n    level3: 0.25,\n    level4: 0.12,\n    level5: 0.062,\n    level6: 0.031\n  }, {\n    level1: 1.1,\n    level2: 0.6,\n    level3: 0.33,\n    level4: 0.18,\n    level5: 0.1,\n    level6: 0.055\n  }, {\n    level1: 1.2,\n    level2: 0.72,\n    level3: 0.43,\n    level4: 0.25,\n    level5: 0.15,\n    level6: 0.013\n  }, {\n    level1: 1.3,\n    level2: 0.84,\n    level3: 0.54,\n    level4: 0.35,\n    level5: 0.23,\n    level6: 0.15\n  }, {\n    level1: 1.4,\n    level2: 0.98,\n    level3: 0.68,\n    level4: 0.48,\n    level5: 0.33,\n    level6: 0.23\n  }];\n  const todayMidnightTimestamp = new Date().setHours(0, 0, 0, 0);\n  const yesterdayMidnightTimestamp = todayMidnightTimestamp - 24 * 60 * 60 * 1000;\n  const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n  cron.schedule('30 0 * * *', async () => {\n    try {\n      const [users] = await connection.query('SELECT * FROM users');\n      console.log(users, 'users');\n      const batchSize = 100;\n      const batchDelay = 1000;\n      for (let i = 0; i < users.length; i += batchSize) {\n        const userBatch = users.slice(i, i + batchSize);\n        await async.eachLimit(userBatch, 5, async user => {\n          await processUser(user, connection);\n        });\n        await delay(batchDelay);\n      }\n      console.log('completed');\n    } catch (error) {\n      console.error('Error during cron job execution:', error);\n    } finally {\n      connection.release();\n    }\n  });\n  async function processUser(user, connection) {\n    let totalRecharge = 0,\n      totalBet = 0,\n      totalTeam = 0;\n    const inviteLevels = await fetchInviteHierarchy(user.code, connection);\n    totalTeam = inviteLevels.length;\n    let rechargeRecord = [];\n    for (const inviteUser of inviteLevels) {\n      const [rechargeData] = await connection.query(`SELECT money,phone FROM recharge WHERE phone = ? AND time >= ? AND time < ?`, [inviteUser.phone, yesterdayMidnightTimestamp, todayMidnightTimestamp]);\n      rechargeData.forEach(val => {\n        console.log(val, 'recharge val');\n        totalRecharge = totalRecharge + val.money;\n        rechargeRecord.push({\n          ...val,\n          level: inviteUser.member_level\n        });\n      });\n      const betQueries = [`SELECT money,fee FROM minutes_1 WHERE phone = ? AND time >= ? AND time < ?`, `SELECT money FROM result_5d WHERE phone = ? AND time >= ? AND time < ?`, `SELECT money FROM result_k3 WHERE phone = ? AND time >= ? AND time < ?`];\n      for (const query of betQueries) {\n        const [betData] = await connection.query(query, [inviteUser.phone, yesterdayMidnightTimestamp, todayMidnightTimestamp]);\n        console.log(betData, 'betData');\n        betData.forEach(val => {\n          totalBet = totalBet + val.money + (val.fee ? val.fee : 0);\n        });\n      }\n    }\n    console.log(totalTeam, totalBet, totalRecharge, 'team length');\n    const level = calculateUserLevel(totalTeam, totalBet, totalRecharge);\n    console.log(rechargeRecord, 'rechargeData');\n    if (rechargeRecord.length > 0) {\n      rechargeRecord.forEach(async recharge => {\n        await connection.execute('INSERT INTO rebate_record SET rebate_level = ?, phone = ?, level = ?, amount = ?, reward = ?, member_phone = ?', [level, user.phone, recharge.level, recharge.money, comission[level][`level${recharge.level}`] * recharge.money * 0.01, recharge.phone]);\n      });\n    }\n  }\n  function calculateUserLevel(totalTeam, totalBet, totalRecharge) {\n    if (totalTeam >= 5000 && totalBet >= 1500000000 && totalRecharge >= 500000000) return 10;else if (totalTeam >= 1000 && totalBet >= 150000000 && totalRecharge >= 50000000) return 9;else if (totalTeam >= 500 && totalBet >= 30000000 && totalRecharge >= 10000000) return 8;else if (totalTeam >= 100 && totalBet >= 20000000 && totalRecharge >= 4000000) return 7;else if (totalTeam >= 50 && totalBet >= 10000000 && totalRecharge >= 2000000) return 6;else if (totalTeam >= 40 && totalBet >= 5000000 && totalRecharge >= 1000000) return 5;else if (totalTeam >= 30 && totalBet >= 3500000 && totalRecharge >= 700000) return 4;else if (totalTeam >= 20 && totalBet >= 1800000 && totalRecharge >= 300000) return 3;else if (totalTeam >= 10 && totalBet >= 500000 && totalRecharge >= 100000) return 2;else if (totalTeam >= 5 && totalBet >= 100000 && totalRecharge >= 20000) return 1;\n    return 0;\n  }\n  async function fetchInviteHierarchy(code, connection, depth = 1, maxDepth = 6) {\n    const inviteLevels = [];\n    async function recursiveFetch(currentCode, currentDepth) {\n      if (currentDepth > maxDepth) {\n        return;\n      }\n      const [results] = await connection.query('SELECT * FROM users WHERE invite = ?', [currentCode]);\n      if (results.length > 0) {\n        results.forEach(result => {\n          result.member_level = currentDepth;\n        });\n        inviteLevels.push(...results);\n        for (const result of results) {\n          await recursiveFetch(result.code, currentDepth + 1);\n        }\n      }\n    }\n    await recursiveFetch(code, depth);\n    return inviteLevels;\n  }\n  let vipRate = [{\n    level: 0,\n    exp: 0,\n    bonus: 0,\n    rebate: 0\n  }, {\n    level: 1,\n    exp: 3000,\n    bonus: 20,\n    rebate: 0\n  }, {\n    level: 2,\n    exp: 30000,\n    bonus: 80,\n    rebate: 0.3\n  }, {\n    level: 3,\n    exp: 300000,\n    bonus: 290,\n    rebate: 0.35\n  }, {\n    level: 4,\n    exp: 2000000,\n    bonus: 690,\n    rebate: 0.4\n  }, {\n    level: 5,\n    exp: 20000000,\n    bonus: 2690,\n    rebate: 0.45\n  }, {\n    level: 6,\n    exp: 60000000,\n    bonus: 6900,\n    rebate: 0.5\n  }, {\n    level: 7,\n    exp: 100000000,\n    bonus: 26900,\n    rebate: 0.55\n  }, {\n    level: 8,\n    exp: 1000000000,\n    bonus: 69000,\n    rebate: 0.6\n  }, {\n    level: 9,\n    exp: 5000000000,\n    bonus: 269000,\n    rebate: 0.7\n  }, {\n    level: 10,\n    exp: 10000000000,\n    bonus: 690000,\n    rebate: 0.8\n  }];\n\n  // cron.schedule('0 1 21 * *', async () => {\n  //   const [users] = await connection.execute('SELECT phone,vip_level,vip_exp FROM users');\n  //   users.forEach(user=>{\n  //     const query = `\n  //     SELECT COUNT(*) AS row_count\n  //     FROM vip_record\n  //     WHERE time >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m-21 01:00:00')\n  //       AND time <= NOW() AND phone = ${user.phone} AND type = 'Level Up Reward';\n  //   `;\n\n  //   connection.execute(query, async (err, results) => {\n  //     if (err) {\n  //       console.error(err);\n  //     } else {\n  //       const count = results[0].row_count;\n  //       if (count > 0) {\n  //         const bonus = vipRate.filter((val)=>val.level = user.vip_level)[0].bonus;\n  //         if(bonus>0){\n  //           await connection.execute('UPDATE users SET win_wallet = win_wallet + ? where phone = ?',[bonus,user.phone]);\n  //           await connection.execute(`INSERT INTO vip_record set type = \"Monthly Reward\",reward = ?,exp = ?,level = ?,phone = ?`,[closestExpObject.bonus,closestExpObject.exp,closestExpObject.level,updatedUser[0].phone])\n  //         }\n\n  //       } else {\n\n  //       }\n  //     }\n  //   });\n\n  //   })\n  // })\n};\nmodule.exports = {\n  cronJobGame1p\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["connection","require","winGoController","k5Controller","k3Controller","cron","async","cronJobGame1p","io","schedule","addWinGo","handlingWinGo1P","winGo1","execute","data","emit","add5D","handling5D","k5D","data2","addK3","handlingK3","k3","data3","now","Date","tenDaysAgo","getTime","startOfDay","setHours","endOfDay","users","length","user","recharges","phone","firstRecharge","secondRecharge","thirdRecharge","totalRecharge","bonus1","bonus2","bonus3","invite","forEach","recharge","index","money","parent","console","log","error","comission","level1","level2","level3","level4","level5","level6","todayMidnightTimestamp","yesterdayMidnightTimestamp","delay","ms","Promise","resolve","setTimeout","query","batchSize","batchDelay","i","userBatch","slice","eachLimit","processUser","release","totalBet","totalTeam","inviteLevels","fetchInviteHierarchy","code","rechargeRecord","inviteUser","rechargeData","val","push","level","member_level","betQueries","betData","fee","calculateUserLevel","depth","maxDepth","recursiveFetch","currentCode","currentDepth","results","result","vipRate","exp","bonus","rebate","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["cronJobContronler.js"],"sourcesContent":["const connection = require(\"../config/connectDB\");\r\nconst winGoController = require(\"./winGoController\");\r\nconst k5Controller = require(\"./k5Controller\");\r\nconst k3Controller = require(\"./k3Controller\");\r\nconst cron = require('node-cron');\r\nconst async = require('async');\r\n\r\n\r\nconst cronJobGame1p = (io) => {\r\n  cron.schedule('*/1 * * * *', async () => {\r\n    await winGoController.addWinGo(1);\r\n    await winGoController.handlingWinGo1P(1);\r\n    const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo\" ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data = winGo1; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server', { data: data });\r\n\r\n    await k5Controller.add5D(1);\r\n    await k5Controller.handling5D(1);\r\n    const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 1 ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data2 = k5D; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server-5d', { data: data2, 'game': '1' });\r\n\r\n    await k3Controller.addK3(1);\r\n    await k3Controller.handlingK3(1);\r\n    const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 1 ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data3 = k3; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server-k3', { data: data3, 'game': '1' });\r\n  });\r\n\r\n  cron.schedule('*/3 * * * *', async () => {\r\n    await winGoController.addWinGo(3);\r\n    await winGoController.handlingWinGo1P(3);\r\n    const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo3\" ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data = winGo1; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server', { data: data });\r\n\r\n    await k5Controller.add5D(3);\r\n    await k5Controller.handling5D(3);\r\n    const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 3 ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data2 = k5D; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server-5d', { data: data2, 'game': '3' });\r\n\r\n    await k3Controller.addK3(3);\r\n    await k3Controller.handlingK3(3);\r\n    const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 3 ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data3 = k3; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server-k3', { data: data3, 'game': '3' });\r\n  });\r\n\r\n  cron.schedule('*/5 * * * *', async () => {\r\n    await winGoController.addWinGo(5);\r\n    await winGoController.handlingWinGo1P(5);\r\n    const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo5\" ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data = winGo1; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server', { data: data });\r\n\r\n    await k5Controller.add5D(5);\r\n    await k5Controller.handling5D(5);\r\n    const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 5 ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data2 = k5D; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server-5d', { data: data2, 'game': '5' });\r\n\r\n    await k3Controller.addK3(5);\r\n    await k3Controller.handlingK3(5);\r\n    const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 5 ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data3 = k3; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server-k3', { data: data3, 'game': '5' });\r\n  });\r\n\r\n  cron.schedule('*/10 * * * *', async () => {\r\n    await winGoController.addWinGo(10);\r\n    await winGoController.handlingWinGo1P(10);\r\n    const [winGo1] = await connection.execute('SELECT * FROM `wingo` WHERE `game` = \"wingo10\" ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data = winGo1; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server', { data: data });\r\n\r\n\r\n    await k5Controller.add5D(10);\r\n    await k5Controller.handling5D(10);\r\n    const [k5D] = await connection.execute('SELECT * FROM 5d WHERE `game` = 10 ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data2 = k5D; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server-5d', { data: data2, 'game': '10' });\r\n\r\n    await k3Controller.addK3(10);\r\n    await k3Controller.handlingK3(10);\r\n    const [k3] = await connection.execute('SELECT * FROM k3 WHERE `game` = 10 ORDER BY `id` DESC LIMIT 2 ', []);\r\n    const data3 = k3; // Cáº§u má»i chÆ°a cÃ³ káº¿t quáº£\r\n    io.emit('data-server-k3', { data: data3, 'game': '10' });\r\n  });\r\n\r\n  cron.schedule('* * 0 * * *', async () => {\r\n    await connection.execute('UPDATE users SET roses_today = ?', [0]);\r\n    await connection.execute('UPDATE point_list SET money = ?', [0]);\r\n  });\r\n\r\n  cron.schedule('1 0 * * *', async () => {\r\n    await connection.execute(`\r\n            UPDATE users\r\n            SET \r\n                prev_daily = CASE\r\n                    WHEN today_daily = 7 THEN 0\r\n                    WHEN prev_daily = today_daily THEN prev_daily\r\n                    ELSE 0\r\n                END,\r\n                today_daily = CASE\r\n                    WHEN today_daily = 7 THEN 1\r\n                    WHEN prev_daily = today_daily THEN today_daily + 1\r\n                    ELSE 1\r\n                END,\r\n                claimed_today = FALSE\r\n        `);\r\n  });\r\n\r\n\r\n  cron.schedule('1 0 * * *', async () => {\r\n    await connection.execute(`\r\n            UPDATE users\r\n            SET \r\n                current_day = CASE\r\n                    WHEN current_day = 7 THEN 1\r\n                    ELSE current_day + 1\r\n                END,\r\n                weekly_claimed = CASE\r\n                    WHEN current_day = 7 THEN '0,0,0,0,0,0,0'\r\n                    ELSE weekly_claimed\r\n                END\r\n        `);\r\n  });\r\n\r\n\r\n  // partner reward\r\n  cron.schedule('5 0 * * *', async () => {\r\n    try {\r\n      const now = new Date();\r\n      const tenDaysAgo = new Date(now.getTime() - (10 * 24 * 60 * 60 * 1000));\r\n      const startOfDay = new Date(tenDaysAgo.setHours(0, 0, 0, 0)).getTime();\r\n      const endOfDay = new Date(tenDaysAgo.setHours(23, 59, 59, 999)).getTime();\r\n\r\n      const [users] = await connection.execute(`\r\n            SELECT phone,invite\r\n            FROM users \r\n            WHERE time BETWEEN ? AND ?\r\n        `, [startOfDay, endOfDay]);\r\n\r\n      if (users.length > 0) {\r\n        for (const user of users) {\r\n\r\n          const [recharges] = await connection.execute(`\r\n                    SELECT time, money \r\n                    FROM recharge \r\n                    WHERE phone = ? \r\n                    ORDER BY time ASC\r\n                `, [user.phone]);\r\n\r\n          let firstRecharge = null;\r\n          let secondRecharge = null;\r\n          let thirdRecharge = null;\r\n          let totalRecharge = 0;\r\n          let bonus1 = 0;\r\n          let bonus2 = 0;\r\n          let bonus3 = 0;\r\n          let invite = user.invite;\r\n\r\n          recharges.forEach((recharge, index) => {\r\n            totalRecharge += recharge.money;\r\n            if (index === 0) {\r\n              firstRecharge = recharge.money;\r\n            } else if (index === 1) {\r\n              secondRecharge = recharge.money;\r\n            } else if (index === 2) {\r\n              thirdRecharge = recharge.money;\r\n            }\r\n          })\r\n\r\n          if (firstRecharge) {\r\n            if (totalRecharge >= 25000 && firstRecharge >= 5000) {\r\n              bonus1 = 600;\r\n            }\r\n\r\n            else if (totalRecharge >= 12500 && firstRecharge >= 2500) {\r\n              bonus1 = 300;\r\n            }\r\n\r\n            else if (totalRecharge >= 2500 && firstRecharge >= 500) {\r\n              bonus1 = 130;\r\n            }\r\n\r\n            else if (totalRecharge >= 1000 && firstRecharge >= 200) {\r\n              bonus1 = 60;\r\n            }\r\n            if (bonus1 > 0) {\r\n              await connection.execute('UPDATE users SET win_wallet = win_wallet + ? WHERE code = ?', [bonus1, invite])\r\n\r\n              const [parent] = connection.execute('SELECT phone from users WHERE code = ?', [invite]);\r\n\r\n              await connection.execute('INSERT INTO partner_reward SET phone = ? , member_phone = ? , type = ? , amount = ?', [parent[0].phone, user.phone, 'First Deposit', bonus1])\r\n\r\n            }\r\n\r\n          }\r\n\r\n          if (secondRecharge) {\r\n            if (totalRecharge >= 50000 && secondRecharge >= 10000) {\r\n              bonus2 = 600;\r\n            }\r\n\r\n            else if (totalRecharge >= 25000 && secondRecharge >= 5000) {\r\n              bonus2 = 300;\r\n            }\r\n\r\n            else if (totalRecharge >= 12500 && secondRecharge >= 2500) {\r\n              bonus2 = 200;\r\n            }\r\n\r\n            else if (totalRecharge >= 5000 && secondRecharge >= 1000) {\r\n              bonus2 = 130;\r\n            }\r\n            else if (totalRecharge >= 1500 && secondRecharge >= 300) {\r\n              bonus2 = 60;\r\n            }\r\n            if (bonus2 > 0) {\r\n              await connection.execute('UPDATE users SET win_wallet = win_wallet + ? WHERE code = ?', [bonus2, invite])\r\n\r\n              const [parent] = connection.execute('SELECT phone from users WHERE code = ?', [invite]);\r\n\r\n              await connection.execute('INSERT INTO partner_reward SET phone = ? , member_phone = ? , type = ? , amount = ?', [parent[0].phone, user.phone, 'Second Deposit', bonus2])\r\n\r\n            }\r\n          }\r\n\r\n          if (thirdRecharge) {\r\n            if (totalRecharge >= 100000 && thirdRecharge >= 20000) {\r\n              bonus3 = 600;\r\n            }\r\n\r\n            else if (totalRecharge >= 50000 && thirdRecharge >= 10000) {\r\n              bonus3 = 300;\r\n            }\r\n\r\n            else if (totalRecharge >= 25000 && thirdRecharge >= 5000) {\r\n              bonus3 = 200;\r\n            }\r\n\r\n            else if (totalRecharge >= 12500 && thirdRecharge >= 2500) {\r\n              bonus3 = 130;\r\n            }\r\n            else if (totalRecharge >= 5000 && thirdRecharge >= 1000) {\r\n              bonus3 = 60;\r\n            }\r\n\r\n            if (bonus3 > 0) {\r\n              await connection.execute('UPDATE users SET win_wallet = win_wallet + ? WHERE code = ?', [bonus3, invite])\r\n\r\n              const [parent] = await connection.execute('SELECT phone from users WHERE code = ?', [invite]);\r\n\r\n              await connection.execute('INSERT INTO partner_reward SET phone = ? , member_phone = ? , type = ? , amount = ?', [parent[0].phone, user.phone, 'Third Deposit', bonus3])\r\n\r\n            }\r\n          }\r\n\r\n        }\r\n      } else {\r\n        console.log('No users found who joined exactly 10 days ago.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in cron job:', error);\r\n    }\r\n  });\r\n\r\n\r\n  const comission = [\r\n    { level1: 0.6, level2: 0.18, level3: 0.054, level4: 0.016, level5: 0.0048, level6: 0.0014 },\r\n    { level1: 0.65, level2: 0.21, level3: 0.068, level4: 0.022, level5: 0.0072, level6: 0.0023 },\r\n    { level1: 0.7, level2: 0.24, level3: 0.085, level4: 0.03, level5: 0.01, level6: 0.0036 },\r\n    { level1: 0.75, level2: 0.28, level3: 0.1, level4: 0.039, level5: 0.014, level6: 0.0055 },\r\n    { level1: 0.8, level2: 0.32, level3: 0.12, level4: 0.051, level5: 0.02, level6: 0.0081 },\r\n    { level1: 0.9, level2: 0.4, level3: 0.18, level4: 0.082, level5: 0.036, level6: 0.016 },\r\n    { level1: 1, level2: 0.5, level3: 0.25, level4: 0.12, level5: 0.062, level6: 0.031 },\r\n    { level1: 1.1, level2: 0.6, level3: 0.33, level4: 0.18, level5: 0.1, level6: 0.055 },\r\n    { level1: 1.2, level2: 0.72, level3: 0.43, level4: 0.25, level5: 0.15, level6: 0.013 },\r\n    { level1: 1.3, level2: 0.84, level3: 0.54, level4: 0.35, level5: 0.23, level6: 0.15 },\r\n    { level1: 1.4, level2: 0.98, level3: 0.68, level4: 0.48, level5: 0.33, level6: 0.23 }\r\n  ];\r\n\r\n  const todayMidnightTimestamp = new Date().setHours(0, 0, 0, 0);\r\n  const yesterdayMidnightTimestamp = todayMidnightTimestamp - 24 * 60 * 60 * 1000;\r\n\r\n\r\n  const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n  cron.schedule('30 0 * * *', async () => {\r\n    try {\r\n      const [users] = await connection.query('SELECT * FROM users');\r\n      console.log(users, 'users')\r\n      const batchSize = 100;\r\n      const batchDelay = 1000;\r\n\r\n      for (let i = 0; i < users.length; i += batchSize) {\r\n        const userBatch = users.slice(i, i + batchSize);\r\n        await async.eachLimit(userBatch, 5, async (user) => {\r\n          await processUser(user, connection);\r\n        });\r\n\r\n        await delay(batchDelay);\r\n\r\n      }\r\n      console.log('completed')\r\n    } catch (error) {\r\n      console.error('Error during cron job execution:', error);\r\n    } finally {\r\n      connection.release();\r\n    }\r\n  });\r\n\r\n  async function processUser(user, connection) {\r\n    let totalRecharge = 0, totalBet = 0, totalTeam = 0;\r\n\r\n    const inviteLevels = await fetchInviteHierarchy(user.code, connection);\r\n    totalTeam = inviteLevels.length;\r\n\r\n    let rechargeRecord = [];\r\n\r\n\r\n    for (const inviteUser of inviteLevels) {\r\n      const [rechargeData] = await connection.query(\r\n        `SELECT money,phone FROM recharge WHERE phone = ? AND time >= ? AND time < ?`,\r\n        [inviteUser.phone, yesterdayMidnightTimestamp, todayMidnightTimestamp]\r\n      );\r\n      rechargeData.forEach(val => {\r\n        console.log(val, 'recharge val')\r\n        totalRecharge = totalRecharge + val.money;\r\n        rechargeRecord.push({ ...val, level: inviteUser.member_level });\r\n      })\r\n\r\n      const betQueries = [\r\n        `SELECT money,fee FROM minutes_1 WHERE phone = ? AND time >= ? AND time < ?`,\r\n        `SELECT money FROM result_5d WHERE phone = ? AND time >= ? AND time < ?`,\r\n        `SELECT money FROM result_k3 WHERE phone = ? AND time >= ? AND time < ?`\r\n      ];\r\n\r\n      for (const query of betQueries) {\r\n        const [betData] = await connection.query(query, [inviteUser.phone, yesterdayMidnightTimestamp, todayMidnightTimestamp]);\r\n        console.log(betData, 'betData')\r\n        betData.forEach(val => {\r\n          totalBet = totalBet + val.money + (val.fee ? val.fee : 0);\r\n        })\r\n      }\r\n    }\r\n    console.log(totalTeam, totalBet, totalRecharge, 'team length')\r\n    const level = calculateUserLevel(totalTeam, totalBet, totalRecharge);\r\n\r\n    console.log(rechargeRecord, 'rechargeData')\r\n    if (rechargeRecord.length > 0) {\r\n      rechargeRecord.forEach(async (recharge) => {\r\n        await connection.execute('INSERT INTO rebate_record SET rebate_level = ?, phone = ?, level = ?, amount = ?, reward = ?, member_phone = ?', [level, user.phone, recharge.level, recharge.money, comission[level][`level${recharge.level}`] * recharge.money * 0.01, recharge.phone]);\r\n      });\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n  function calculateUserLevel(totalTeam, totalBet, totalRecharge) {\r\n    if (totalTeam >= 5000 && totalBet >= 1500000000 && totalRecharge >= 500000000) return 10;\r\n    else if (totalTeam >= 1000 && totalBet >= 150000000 && totalRecharge >= 50000000) return 9;\r\n    else if (totalTeam >= 500 && totalBet >= 30000000 && totalRecharge >= 10000000) return 8;\r\n    else if (totalTeam >= 100 && totalBet >= 20000000 && totalRecharge >= 4000000) return 7;\r\n    else if (totalTeam >= 50 && totalBet >= 10000000 && totalRecharge >= 2000000) return 6;\r\n    else if (totalTeam >= 40 && totalBet >= 5000000 && totalRecharge >= 1000000) return 5;\r\n    else if (totalTeam >= 30 && totalBet >= 3500000 && totalRecharge >= 700000) return 4;\r\n    else if (totalTeam >= 20 && totalBet >= 1800000 && totalRecharge >= 300000) return 3;\r\n    else if (totalTeam >= 10 && totalBet >= 500000 && totalRecharge >= 100000) return 2;\r\n    else if (totalTeam >= 5 && totalBet >= 100000 && totalRecharge >= 20000) return 1;\r\n    return 0;\r\n  }\r\n\r\n  async function fetchInviteHierarchy(code, connection, depth = 1, maxDepth = 6) {\r\n    const inviteLevels = [];\r\n\r\n    async function recursiveFetch(currentCode, currentDepth) {\r\n      if (currentDepth > maxDepth) {\r\n        return;\r\n      }\r\n\r\n      const [results] = await connection.query('SELECT * FROM users WHERE invite = ?', [currentCode]);\r\n\r\n      if (results.length > 0) {\r\n        results.forEach(result => {\r\n          result.member_level = currentDepth;\r\n        });\r\n\r\n        inviteLevels.push(...results);\r\n\r\n        for (const result of results) {\r\n          await recursiveFetch(result.code, currentDepth + 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    await recursiveFetch(code, depth);\r\n\r\n    return inviteLevels;\r\n  }\r\n\r\n  let vipRate = [\r\n    {\r\n      level: 0,\r\n      exp: 0,\r\n      bonus: 0,\r\n      rebate: 0\r\n    },\r\n    {\r\n      level: 1,\r\n      exp: 3000,\r\n      bonus: 20,\r\n      rebate: 0\r\n    },\r\n    {\r\n      level: 2,\r\n      exp: 30000,\r\n      bonus: 80,\r\n      rebate: 0.3\r\n    },\r\n    {\r\n      level: 3,\r\n      exp: 300000,\r\n      bonus: 290,\r\n      rebate: 0.35\r\n    },\r\n    {\r\n      level: 4,\r\n      exp: 2000000,\r\n      bonus: 690,\r\n      rebate: 0.4\r\n    },\r\n    {\r\n      level: 5,\r\n      exp: 20000000,\r\n      bonus: 2690,\r\n      rebate: 0.45\r\n    },\r\n    {\r\n      level: 6,\r\n      exp: 60000000,\r\n      bonus: 6900,\r\n      rebate: 0.5\r\n    },\r\n    {\r\n      level: 7,\r\n      exp: 100000000,\r\n      bonus: 26900,\r\n      rebate: 0.55\r\n    },\r\n    {\r\n      level: 8,\r\n      exp: 1000000000,\r\n      bonus: 69000,\r\n      rebate: 0.6\r\n    },\r\n    {\r\n      level: 9,\r\n      exp: 5000000000,\r\n      bonus: 269000,\r\n      rebate: 0.7\r\n    },\r\n    {\r\n      level: 10,\r\n      exp: 10000000000,\r\n      bonus: 690000,\r\n      rebate: 0.8\r\n    },\r\n  ]\r\n \r\n  // cron.schedule('0 1 21 * *', async () => {\r\n  //   const [users] = await connection.execute('SELECT phone,vip_level,vip_exp FROM users');\r\n  //   users.forEach(user=>{\r\n  //     const query = `\r\n  //     SELECT COUNT(*) AS row_count\r\n  //     FROM vip_record\r\n  //     WHERE time >= DATE_FORMAT(DATE_SUB(NOW(), INTERVAL 1 MONTH), '%Y-%m-21 01:00:00')\r\n  //       AND time <= NOW() AND phone = ${user.phone} AND type = 'Level Up Reward';\r\n  //   `;\r\n    \r\n  //   connection.execute(query, async (err, results) => {\r\n  //     if (err) {\r\n  //       console.error(err);\r\n  //     } else {\r\n  //       const count = results[0].row_count;\r\n  //       if (count > 0) {\r\n  //         const bonus = vipRate.filter((val)=>val.level = user.vip_level)[0].bonus;\r\n  //         if(bonus>0){\r\n  //           await connection.execute('UPDATE users SET win_wallet = win_wallet + ? where phone = ?',[bonus,user.phone]);\r\n  //           await connection.execute(`INSERT INTO vip_record set type = \"Monthly Reward\",reward = ?,exp = ?,level = ?,phone = ?`,[closestExpObject.bonus,closestExpObject.exp,closestExpObject.level,updatedUser[0].phone])\r\n  //         }\r\n         \r\n  //       } else {\r\n    \r\n  //       }\r\n  //     }\r\n  //   });\r\n    \r\n  //   })\r\n  // })\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n  cronJobGame1p\r\n};"],"mappings":"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","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/socketIoController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const connection = require(\"../config/connectDB\");\nrequire('dotenv').config();\nconst sendMessageAdmin = io => {\n  io.on('connection', socket => {\n    socket.on('data-server', msg => {\n      io.emit('data-server', msg);\n    });\n    socket.on('data-server_2', msg => {\n      io.emit('data-server_2', msg);\n    });\n    socket.on('data-server-5', msg => {\n      io.emit('data-server-5', msg);\n    });\n    socket.on('data-server-3', msg => {\n      io.emit('data-server-3', msg);\n    });\n    // socket.on(\"disconnect\", () => {\n    // console.log('a user disconnect ' + socket.id);\n    // });\n  });\n};\nmodule.exports = {\n  sendMessageAdmin\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb25uZWN0aW9uIiwicmVxdWlyZSIsImNvbmZpZyIsInNlbmRNZXNzYWdlQWRtaW4iLCJpbyIsIm9uIiwic29ja2V0IiwibXNnIiwiZW1pdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9pbmZheW91ZGlnaXRhbC9EZXNrdG9wL2F2YXRpb3IvR2FvZ2FtZXMvc3JjL2NvbnRyb2xsZXJzLyIsInNvdXJjZXMiOlsic29ja2V0SW9Db250cm9sbGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNvbm5lY3Rpb24gPSByZXF1aXJlKFwiLi4vY29uZmlnL2Nvbm5lY3REQlwiKTtcclxucmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7XHJcblxyXG5jb25zdCBzZW5kTWVzc2FnZUFkbWluID0gKGlvKSA9PiB7XHJcbiAgICBpby5vbignY29ubmVjdGlvbicsIChzb2NrZXQpID0+IHtcclxuICAgICAgICBzb2NrZXQub24oJ2RhdGEtc2VydmVyJywgKG1zZykgPT4ge1xyXG4gICAgICAgICAgICBpby5lbWl0KCdkYXRhLXNlcnZlcicsIG1zZyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgc29ja2V0Lm9uKCdkYXRhLXNlcnZlcl8yJywgKG1zZykgPT4ge1xyXG4gICAgICAgICAgICBpby5lbWl0KCdkYXRhLXNlcnZlcl8yJywgbXNnKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBzb2NrZXQub24oJ2RhdGEtc2VydmVyLTUnLCAobXNnKSA9PiB7XHJcbiAgICAgICAgICAgIGlvLmVtaXQoJ2RhdGEtc2VydmVyLTUnLCBtc2cpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHNvY2tldC5vbignZGF0YS1zZXJ2ZXItMycsIChtc2cpID0+IHtcclxuICAgICAgICAgICAgaW8uZW1pdCgnZGF0YS1zZXJ2ZXItMycsIG1zZyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gc29ja2V0Lm9uKFwiZGlzY29ubmVjdFwiLCAoKSA9PiB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ2EgdXNlciBkaXNjb25uZWN0ICcgKyBzb2NrZXQuaWQpO1xyXG4gICAgICAgIC8vIH0pO1xyXG4gICAgfSk7XHJcbn0gXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgc2VuZE1lc3NhZ2VBZG1pbixcclxufSJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBVSxHQUFHQyxPQUFPLENBQUMscUJBQXFCLENBQUM7QUFDakRBLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUM7QUFFMUIsTUFBTUMsZ0JBQWdCLEdBQUlDLEVBQUUsSUFBSztFQUM3QkEsRUFBRSxDQUFDQyxFQUFFLENBQUMsWUFBWSxFQUFHQyxNQUFNLElBQUs7SUFDNUJBLE1BQU0sQ0FBQ0QsRUFBRSxDQUFDLGFBQWEsRUFBR0UsR0FBRyxJQUFLO01BQzlCSCxFQUFFLENBQUNJLElBQUksQ0FBQyxhQUFhLEVBQUVELEdBQUcsQ0FBQztJQUMvQixDQUFDLENBQUM7SUFDRkQsTUFBTSxDQUFDRCxFQUFFLENBQUMsZUFBZSxFQUFHRSxHQUFHLElBQUs7TUFDaENILEVBQUUsQ0FBQ0ksSUFBSSxDQUFDLGVBQWUsRUFBRUQsR0FBRyxDQUFDO0lBQ2pDLENBQUMsQ0FBQztJQUNGRCxNQUFNLENBQUNELEVBQUUsQ0FBQyxlQUFlLEVBQUdFLEdBQUcsSUFBSztNQUNoQ0gsRUFBRSxDQUFDSSxJQUFJLENBQUMsZUFBZSxFQUFFRCxHQUFHLENBQUM7SUFDakMsQ0FBQyxDQUFDO0lBQ0ZELE1BQU0sQ0FBQ0QsRUFBRSxDQUFDLGVBQWUsRUFBR0UsR0FBRyxJQUFLO01BQ2hDSCxFQUFFLENBQUNJLElBQUksQ0FBQyxlQUFlLEVBQUVELEdBQUcsQ0FBQztJQUNqQyxDQUFDLENBQUM7SUFDRjtJQUNBO0lBQ0E7RUFDSixDQUFDLENBQUM7QUFDTixDQUFDO0FBQ0RFLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQ2JQO0FBQ0osQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["connection","require","config","sendMessageAdmin","io","on","socket","msg","emit","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["socketIoController.js"],"sourcesContent":["const connection = require(\"../config/connectDB\");\r\nrequire('dotenv').config();\r\n\r\nconst sendMessageAdmin = (io) => {\r\n    io.on('connection', (socket) => {\r\n        socket.on('data-server', (msg) => {\r\n            io.emit('data-server', msg);\r\n        });\r\n        socket.on('data-server_2', (msg) => {\r\n            io.emit('data-server_2', msg);\r\n        });\r\n        socket.on('data-server-5', (msg) => {\r\n            io.emit('data-server-5', msg);\r\n        });\r\n        socket.on('data-server-3', (msg) => {\r\n            io.emit('data-server-3', msg);\r\n        });\r\n        // socket.on(\"disconnect\", () => {\r\n        // console.log('a user disconnect ' + socket.id);\r\n        // });\r\n    });\r\n} \r\nmodule.exports = {\r\n    sendMessageAdmin,\r\n}"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACjDA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAE1B,MAAMC,gBAAgB,GAAIC,EAAE,IAAK;EAC7BA,EAAE,CAACC,EAAE,CAAC,YAAY,EAAGC,MAAM,IAAK;IAC5BA,MAAM,CAACD,EAAE,CAAC,aAAa,EAAGE,GAAG,IAAK;MAC9BH,EAAE,CAACI,IAAI,CAAC,aAAa,EAAED,GAAG,CAAC;IAC/B,CAAC,CAAC;IACFD,MAAM,CAACD,EAAE,CAAC,eAAe,EAAGE,GAAG,IAAK;MAChCH,EAAE,CAACI,IAAI,CAAC,eAAe,EAAED,GAAG,CAAC;IACjC,CAAC,CAAC;IACFD,MAAM,CAACD,EAAE,CAAC,eAAe,EAAGE,GAAG,IAAK;MAChCH,EAAE,CAACI,IAAI,CAAC,eAAe,EAAED,GAAG,CAAC;IACjC,CAAC,CAAC;IACFD,MAAM,CAACD,EAAE,CAAC,eAAe,EAAGE,GAAG,IAAK;MAChCH,EAAE,CAACI,IAAI,CAAC,eAAe,EAAED,GAAG,CAAC;IACjC,CAAC,CAAC;IACF;IACA;IACA;EACJ,CAAC,CAAC;AACN,CAAC;AACDE,MAAM,CAACC,OAAO,GAAG;EACbP;AACJ,CAAC","ignoreList":[]}},"mtime":1745557695000},"{\"assumptions\":{},\"sourceRoot\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"filename\":\"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/aviatorController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/infayoudigital/Desktop/avatior/Gaogames\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.5:development":{"value":{"code":"const connection = require(\"../config/connectDB\");\nconst Aviator = async io => {\n  let current_Value = 1.00;\n  let speed = 0.5;\n  let isFlying = true;\n  let multiplierInterval;\n  let betArray = [];\n  let [poolValue] = await connection.execute('SELECT total_pool FROM admin');\n  let [periodData] = await connection.execute('SELECT id FROM aviator WHERE status = 0');\n  let currentPeriod = periodData[0]?.id;\n  let pool = parseFloat(poolValue[0]?.total_pool);\n  let flagPool = pool;\n  let crashValue = 20;\n  let amountToDistribute = 0;\n  let totalAmount;\n  let adminSet = 0;\n  calculateCrash();\n  startMultiplierCalculation();\n  async function reduceWallet(amount, phone, bet) {\n    const [user] = await connection.execute('select money,win_wallet from users where phone = ?', [phone]);\n    let wallet = user[0].money;\n    let win = user[0].win_wallet;\n    if (bet > wallet + win) {\n      return {\n        status: false\n      };\n    }\n    if (amount > wallet + win) {\n      return {\n        status: false\n      };\n    } else {\n      wallet = wallet - amount;\n      if (wallet < 0) {\n        win = win + wallet;\n        wallet = 0;\n      }\n      await connection.execute('UPDATE users SET money = ? , win_wallet = ? where phone = ?', [wallet, win, phone]);\n      return {\n        status: true,\n        wallet: win + wallet\n      };\n    }\n  }\n  function getRandomBetween(max) {\n    let randomValue;\n    do {\n      randomValue = Math.random() * (max - 1) + 1;\n    } while (randomValue === 1 || randomValue === max);\n    return randomValue;\n  }\n  function startMultiplierCalculation() {\n    const acceleration = 0.00005;\n    // const acceleration = 0.5; \n\n    multiplierInterval = setInterval(() => {\n      // Increase the multiplier based on the current speed\n      current_Value += speed;\n\n      // Increase the speed over time to add acceleration\n      if (current_Value < 5) {\n        speed += acceleration;\n      } else if (current_Value < 20) {\n        speed += acceleration * 4;\n      } else if (current_Value < 50) {\n        speed += acceleration * 20;\n      } else if (current_Value < 50) {\n        speed += acceleration * 50;\n      } else {\n        speed += acceleration * 100;\n      }\n\n      // Check if the current value has reached or exceeded the crash value\n      if (current_Value >= crashValue) {\n        handleCrash(crashValue);\n        clearInterval(multiplierInterval); // Stop the interval\n      }\n\n      // Optional: Log the current value for debugging\n      // console.log(`Current Value: ${current_Value.toFixed(2)}, Speed: ${speed.toFixed(4)}`);\n    }, 100);\n  }\n  async function handleCrash(val) {\n    if (val < 1.1) {\n      console.log(val, 'crash value');\n    }\n    console.log(val, 'crash value');\n    crashValue = 5.0;\n\n    // io.emit('crash', { crash: val,period:currentPeriod });\n    isFlying = false;\n\n    //  isFlying = false;\n\n    if (betArray.length > 0) {\n      await insertBetResults();\n    }\n    betArray = [];\n    const [oldPool] = await connection.execute('select total_pool from admin');\n    console.log(oldPool[0].total_pool, flagPool, 'pool comarison');\n    if (oldPool[0].total_pool == flagPool) {\n      await connection.execute('UPDATE admin SET total_pool = ?', [pool + amountToDistribute]);\n    }\n    const [updatedPool] = await connection.execute('SELECT total_pool FROM admin');\n    pool = parseFloat(updatedPool[0].total_pool);\n    flagPool = pool;\n    amountToDistribute = 0;\n    await connection.execute('UPDATE aviator SET status = ?, result = ? WHERE status = 0', [1, val]);\n    await connection.execute('INSERT INTO aviator SET status = 0');\n    const [newPeriod] = await connection.execute('SELECT id FROM aviator WHERE status = 0');\n    currentPeriod = newPeriod[0].id;\n    const [result] = await connection.execute('select aviator from admin');\n    let adminValue = result[0].aviator;\n\n    // await connection.execute('UPDATE admin SET aviator = ?',[0.00]);\n\n    setTimeout(() => {\n      current_Value = 1;\n      speed = 0.01;\n      setTimeout(() => {\n        isFlying = true;\n        if (adminValue != 0) {\n          crashValue = parseFloat(adminValue);\n        } else {\n          calculateCrash();\n        }\n        io.emit('newbet', betArray);\n        io.emit(\"crashv\", {\n          crash: crashValue,\n          period: currentPeriod\n        });\n        startMultiplierCalculation();\n      }, 1000);\n    }, 6000);\n  }\n  async function insertBetResults() {\n    const placeholders = betArray.map(() => '(?, ?, ?, ?, ?, ?)').join(', ');\n    const query = `INSERT INTO aviator_result (phone, amount, type, period, crash, status) VALUES ${placeholders}`;\n    const values = betArray.flatMap(bet => [bet.phone, parseInt(bet.bet_amount, 10) || 0, parseInt(bet.bet_type, 10) || 0, currentPeriod, parseFloat(bet.cashout) || 0.0, bet.status || 0]);\n    try {\n      await connection.execute(query, values);\n    } catch (error) {\n      console.error(\"Error inserting bet data:\", error);\n    }\n  }\n  function calculateCrash() {\n    totalAmount = betArray.reduce((acc, bet) => acc + parseInt(bet.bet_amount), 0);\n    console.log(totalAmount, '_', betArray, 'bet array');\n    if (betArray.length < 1) {\n      console.log('case1');\n      const randomNum = Math.floor(Math.random() * 10) + 1;\n      if (randomNum == 7) {\n        crashValue = 1.00;\n      } else if (randomNum == 1 || randomNum == 6) {\n        crashValue = getRandomBetween(5);\n      } else if (randomNum == 2) {\n        crashValue = getRandomBetween(10);\n      } else if (randomNum == 3) {\n        crashValue = getRandomBetween(30);\n      } else if (randomNum == 4) {\n        crashValue = getRandomBetween(100);\n      } else if (randomNum == 5) {\n        crashValue = getRandomBetween(200);\n      } else {\n        crashValue = getRandomBetween(300);\n      }\n\n      // console.log('step1')\n      // crashValue = 10.00;\n      return;\n    }\n    if (betArray.length <= 5 && totalAmount <= 300 || betArray.length == 1) {\n      console.log('case2');\n      const randomNum = Math.floor(Math.random() * 10) + 1;\n      if (randomNum <= 2) {\n        console.log('step1');\n        crashValue = 1.00;\n        return;\n      }\n      console.log('step2');\n      const maxValue = pool * 0.25 / totalAmount;\n      crashValue = maxValue <= 1 ? 1.00 : getRandomBetween(maxValue);\n    } else {\n      console.log('step3');\n      amountToDistribute = totalAmount / 2;\n    }\n  }\n  async function updateBetStatus(msg) {\n    betArray = betArray.map(bet => bet.phone === msg.phone && bet.section_no === msg.section_no ? {\n      ...bet,\n      status: 1,\n      cashout: msg.crashOut\n    } : bet);\n    await connection.execute('UPDATE users SET win_wallet = win_wallet + ? WHERE phone = ?', [parseInt(msg.bet_amount) * msg.crashOut, msg.phone]);\n  }\n  io.on('connection', socket => {\n    console.log('A user connected');\n    socket.on('initialValReq', () => {\n      isFlying = true;\n      current_Value = 1, speed = 0.5;\n      socket.emit('initialVal', {\n        isFlying,\n        current_Value,\n        speed\n      });\n    });\n    socket.on('bet', async (msg, callback) => {\n      console.log('bet', msg);\n      const totalBet = parseFloat(msg.reduce((acc, bet) => acc + parseFloat(bet.bet_amount), 0) / 2);\n      let data = [];\n      for (const [index, val] of msg.entries()) {\n        let data1 = await reduceWallet(parseInt(val.bet_amount), val.phone, totalBet);\n        if (data1.status === false) {\n          data.push(data1);\n          // msg.splice(index, 1);\n          break;\n        } else {\n          console.log('hello at bet');\n          pool = pool + parseFloat(val.bet_amount) / 2;\n          data.push(data1);\n          betArray.push(val);\n        }\n      }\n      // const pooltoAdd = parseFloat(msg.reduce((acc, bet) => acc + parseFloat(bet.bet_amount), 0)/2);\n\n      callback(data);\n    });\n    socket.on('cashout', (msg, callback) => {\n      if (!(betArray.length <= 5 && totalAmount <= 300 || betArray.length === 1) && amountToDistribute < parseInt(msg.bet_amount) * msg.crashOut) {\n        handleCrash(current_Value);\n        clearInterval(multiplierInterval);\n        callback({\n          status: false\n        });\n      } else {\n        pool = pool - parseInt(msg.bet_amount) * msg.crashOut;\n        updateBetStatus(msg);\n        io.emit('cashoutNew', parseInt(msg.bet_amount) * msg.crashOut);\n        callback(true);\n      }\n    });\n    socket.on('getBetHistory', async (msg, callback) => {\n      console.log(msg.phone, msg.period, \"ghjkbhjkbvnmbm\");\n      const [betHistory] = await connection.execute(`SELECT ar.*, a.*, \n                DATE_FORMAT(ar.time, '%Y-%m-%d %H:%i:%s') AS formatted_time\n         FROM aviator_result ar\n         JOIN aviator a ON ar.period = a.id\n         WHERE ar.phone = ? AND ar.period = ?\n         ORDER BY ar.period DESC`,\n      // Reverse order by period\n      [msg.phone, msg.period]);\n      callback(betHistory);\n    });\n    socket.on('betData', callback => {\n      callback(betArray);\n    });\n    socket.on('crashNow', callback => {\n      if (isFlying) {\n        handleCrash(current_Value);\n        io.emit(\"crashv\", {\n          crash: current_Value,\n          period: currentPeriod\n        });\n        clearInterval(multiplierInterval);\n        callback(true);\n      } else {\n        callback(false);\n      }\n    });\n    socket.on('disconnect', () => {\n      console.log('A user disconnected');\n    });\n  });\n};\nmodule.exports = {\n  Aviator\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["connection","require","Aviator","io","current_Value","speed","isFlying","multiplierInterval","betArray","poolValue","execute","periodData","currentPeriod","id","pool","parseFloat","total_pool","flagPool","crashValue","amountToDistribute","totalAmount","adminSet","calculateCrash","startMultiplierCalculation","reduceWallet","amount","phone","bet","user","wallet","money","win","win_wallet","status","getRandomBetween","max","randomValue","Math","random","acceleration","setInterval","handleCrash","clearInterval","val","console","log","length","insertBetResults","oldPool","updatedPool","newPeriod","result","adminValue","aviator","setTimeout","emit","crash","period","placeholders","map","join","query","values","flatMap","parseInt","bet_amount","bet_type","cashout","error","reduce","acc","randomNum","floor","maxValue","updateBetStatus","msg","section_no","crashOut","on","socket","callback","totalBet","data","index","entries","data1","push","betHistory","module","exports"],"sourceRoot":"/Users/infayoudigital/Desktop/avatior/Gaogames/src/controllers/","sources":["aviatorController.js"],"sourcesContent":["const connection = require(\"../config/connectDB\");\r\n\r\nconst Aviator = async (io) => {\r\n  let current_Value = 1.00;\r\n  let speed = 0.5;\r\n  let isFlying = true;\r\n  let multiplierInterval;\r\n  let betArray = [];\r\n  \r\n  let [poolValue] = await connection.execute('SELECT total_pool FROM admin');\r\n  let [periodData] = await connection.execute('SELECT id FROM aviator WHERE status = 0');\r\n  let currentPeriod = periodData[0]?.id;\r\n  let pool = parseFloat(poolValue[0]?.total_pool);\r\n  let flagPool = pool;\r\n  let crashValue = 20;\r\n  let amountToDistribute = 0;\r\n  let totalAmount;\r\n  let adminSet = 0;\r\n  \r\n\r\n  calculateCrash();\r\n  startMultiplierCalculation();\r\n\r\n\r\n\r\n  async function reduceWallet(amount,phone,bet){\r\n    const [user] = await connection.execute('select money,win_wallet from users where phone = ?',[phone]);\r\n    let wallet = user[0].money;\r\n    let win = user[0].win_wallet;\r\n    if(bet>wallet+win){\r\n      return {status:false};\r\n    }\r\n    if(amount>wallet+win){\r\n        return {status:false};\r\n    }\r\n    else{\r\n        wallet = wallet - amount;\r\n        if(wallet<0){\r\n            win = win + wallet;\r\n            wallet = 0 ;\r\n        }\r\n       await connection.execute('UPDATE users SET money = ? , win_wallet = ? where phone = ?',[wallet,win,phone]);\r\n       return {status:true,wallet:win+wallet};\r\n    }\r\n  }\r\n\r\n  function getRandomBetween(max) {\r\n    let randomValue;\r\n    do {\r\n      randomValue = Math.random() * (max - 1) + 1;\r\n    } while (randomValue === 1 || randomValue === max);\r\n    return randomValue;\r\n  }\r\n\r\n  function startMultiplierCalculation() {\r\n    const acceleration = 0.00005; \r\n    // const acceleration = 0.5; \r\n\r\n\r\n     multiplierInterval = setInterval(() => {\r\n        // Increase the multiplier based on the current speed\r\n        current_Value += speed;\r\n\r\n\r\n        // Increase the speed over time to add acceleration\r\n        if(current_Value<5){\r\n          speed += acceleration;\r\n        }\r\n        else if(current_Value<20){\r\n          speed += acceleration*4;\r\n        }\r\n\r\n        else if(current_Value<50){\r\n          speed += acceleration*20;\r\n        }\r\n       \r\n        else if(current_Value<50){\r\n          speed += acceleration*50;\r\n        }\r\n\r\n        else{\r\n          speed += acceleration*100;\r\n        }\r\n\r\n        // Check if the current value has reached or exceeded the crash value\r\n        if (current_Value >= crashValue) {\r\n            handleCrash(crashValue);\r\n            clearInterval(multiplierInterval); // Stop the interval\r\n        }\r\n\r\n        // Optional: Log the current value for debugging\r\n        // console.log(`Current Value: ${current_Value.toFixed(2)}, Speed: ${speed.toFixed(4)}`);\r\n    }, 100);\r\n}\r\n\r\n\r\n  async function handleCrash(val) {\r\n    if(val<1.1){\r\n      console.log(val,'crash value')\r\n    }\r\n\r\n    console.log(val,'crash value');\r\n\r\n    crashValue = 5.0;\r\n    \r\n    // io.emit('crash', { crash: val,period:currentPeriod });\r\n    isFlying = false;\r\n   \r\n    //  isFlying = false;\r\n    \r\n\r\n    if (betArray.length > 0) {\r\n      await insertBetResults();\r\n    }\r\n\r\n    betArray = [];\r\n    const [oldPool] = await connection.execute('select total_pool from admin');\r\n    console.log(oldPool[0].total_pool,flagPool,'pool comarison')\r\n    if(oldPool[0].total_pool==flagPool){\r\n      await connection.execute('UPDATE admin SET total_pool = ?', [pool + amountToDistribute]);\r\n    }\r\n    const [updatedPool] = await connection.execute('SELECT total_pool FROM admin');\r\n    pool = parseFloat(updatedPool[0].total_pool);\r\n    flagPool = pool;\r\n    amountToDistribute = 0;\r\n     \r\n    await connection.execute('UPDATE aviator SET status = ?, result = ? WHERE status = 0', [1, val]);\r\n    await connection.execute('INSERT INTO aviator SET status = 0');\r\n    const [newPeriod] = await connection.execute('SELECT id FROM aviator WHERE status = 0');\r\n    currentPeriod = newPeriod[0].id;\r\n   \r\n    const [result] = await connection.execute('select aviator from admin');\r\n    let adminValue = result[0].aviator;\r\n\r\n    // await connection.execute('UPDATE admin SET aviator = ?',[0.00]);\r\n\r\n\r\n\r\n    setTimeout(() => {\r\n    \r\n      current_Value = 1;\r\n      speed = 0.01;\r\n      setTimeout(()=>{\r\n        isFlying = true;\r\n        if(adminValue != 0){\r\n          crashValue = parseFloat(adminValue);\r\n        }\r\n        else{\r\n          calculateCrash();\r\n        }\r\n      \r\n      io.emit('newbet',betArray);\r\n      io.emit(\"crashv\",{crash:crashValue,period:currentPeriod});\r\n\r\n      startMultiplierCalculation();\r\n      },1000)\r\n      \r\n    }, 6000);\r\n\r\n  }\r\n\r\n  async function insertBetResults() {\r\n    const placeholders = betArray.map(() => '(?, ?, ?, ?, ?, ?)').join(', ');\r\n    const query = `INSERT INTO aviator_result (phone, amount, type, period, crash, status) VALUES ${placeholders}`;\r\n    const values = betArray.flatMap(bet => [\r\n      bet.phone,\r\n      parseInt(bet.bet_amount, 10) || 0,\r\n      parseInt(bet.bet_type, 10) || 0,\r\n      currentPeriod,\r\n      parseFloat(bet.cashout) || 0.0,\r\n      bet.status || 0\r\n    ]);\r\n\r\n    try {\r\n      await connection.execute(query, values);\r\n    } catch (error) {\r\n      console.error(\"Error inserting bet data:\", error);\r\n    }\r\n  }\r\n\r\n  function calculateCrash() {\r\n    totalAmount = betArray.reduce((acc, bet) => acc + parseInt(bet.bet_amount), 0);\r\n\r\n    console.log(totalAmount,'_',betArray,'bet array');\r\n\r\n    if (betArray.length < 1) {\r\n      console.log('case1')\r\n      const randomNum = Math.floor(Math.random() * 10) + 1;\r\n      if(randomNum==7){\r\n        crashValue = 1.00;\r\n      }\r\n      else if(randomNum==1 || randomNum==6){\r\n        crashValue = getRandomBetween(5);\r\n      }\r\n      else if(randomNum==2){\r\n        crashValue = getRandomBetween(10);\r\n      }\r\n      else if(randomNum==3){\r\n        crashValue = getRandomBetween(30);\r\n      }\r\n      else if(randomNum==4){\r\n        crashValue = getRandomBetween(100);\r\n      }\r\n      else if(randomNum==5){\r\n        crashValue = getRandomBetween(200);\r\n      }\r\n    else{\r\n      crashValue = getRandomBetween(300);\r\n    }\r\n\r\n\r\n     \r\n    // console.log('step1')\r\n    // crashValue = 10.00;\r\n      return;\r\n    }\r\n\r\n    if (betArray.length <= 5 && totalAmount<=300 || betArray.length==1) {\r\n      console.log('case2')\r\n      const randomNum = Math.floor(Math.random() * 10) + 1;\r\n      if(randomNum<=2){\r\n        console.log('step1')\r\n      crashValue = 1.00;\r\n        return;\r\n      }\r\n\r\n      console.log('step2')\r\n      const maxValue = (pool*0.25) / totalAmount;\r\n      crashValue = maxValue <= 1 ? 1.00 : getRandomBetween(maxValue);\r\n    } else {\r\n      console.log('step3')\r\n      amountToDistribute = totalAmount / 2;\r\n    }\r\n  }\r\n\r\n async function updateBetStatus(msg) {\r\n    betArray = betArray.map(bet => (\r\n      bet.phone === msg.phone && bet.section_no === msg.section_no\r\n        ? { ...bet, status: 1,cashout:msg.crashOut}\r\n        : bet\r\n    ))\r\n    await connection.execute('UPDATE users SET win_wallet = win_wallet + ? WHERE phone = ?',[parseInt(msg.bet_amount)*msg.crashOut,msg.phone]);\r\n  }\r\n\r\n  io.on('connection', (socket) => {\r\n    console.log('A user connected');\r\n\r\n\r\n    socket.on('initialValReq', () => {\r\n      isFlying =true\r\n      current_Value = 1,\r\n      speed = 0.5\r\n      socket.emit('initialVal', { isFlying , current_Value,speed});\r\n    });\r\n\r\n    socket.on('bet', async (msg, callback) => {\r\n      console.log('bet',msg)\r\n\r\n      const totalBet = parseFloat(msg.reduce((acc, bet) => acc + parseFloat(bet.bet_amount), 0)/2);\r\n        \r\n        let data = [];\r\n    \r\n        for (const [index, val] of msg.entries()) {\r\n            let data1 = await reduceWallet(parseInt(val.bet_amount), val.phone,totalBet);\r\n            \r\n            if (data1.status === false) {\r\n                data.push(data1);\r\n                // msg.splice(index, 1);\r\n                break;\r\n\r\n\r\n            } \r\n            else{\r\n              console.log('hello at bet')\r\n              pool = pool + parseFloat(val.bet_amount)/2;\r\n              data.push(data1);\r\n              betArray.push(val);\r\n            }\r\n           \r\n               \r\n        }\r\n        // const pooltoAdd = parseFloat(msg.reduce((acc, bet) => acc + parseFloat(bet.bet_amount), 0)/2);\r\n       \r\n      \r\n        callback(data);\r\n    });\r\n    \r\n\r\n    socket.on('cashout', (msg, callback) => {\r\n      if (!(betArray.length <= 5 && totalAmount <= 300 || betArray.length === 1) && amountToDistribute < parseInt(msg.bet_amount) * msg.crashOut) {\r\n        handleCrash(current_Value);\r\n        clearInterval(multiplierInterval);\r\n        callback({status:false})\r\n      } else {\r\n        pool = pool - parseInt(msg.bet_amount)*msg.crashOut;\r\n        updateBetStatus(msg);\r\n        io.emit('cashoutNew',parseInt(msg.bet_amount)*msg.crashOut)\r\n        callback(true);\r\n      }\r\n      \r\n    });\r\n\r\n    socket.on('getBetHistory',async (msg,callback)=>{\r\n      console.log(msg.phone,msg.period,\"ghjkbhjkbvnmbm\")\r\n      const [betHistory] = await connection.execute(\r\n        `SELECT ar.*, a.*, \r\n                DATE_FORMAT(ar.time, '%Y-%m-%d %H:%i:%s') AS formatted_time\r\n         FROM aviator_result ar\r\n         JOIN aviator a ON ar.period = a.id\r\n         WHERE ar.phone = ? AND ar.period = ?\r\n         ORDER BY ar.period DESC`,  // Reverse order by period\r\n        [msg.phone,msg.period]\r\n      );\r\n      callback(betHistory);\r\n    })\r\n\r\n    socket.on('betData', (callback) => { \r\n\r\n      callback(betArray);\r\n  });\r\n\r\n  socket.on('crashNow',(callback)=>{\r\n     if(isFlying){\r\n      handleCrash(current_Value);\r\n      io.emit(\"crashv\",{crash:current_Value,period:currentPeriod})\r\n      clearInterval(multiplierInterval);\r\n      callback(true)\r\n     }\r\n     else{\r\n        callback(false);\r\n     }\r\n  })\r\n  \r\n\r\n    socket.on('disconnect', () => {\r\n      console.log('A user disconnected');\r\n    });\r\n  });\r\n};\r\n\r\nmodule.exports = { Aviator };\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1745747448961}}